{
    "sourceFile": "src/components/AppLayout.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1755989259826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755991003411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import { useState } from 'react'\n import React, { useState } from 'react'\n import { Outlet, useNavigate, useLocation } from 'react-router-dom'\n import { useAuth } from '../contexts/AuthContext'\n import { USER_ROLES, ROLE_LABELS } from '../constants/auth'\n"
                }
            ],
            "date": 1755989259826,
            "name": "Commit-0",
            "content": "import { useState } from 'react'\nimport React, { useState } from 'react'\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\nimport { USER_ROLES, ROLE_LABELS } from '../constants/auth'\nimport {\n  Bell,\n  ChevronDown,\n  GraduationCap,\n  Home,\n  Users,\n  BookOpen,\n  Calendar,\n  DollarSign,\n  Settings,\n  LogOut,\n  Menu,\n  X,\n  UserCheck,\n  ClipboardList,\n  BarChart3,\n  FileText,\n  Shield,\n  Search,\n} from 'lucide-react'\nimport { cn } from '../lib/utils'\nimport GlobalSearch from './ui/GlobalSearch'\nimport NotificationPanel from './ui/NotificationPanel'\nimport DarkModeToggle from './ui/DarkModeToggle'\n\nconst AppLayout = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false)\n  const [searchOpen, setSearchOpen] = useState(false)\n  const [notificationsOpen, setNotificationsOpen] = useState(false)\n  const { user, logout, updateUser } = useAuth()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  // Keyboard shortcuts\n  React.useEffect(() => {\n    const handleKeyDown = event => {\n      // Cmd/Ctrl + K for search\n      if ((event.metaKey || event.ctrlKey) && event.key === 'k') {\n        event.preventDefault()\n        setSearchOpen(true)\n      }\n      // Escape to close modals\n      if (event.key === 'Escape') {\n        setSearchOpen(false)\n        setNotificationsOpen(false)\n        setProfileMenuOpen(false)\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [])\n\n  const handleLogout = () => {\n    logout()\n    navigate('/login')\n  }\n\n  const handleRoleSwitch = newRole => {\n    const updatedUser = { ...user, role: newRole }\n    updateUser(updatedUser)\n    navigate(`/dashboard/${newRole}`)\n    setProfileMenuOpen(false)\n  }\n\n  // Role-based menu items\n  const getMenuItems = role => {\n    const commonItems = [\n      { name: 'Dashboard', href: `/dashboard/${role}`, icon: Home },\n      { name: 'Calendar', href: `/dashboard/${role}/calendar`, icon: Calendar },\n      { name: 'Settings', href: `/dashboard/${role}/settings`, icon: Settings },\n    ]\n\n    const roleSpecificItems = {\n      admin: [\n        {\n          name: 'Users Management',\n          href: '/dashboard/admin/users',\n          icon: Users,\n        },\n        {\n          name: 'Schools',\n          href: '/dashboard/admin/schools',\n          icon: GraduationCap,\n        },\n        { name: 'Reports', href: '/dashboard/admin/reports', icon: BarChart3 },\n        {\n          name: 'System Settings',\n          href: '/dashboard/admin/system',\n          icon: Shield,\n        },\n      ],\n      principal: [\n        {\n          name: 'Teachers',\n          href: '/dashboard/principal/teachers',\n          icon: UserCheck,\n        },\n        {\n          name: 'Students',\n          href: '/dashboard/principal/students',\n          icon: Users,\n        },\n        {\n          name: 'Classes',\n          href: '/dashboard/principal/classes',\n          icon: BookOpen,\n        },\n        {\n          name: 'Reports',\n          href: '/dashboard/principal/reports',\n          icon: FileText,\n        },\n      ],\n      teacher: [\n        {\n          name: 'My Classes',\n          href: '/dashboard/teacher/classes',\n          icon: BookOpen,\n        },\n        { name: 'Students', href: '/dashboard/teacher/students', icon: Users },\n        {\n          name: 'Assignments',\n          href: '/dashboard/teacher/assignments',\n          icon: ClipboardList,\n        },\n        { name: 'Grades', href: '/dashboard/teacher/grades', icon: BarChart3 },\n      ],\n      student: [\n        {\n          name: 'My Courses',\n          href: '/dashboard/student/courses',\n          icon: BookOpen,\n        },\n        {\n          name: 'Assignments',\n          href: '/dashboard/student/assignments',\n          icon: ClipboardList,\n        },\n        { name: 'Grades', href: '/dashboard/student/grades', icon: BarChart3 },\n        {\n          name: 'Schedule',\n          href: '/dashboard/student/schedule',\n          icon: Calendar,\n        },\n      ],\n      parent: [\n        {\n          name: 'My Children',\n          href: '/dashboard/parent/children',\n          icon: Users,\n        },\n        {\n          name: 'Academic Progress',\n          href: '/dashboard/parent/progress',\n          icon: BarChart3,\n        },\n        {\n          name: 'Communications',\n          href: '/dashboard/parent/messages',\n          icon: FileText,\n        },\n        { name: 'Events', href: '/dashboard/parent/events', icon: Calendar },\n      ],\n      accountant: [\n        {\n          name: 'Fee Management',\n          href: '/dashboard/accountant/fees',\n          icon: DollarSign,\n        },\n        {\n          name: 'Payments',\n          href: '/dashboard/accountant/payments',\n          icon: DollarSign,\n        },\n        {\n          name: 'Reports',\n          href: '/dashboard/accountant/reports',\n          icon: FileText,\n        },\n        {\n          name: 'Budgets',\n          href: '/dashboard/accountant/budgets',\n          icon: BarChart3,\n        },\n      ],\n    }\n\n    return [\n      ...commonItems.slice(0, 1), // Dashboard first\n      ...(roleSpecificItems[role] || []),\n      ...commonItems.slice(1), // Calendar and Settings last\n    ]\n  }\n\n  const menuItems = getMenuItems(user?.role || 'student')\n\n  const availableRoles = Object.values(USER_ROLES)\n\n  return (\n    <div className=\"flex h-screen bg-gray-100 dark:bg-gray-900\">\n      {/* Global Search Modal */}\n      <GlobalSearch isOpen={searchOpen} onClose={() => setSearchOpen(false)} />\n\n      {/* Notifications Panel */}\n      <NotificationPanel\n        isOpen={notificationsOpen}\n        onClose={() => setNotificationsOpen(false)}\n      />\n\n      {/* Sidebar */}\n      <div\n        className={cn(\n          'fixed inset-y-0 left-0 z-50 w-64 bg-white dark:bg-gray-800 shadow-lg transform transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0',\n          sidebarOpen ? 'translate-x-0' : '-translate-x-full',\n        )}\n      >\n        <div className=\"flex items-center justify-between h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center\">\n            <GraduationCap className=\"h-8 w-8 text-blue-600\" />\n            <span className=\"ml-2 text-xl font-semibold text-gray-900 dark:text-white\">\n              EduManage\n            </span>\n          </div>\n          <button\n            onClick={() => setSidebarOpen(false)}\n            className=\"lg:hidden p-1 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700\"\n          >\n            <X className=\"h-6 w-6 text-gray-600 dark:text-gray-300\" />\n          </button>\n        </div>\n\n        <nav className=\"mt-6 px-3\">\n          <div className=\"space-y-1\">\n            {menuItems.map(item => {\n              const isActive = location.pathname === item.href\n              return (\n                <button\n                  key={item.name}\n                  onClick={() => {\n                    navigate(item.href)\n                    setSidebarOpen(false)\n                  }}\n                  className={cn(\n                    'w-full flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors',\n                    isActive\n                      ? 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300'\n                      : 'text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white',\n                  )}\n                >\n                  <item.icon className=\"mr-3 h-5 w-5\" />\n                  {item.name}\n                </button>\n              )\n            })}\n          </div>\n        </nav>\n      </div>\n\n      {/* Main content */}\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        {/* Top navigation */}\n        <header className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-between h-16 px-6\">\n            <div className=\"flex items-center\">\n              <button\n                onClick={() => setSidebarOpen(true)}\n                className=\"lg:hidden p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <Menu className=\"h-6 w-6 text-gray-600 dark:text-gray-300\" />\n              </button>\n              <div className=\"ml-4 lg:ml-0\">\n                <h1 className=\"text-lg font-semibold text-gray-900 dark:text-white capitalize\">\n                  {user?.role} Dashboard\n                </h1>\n              </div>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              {/* Global Search */}\n              <button\n                onClick={() => setSearchOpen(true)}\n                className=\"p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors\"\n                title=\"Search\"\n              >\n                <Search className=\"h-5 w-5 text-gray-600 dark:text-gray-300\" />\n              </button>\n\n              {/* Dark Mode Toggle */}\n              <DarkModeToggle />\n\n              {/* Notifications */}\n              <button\n                onClick={() => setNotificationsOpen(true)}\n                className=\"p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800 relative transition-colors\"\n                title=\"Notifications\"\n              >\n                <Bell className=\"h-5 w-5 text-gray-600 dark:text-gray-300\" />\n                <span className=\"absolute top-1 right-1 h-2 w-2 bg-red-500 rounded-full\"></span>\n              </button>\n\n              {/* Profile menu */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setProfileMenuOpen(!profileMenuOpen)}\n                  className=\"flex items-center space-x-3 p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700\"\n                >\n                  <div className=\"h-8 w-8 bg-blue-500 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white text-sm font-medium\">\n                      {user?.name?.charAt(0) || 'U'}\n                    </span>\n                  </div>\n                  <div className=\"hidden md:block text-left\">\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {user?.name || 'User'}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 capitalize\">\n                      {user?.role}\n                    </p>\n                  </div>\n                  <ChevronDown className=\"h-4 w-4 text-gray-600 dark:text-gray-300\" />\n                </button>\n\n                {/* Profile dropdown */}\n                {profileMenuOpen && (\n                  <div className=\"absolute right-0 mt-2 w-56 bg-white dark:bg-gray-800 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 z-50\">\n                    <div className=\"py-1\">\n                      <div className=\"px-4 py-2 border-b border-gray-100 dark:border-gray-700\">\n                        <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                          Switch Role\n                        </p>\n                      </div>\n                      {availableRoles.map(role => (\n                        <button\n                          key={role}\n                          onClick={() => handleRoleSwitch(role)}\n                          className={cn(\n                            'w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700',\n                            user?.role === role\n                              ? 'bg-blue-50 text-blue-700 dark:bg-blue-900 dark:text-blue-300'\n                              : 'text-gray-700 dark:text-gray-300',\n                          )}\n                        >\n                          {ROLE_LABELS[role]}\n                        </button>\n                      ))}\n                      <div className=\"border-t border-gray-100 dark:border-gray-700\">\n                        <button\n                          onClick={handleLogout}\n                          className=\"w-full text-left px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 flex items-center\"\n                        >\n                          <LogOut className=\"mr-2 h-4 w-4\" />\n                          Sign out\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Page content */}\n        <main className=\"flex-1 overflow-auto\">\n          <Outlet />\n        </main>\n      </div>\n\n      {/* Sidebar overlay for mobile */}\n      {sidebarOpen && (\n        <div\n          className=\"fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden\"\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default AppLayout\n"
        }
    ]
}