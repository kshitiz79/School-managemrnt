{
    "sourceFile": "src/lib/api/term.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1755993673755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1755993673755,
            "name": "Commit-0",
            "content": "import mockData from '../mockData'\n\n// Mock API for term management\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const termApi = {\n    // Terms\n    async getTerms() {\n        await delay(500)\n\n        const terms = [{\n                id: 'term-1',\n                name: 'Term 1 Examination 2024-25',\n                type: 'term1',\n                academicYear: '2024-25',\n                startDate: '2024-04-01',\n                endDate: '2024-09-30',\n                description: 'First term examination covering syllabus from April to September',\n                status: 'active',\n                isDefault: true,\n                applicableClasses: [\n                    'class-1',\n                    'class-2',\n                    'class-3',\n                    'class-4',\n                    'class-5',\n                ],\n                subjects: ['math', 'english', 'science', 'social', 'hindi'],\n                examSchedule: {\n                    unitTests: 2,\n                    termExams: 1,\n                    practicals: 1,\n                    projects: 1,\n                },\n                gradingPatternId: 'cbse-pattern-1',\n                gradingPattern: {\n                    name: 'CBSE Grading Pattern',\n                    scale: 'A+ to E',\n                },\n                weightages: {\n                    unitTest: 10,\n                    termExam: 80,\n                    practical: 5,\n                    project: 5,\n                },\n                createdAt: '2024-03-15T10:00:00Z',\n                createdBy: 'Admin',\n            },\n            {\n                id: 'term-2',\n                name: 'Term 2 Examination 2024-25',\n                type: 'term2',\n                academicYear: '2024-25',\n                startDate: '2024-10-01',\n                endDate: '2025-03-31',\n                description: 'Second term examination covering syllabus from October to March',\n                status: 'upcoming',\n                isDefault: false,\n                applicableClasses: [\n                    'class-1',\n                    'class-2',\n                    'class-3',\n                    'class-4',\n                    'class-5',\n                ],\n                subjects: ['math', 'english', 'science', 'social', 'hindi'],\n                examSchedule: {\n                    unitTests: 2,\n                    termExams: 1,\n                    practicals: 1,\n                    projects: 1,\n                },\n                gradingPatternId: 'cbse-pattern-1',\n                gradingPattern: {\n                    name: 'CBSE Grading Pattern',\n                    scale: 'A+ to E',\n                },\n                weightages: {\n                    unitTest: 10,\n                    termExam: 80,\n                    practical: 5,\n                    project: 5,\n                },\n                createdAt: '2024-03-15T10:30:00Z',\n                createdBy: 'Admin',\n            },\n            {\n                id: 'term-3',\n                name: 'Annual Examination 2023-24',\n                type: 'annual',\n                academicYear: '2023-24',\n                startDate: '2023-04-01',\n                endDate: '2024-03-31',\n                description: 'Annual examination for the academic year 2023-24',\n                status: 'completed',\n                isDefault: false,\n                applicableClasses: [\n                    'class-6',\n                    'class-7',\n                    'class-8',\n                    'class-9',\n                    'class-10',\n                ],\n                subjects: ['math', 'english', 'science', 'social', 'hindi', 'computer'],\n                examSchedule: {\n                    unitTests: 4,\n                    termExams: 2,\n                    practicals: 2,\n                    projects: 2,\n                },\n                gradingPatternId: 'cbse-pattern-2',\n                gradingPattern: {\n                    name: 'CBSE Secondary Pattern',\n                    scale: 'Marks + Grades',\n                },\n                weightages: {\n                    unitTest: 20,\n                    termExam: 60,\n                    practical: 10,\n                    project: 10,\n                },\n                createdAt: '2023-03-20T09:00:00Z',\n                createdBy: 'Admin',\n            }\n        ]\n\n        return {\n            success: true,\n            data: terms,\n        };\n    },\n\n    async createTerm(termData) {\n        await delay(600)\n\n        const newTerm = {\n            id: `term-${Date.now()}`,\n            ...termData,\n            createdAt: new Date().toISOString(),\n            createdBy: 'Current User',\n        };\n\n        return {\n            success: true,\n            data: newTerm,\n            message: 'Term created successfully',\n        };\n    },\n\n    async updateTerm(id, termData) {\n        await delay(500)\n\n        return {\n            success: true,\n            data: {\n                id,\n                ...termData,\n                updatedAt: new Date().toISOString(),\n            },\n            message: 'Term updated successfully',\n        };\n    },\n\n    async deleteTerm(id) {\n        await delay(300)\n\n        return {\n            success: true,\n            message: 'Term deleted successfully',\n        };\n    },\n\n    async activateTerm(id) {\n        await delay(400)\n\n        return {\n            success: true,\n            message: 'Term activated successfully',\n        };\n    },\n\n    // Grading Patterns\n    async getGradingPatterns() {\n        await delay(300)\n\n        const patterns = [{\n                id: 'cbse-pattern-1',\n                name: 'CBSE Primary Grading',\n                scale: 'A+ to E',\n                type: 'grade_based',\n                grades: [{\n                        grade: 'A+',\n                        minMarks: 91,\n                        maxMarks: 100,\n                        description: 'Outstanding',\n                    },\n                    { grade: 'A', minMarks: 81, maxMarks: 90, description: 'Excellent' },\n                    { grade: 'B+', minMarks: 71, maxMarks: 80, description: 'Very Good' },\n                    { grade: 'B', minMarks: 61, maxMarks: 70, description: 'Good' },\n                    {\n                        grade: 'C+',\n                        minMarks: 51,\n                        maxMarks: 60,\n                        description: 'Satisfactory',\n                    },\n                    { grade: 'C', minMarks: 41, maxMarks: 50, description: 'Acceptable' },\n                    {\n                        grade: 'D',\n                        minMarks: 33,\n                        maxMarks: 40,\n                        description: 'Needs Improvement',\n                    },\n                    {\n                        grade: 'E',\n                        minMarks: 0,\n                        maxMarks: 32,\n                        description: 'Unsatisfactory',\n                    },\n                ],\n                applicableClasses: [\n                    'class-1',\n                    'class-2',\n                    'class-3',\n                    'class-4',\n                    'class-5',\n                ],\n            },\n            {\n                id: 'cbse-pattern-2',\n                name: 'CBSE Secondary Grading',\n                scale: 'Marks + Grades',\n                type: 'marks_and_grade',\n                grades: [{\n                        grade: 'A1',\n                        minMarks: 91,\n                        maxMarks: 100,\n                        description: 'Outstanding',\n                    },\n                    { grade: 'A2', minMarks: 81, maxMarks: 90, description: 'Excellent' },\n                    { grade: 'B1', minMarks: 71, maxMarks: 80, description: 'Very Good' },\n                    { grade: 'B2', minMarks: 61, maxMarks: 70, description: 'Good' },\n                    {\n                        grade: 'C1',\n                        minMarks: 51,\n                        maxMarks: 60,\n                        description: 'Satisfactory',\n                    },\n                    {\n                        grade: 'C2',\n                        minMarks: 41,\n                        maxMarks: 50,\n                        description: 'Acceptable',\n                    },\n                    {\n                        grade: 'D',\n                        minMarks: 33,\n                        maxMarks: 40,\n                        description: 'Needs Improvement',\n                    },\n                    {\n                        grade: 'E',\n                        minMarks: 0,\n                        maxMarks: 32,\n                        description: 'Unsatisfactory',\n                    },\n                ],\n                applicableClasses: [\n                    'class-6',\n                    'class-7',\n                    'class-8',\n                    'class-9',\n                    'class-10',\n                ],\n            },\n        ]\n\n        return {\n            success: true,\n            data: patterns,\n        };\n    },\n\n    // Utility functions\n    async getClasses() {\n        await delay(200)\n\n        return {\n            success: true,\n            data: mockData.classes,\n        };\n    },\n\n    async getSubjects() {\n        await delay(200)\n\n        return {\n            success: true,\n            data: mockData.subjects,\n        };\n    },\n};"
        }
    ]
}