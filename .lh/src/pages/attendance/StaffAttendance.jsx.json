{
    "sourceFile": "src/pages/attendance/StaffAttendance.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1755986163481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755986649659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useState } from 'react';\n-import { useState } from 'react'\n import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\n import { \n   Calendar,\n   Clock,\n"
                },
                {
                    "date": 1755992055226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,10 +217,10 @@\n       acc[attendance.status] = (acc[attendance.status] || 0) + 1;\n     } else {\n       acc.notMarked = (acc.notMarked || 0) + 1;\n     }\n-    return acc;\n-  }, {});\n+    return acc\n+  }, {}) : {};\n \n   const total = data.length;\n   const present = stats.present || 0;\n   const absent = stats.absent || 0;\n"
                },
                {
                    "date": 1755994925627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-import React, { useState } from 'react';\n-import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\n-import { \n+import React, { useState } from 'react'\n+import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\n+import {\n   Calendar,\n   Clock,\n   User,\n   CheckCircle,\n@@ -13,87 +13,105 @@\n   Edit,\n   Save,\n   Users,\n   TrendingUp,\n-  BarChart3\n-} from 'lucide-react';\n-import Input from '../../components/ui/Input';\n-import Dialog from '../../components/ui/Dialog';\n-import LoadingSkeleton from '../../components/ui/LoadingSkeleton';\n-import { staffAttendanceApi } from '../../lib/api/staffAttendance';\n+  BarChart3,\n+} from 'lucide-react'\n+import Input from '../../components/ui/Input'\n+import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '../../components/ui/Dialog'\n+import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n+import { staffAttendanceApi } from '../../lib/api/staffAttendance'\n \n-const StaffAttendanceCard = ({ staff, attendance, onTimeUpdate, isEditable = true }) => {\n-  const [isEditing, setIsEditing] = useState(false);\n-  const [timeIn, setTimeIn] = useState(attendance?.timeIn || '');\n-  const [timeOut, setTimeOut] = useState(attendance?.timeOut || '');\n-  const [status, setStatus] = useState(attendance?.status || 'present');\n-  const [remarks, setRemarks] = useState(attendance?.remarks || '');\n+const StaffAttendanceCard = ({\n+  staff,\n+  attendance,\n+  onTimeUpdate,\n+  isEditable = true,\n+}) => {\n+  const [isEditing, setIsEditing] = useState(false)\n+  const [timeIn, setTimeIn] = useState(attendance?.timeIn || '')\n+  const [timeOut, setTimeOut] = useState(attendance?.timeOut || '')\n+  const [status, setStatus] = useState(attendance?.status || 'present')\n+  const [remarks, setRemarks] = useState(attendance?.remarks || '')\n \n   const handleSave = () => {\n     onTimeUpdate(staff.id, {\n       status,\n       timeIn,\n       timeOut,\n-      remarks\n-    });\n-    setIsEditing(false);\n-  };\n+      remarks,\n+    })\n+    setIsEditing(false)\n+  }\n \n   const handleCancel = () => {\n-    setTimeIn(attendance?.timeIn || '');\n-    setTimeOut(attendance?.timeOut || '');\n-    setStatus(attendance?.status || 'present');\n-    setRemarks(attendance?.remarks || '');\n-    setIsEditing(false);\n-  };\n+    setTimeIn(attendance?.timeIn || '')\n+    setTimeOut(attendance?.timeOut || '')\n+    setStatus(attendance?.status || 'present')\n+    setRemarks(attendance?.remarks || '')\n+    setIsEditing(false)\n+  }\n \n-  const getStatusColor = (status) => {\n+  const getStatusColor = status => {\n     switch (status) {\n-      case 'present': return 'text-green-600 bg-green-100';\n-      case 'absent': return 'text-red-600 bg-red-100';\n-      case 'late': return 'text-yellow-600 bg-yellow-100';\n-      case 'half-day': return 'text-blue-600 bg-blue-100';\n-      default: return 'text-gray-600 bg-gray-100';\n+      case 'present':\n+        return 'text-green-600 bg-green-100'\n+      case 'absent':\n+        return 'text-red-600 bg-red-100'\n+      case 'late':\n+        return 'text-yellow-600 bg-yellow-100'\n+      case 'half-day':\n+        return 'text-blue-600 bg-blue-100'\n+      default:\n+        return 'text-gray-600 bg-gray-100'\n     }\n-  };\n+  }\n \n   const calculateWorkingHours = () => {\n-    if (!timeIn || !timeOut) return '0:00';\n-    \n-    const inTime = new Date(`2000-01-01 ${timeIn}`);\n-    const outTime = new Date(`2000-01-01 ${timeOut}`);\n-    \n-    if (outTime < inTime) return '0:00';\n-    \n-    const diff = outTime - inTime;\n-    const hours = Math.floor(diff / (1000 * 60 * 60));\n-    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n-    \n-    return `${hours}:${minutes.toString().padStart(2, '0')}`;\n-  };\n+    if (!timeIn || !timeOut) return '0:00'\n \n+    const inTime = new Date(`2000-01-01 ${timeIn}`)\n+    const outTime = new Date(`2000-01-01 ${timeOut}`)\n+\n+    if (outTime < inTime) return '0:00'\n+\n+    const diff = outTime - inTime\n+    const hours = Math.floor(diff / (1000 * 60 * 60))\n+    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n+\n+    return `${hours}:${minutes.toString().padStart(2, '0')}`\n+  }\n+\n   return (\n     <div className=\"bg-white border rounded-lg p-4 hover:shadow-md transition-shadow\">\n       <div className=\"flex justify-between items-start mb-4\">\n         <div className=\"flex items-center gap-3\">\n           <div className=\"w-12 h-12 rounded-full overflow-hidden bg-gray-200\">\n             {staff.avatar ? (\n-              <img src={staff.avatar} alt={staff.name} className=\"w-full h-full object-cover\" />\n+              <img\n+                src={staff.avatar}\n+                alt={staff.name}\n+                className=\"w-full h-full object-cover\"\n+              />\n             ) : (\n               <div className=\"w-full h-full flex items-center justify-center\">\n                 <User className=\"w-6 h-6 text-gray-400\" />\n               </div>\n             )}\n           </div>\n           <div>\n             <h3 className=\"font-medium\">{staff.name}</h3>\n-            <p className=\"text-sm text-gray-500\">{staff.employeeId} • {staff.department}</p>\n+            <p className=\"text-sm text-gray-500\">\n+              {staff.employeeId} • {staff.department}\n+            </p>\n             <p className=\"text-xs text-gray-400\">{staff.role}</p>\n           </div>\n         </div>\n-        \n+\n         <div className=\"flex items-center gap-2\">\n-          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(status)}`}>\n+          <span\n+            className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(status)}`}\n+          >\n             {status.charAt(0).toUpperCase() + status.slice(1)}\n           </span>\n           {isEditable && (\n             <button\n@@ -112,9 +130,9 @@\n             <div>\n               <label className=\"block text-sm font-medium mb-1\">Status</label>\n               <select\n                 value={status}\n-                onChange={(e) => setStatus(e.target.value)}\n+                onChange={e => setStatus(e.target.value)}\n                 className=\"w-full border rounded px-3 py-2 text-sm\"\n               >\n                 <option value=\"present\">Present</option>\n                 <option value=\"absent\">Absent</option>\n@@ -122,44 +140,46 @@\n                 <option value=\"half-day\">Half Day</option>\n               </select>\n             </div>\n             <div>\n-              <label className=\"block text-sm font-medium mb-1\">Working Hours</label>\n+              <label className=\"block text-sm font-medium mb-1\">\n+                Working Hours\n+              </label>\n               <div className=\"text-sm text-gray-600 py-2\">\n                 {calculateWorkingHours()}\n               </div>\n             </div>\n           </div>\n-          \n+\n           {status !== 'absent' && (\n             <div className=\"grid grid-cols-2 gap-4\">\n               <Input\n                 label=\"Time In\"\n                 type=\"time\"\n                 value={timeIn}\n-                onChange={(e) => setTimeIn(e.target.value)}\n+                onChange={e => setTimeIn(e.target.value)}\n                 size=\"sm\"\n               />\n               <Input\n                 label=\"Time Out\"\n                 type=\"time\"\n                 value={timeOut}\n-                onChange={(e) => setTimeOut(e.target.value)}\n+                onChange={e => setTimeOut(e.target.value)}\n                 size=\"sm\"\n               />\n             </div>\n           )}\n-          \n+\n           <div>\n             <label className=\"block text-sm font-medium mb-1\">Remarks</label>\n             <textarea\n               value={remarks}\n-              onChange={(e) => setRemarks(e.target.value)}\n+              onChange={e => setRemarks(e.target.value)}\n               placeholder=\"Add any remarks...\"\n               className=\"w-full border rounded px-3 py-2 text-sm h-16 resize-none\"\n             />\n           </div>\n-          \n+\n           <div className=\"flex justify-end gap-2\">\n             <button\n               onClick={handleCancel}\n               className=\"px-3 py-1 text-sm border rounded hover:bg-gray-50\"\n@@ -196,9 +216,9 @@\n               <span className=\"text-gray-500\">Working Hours:</span>\n               <div className=\"font-medium\">{calculateWorkingHours()}</div>\n             </div>\n           </div>\n-          \n+\n           {remarks && (\n             <div className=\"text-sm\">\n               <span className=\"text-gray-500\">Remarks:</span>\n               <p className=\"text-gray-700 mt-1\">{remarks}</p>\n@@ -206,28 +226,30 @@\n           )}\n         </div>\n       )}\n     </div>\n-  );\n-};\n+  )\n+}\n \n const AttendanceStats = ({ data }) => {\n-  const stats = Array.isArray(data) ? data.reduce((acc, staff) => {\n-    const attendance = staff.attendance;\n-    if (attendance) {\n-      acc[attendance.status] = (acc[attendance.status] || 0) + 1;\n-    } else {\n-      acc.notMarked = (acc.notMarked || 0) + 1;\n-    }\n-    return acc\n-  }, {}) : {};\n+  const stats = Array.isArray(data)\n+    ? data.reduce((acc, staff) => {\n+        const attendance = staff.attendance\n+        if (attendance) {\n+          acc[attendance.status] = (acc[attendance.status] || 0) + 1\n+        } else {\n+          acc.notMarked = (acc.notMarked || 0) + 1\n+        }\n+        return acc\n+      }, {})\n+    : {}\n \n-  const total = data.length;\n-  const present = stats.present || 0;\n-  const absent = stats.absent || 0;\n-  const late = stats.late || 0;\n-  const halfDay = stats['half-day'] || 0;\n-  const notMarked = stats.notMarked || 0;\n+  const total = data.length\n+  const present = stats.present || 0\n+  const absent = stats.absent || 0\n+  const late = stats.late || 0\n+  const halfDay = stats['half-day'] || 0\n+  const notMarked = stats.notMarked || 0\n \n   return (\n     <div className=\"grid grid-cols-2 md:grid-cols-6 gap-4\">\n       <div className=\"bg-white p-4 rounded-lg shadow\">\n@@ -284,94 +306,99 @@\n           </div>\n         </div>\n       </div>\n     </div>\n-  );\n-};\n+  )\n+}\n \n const StaffAttendance = () => {\n-  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n-  const [searchTerm, setSearchTerm] = useState('');\n-  const [departmentFilter, setDepartmentFilter] = useState('all');\n-  const [statusFilter, setStatusFilter] = useState('all');\n-  const [showBulkActions, setShowBulkActions] = useState(false);\n-  const [hasChanges, setHasChanges] = useState(false);\n+  const [selectedDate, setSelectedDate] = useState(\n+    new Date().toISOString().split('T')[0],\n+  )\n+  const [searchTerm, setSearchTerm] = useState('')\n+  const [departmentFilter, setDepartmentFilter] = useState('all')\n+  const [statusFilter, setStatusFilter] = useState('all')\n+  const [showBulkActions, setShowBulkActions] = useState(false)\n+  const [hasChanges, setHasChanges] = useState(false)\n \n-  const queryClient = useQueryClient();\n+  const queryClient = useQueryClient()\n \n   const { data: staffData, isLoading } = useQuery({\n     queryKey: ['staff-attendance', selectedDate],\n-    queryFn: () => staffAttendanceApi.getAttendance(selectedDate)\n-  });\n+    queryFn: () => staffAttendanceApi.getAttendance(selectedDate),\n+  })\n \n   const { data: departmentsData } = useQuery({\n     queryKey: ['departments'],\n-    queryFn: () => staffAttendanceApi.getDepartments()\n-  });\n+    queryFn: () => staffAttendanceApi.getDepartments(),\n+  })\n \n   const saveAttendanceMutation = useMutation({\n     mutationFn: staffAttendanceApi.saveAttendance,\n     onSuccess: () => {\n-      queryClient.invalidateQueries(['staff-attendance']);\n-      setHasChanges(false);\n-    }\n-  });\n+      queryClient.invalidateQueries(['staff-attendance'])\n+      setHasChanges(false)\n+    },\n+  })\n \n   const bulkMarkMutation = useMutation({\n     mutationFn: staffAttendanceApi.bulkMark,\n     onSuccess: () => {\n-      queryClient.invalidateQueries(['staff-attendance']);\n-      setHasChanges(false);\n-    }\n-  });\n+      queryClient.invalidateQueries(['staff-attendance'])\n+      setHasChanges(false)\n+    },\n+  })\n \n   const handleTimeUpdate = (staffId, attendanceData) => {\n     // Update local state and mark as changed\n-    setHasChanges(true);\n-    \n+    setHasChanges(true)\n+\n     // Save immediately or batch updates\n     const data = {\n       staffId,\n       date: selectedDate,\n-      ...attendanceData\n-    };\n-    \n-    saveAttendanceMutation.mutate(data);\n-  };\n+      ...attendanceData,\n+    }\n \n-  const handleBulkMark = (status) => {\n-    const filteredStaff = getFilteredStaff();\n-    const staffIds = filteredStaff.map(staff => staff.id);\n-    \n+    saveAttendanceMutation.mutate(data)\n+  }\n+\n+  const handleBulkMark = status => {\n+    const filteredStaff = getFilteredStaff()\n+    const staffIds = filteredStaff.map(staff => staff.id)\n+\n     bulkMarkMutation.mutate({\n       date: selectedDate,\n       staffIds,\n       status,\n       timeIn: status === 'present' ? '09:00' : '',\n-      timeOut: status === 'present' ? '17:00' : ''\n-    });\n-    \n-    setShowBulkActions(false);\n-  };\n+      timeOut: status === 'present' ? '17:00' : '',\n+    })\n \n+    setShowBulkActions(false)\n+  }\n+\n   const getFilteredStaff = () => {\n-    if (!staffData?.data) return [];\n-    \n+    if (!staffData?.data) return []\n+\n     return staffData.data.filter(staff => {\n-      const matchesSearch = staff.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n-                           staff.employeeId.toLowerCase().includes(searchTerm.toLowerCase());\n-      const matchesDepartment = departmentFilter === 'all' || staff.department === departmentFilter;\n-      const matchesStatus = statusFilter === 'all' || \n-                           (staff.attendance?.status || 'not-marked') === statusFilter;\n-      \n-      return matchesSearch && matchesDepartment && matchesStatus;\n-    });\n-  };\n+      const matchesSearch =\n+        staff.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n+        staff.employeeId.toLowerCase().includes(searchTerm.toLowerCase())\n+      const matchesDepartment =\n+        departmentFilter === 'all' || staff.department === departmentFilter\n+      const matchesStatus =\n+        statusFilter === 'all' ||\n+        (staff.attendance?.status || 'not-marked') === statusFilter\n \n-  const filteredStaff = getFilteredStaff();\n+      return matchesSearch && matchesDepartment && matchesStatus\n+    })\n+  }\n \n-  if (isLoading) return <LoadingSkeleton />;\n+  const filteredStaff = getFilteredStaff()\n \n+  if (isLoading) return <LoadingSkeleton />\n+\n   return (\n     <div className=\"space-y-6\">\n       <div className=\"flex justify-between items-center\">\n         <h1 className=\"text-2xl font-bold\">Staff Attendance</h1>\n@@ -400,26 +427,26 @@\n           <Input\n             label=\"Date\"\n             type=\"date\"\n             value={selectedDate}\n-            onChange={(e) => setSelectedDate(e.target.value)}\n+            onChange={e => setSelectedDate(e.target.value)}\n           />\n           <div className=\"relative\">\n             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 mt-6\" />\n             <Input\n               label=\"Search Staff\"\n               type=\"text\"\n               placeholder=\"Search by name or ID...\"\n               value={searchTerm}\n-              onChange={(e) => setSearchTerm(e.target.value)}\n+              onChange={e => setSearchTerm(e.target.value)}\n               className=\"pl-10\"\n             />\n           </div>\n           <div>\n             <label className=\"block text-sm font-medium mb-1\">Department</label>\n             <select\n               value={departmentFilter}\n-              onChange={(e) => setDepartmentFilter(e.target.value)}\n+              onChange={e => setDepartmentFilter(e.target.value)}\n               className=\"w-full border rounded-lg px-3 py-2\"\n             >\n               <option value=\"all\">All Departments</option>\n               {departmentsData?.data?.map(dept => (\n@@ -432,9 +459,9 @@\n           <div>\n             <label className=\"block text-sm font-medium mb-1\">Status</label>\n             <select\n               value={statusFilter}\n-              onChange={(e) => setStatusFilter(e.target.value)}\n+              onChange={e => setStatusFilter(e.target.value)}\n               className=\"w-full border rounded-lg px-3 py-2\"\n             >\n               <option value=\"all\">All Status</option>\n               <option value=\"present\">Present</option>\n@@ -462,28 +489,34 @@\n           <h2 className=\"text-lg font-medium\">\n             Staff Attendance - {new Date(selectedDate).toLocaleDateString()}\n           </h2>\n           <div className=\"text-sm text-gray-500\">\n-            Showing {filteredStaff.length} of {staffData?.data?.length || 0} staff members\n+            Showing {filteredStaff.length} of {staffData?.data?.length || 0}{' '}\n+            staff members\n           </div>\n         </div>\n-        \n+\n         {filteredStaff.length === 0 ? (\n           <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n             <Users className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n-            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Staff Found</h3>\n-            <p className=\"text-gray-500\">No staff members match your current filters.</p>\n+            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n+              No Staff Found\n+            </h3>\n+            <p className=\"text-gray-500\">\n+              No staff members match your current filters.\n+            </p>\n           </div>\n         ) : (\n           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n-            {Array.isArray(filteredStaff) && filteredStaff.map(staff => (\n-              <StaffAttendanceCard\n-                key={staff.id}\n-                staff={staff}\n-                attendance={staff.attendance}\n-                onTimeUpdate={handleTimeUpdate}\n-              />\n-            ))}\n+            {Array.isArray(filteredStaff) &&\n+              filteredStaff.map(staff => (\n+                <StaffAttendanceCard\n+                  key={staff.id}\n+                  staff={staff}\n+                  attendance={staff.attendance}\n+                  onTimeUpdate={handleTimeUpdate}\n+                />\n+              ))}\n           </div>\n         )}\n       </div>\n \n@@ -493,9 +526,12 @@\n         onClose={() => setShowBulkActions(false)}\n         title=\"Bulk Attendance Actions\"\n       >\n         <div className=\"space-y-4\">\n-          <p>Apply attendance status to all filtered staff members ({filteredStaff.length} staff):</p>\n+          <p>\n+            Apply attendance status to all filtered staff members (\n+            {filteredStaff.length} staff):\n+          </p>\n           <div className=\"grid grid-cols-2 gap-4\">\n             <button\n               onClick={() => handleBulkMark('present')}\n               disabled={bulkMarkMutation.isPending}\n@@ -521,8 +557,8 @@\n           </button>\n         </div>\n       </Dialog>\n     </div>\n-  );\n-};\n+  )\n+}\n\\ No newline at end of file\n \n-export default StaffAttendance;\n+export default StaffAttendance\n"
                }
            ],
            "date": 1755986163481,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport { useState } from 'react'\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { \n  Calendar,\n  Clock,\n  User,\n  CheckCircle,\n  XCircle,\n  AlertTriangle,\n  Search,\n  Filter,\n  Download,\n  Edit,\n  Save,\n  Users,\n  TrendingUp,\n  BarChart3\n} from 'lucide-react';\nimport Input from '../../components/ui/Input';\nimport Dialog from '../../components/ui/Dialog';\nimport LoadingSkeleton from '../../components/ui/LoadingSkeleton';\nimport { staffAttendanceApi } from '../../lib/api/staffAttendance';\n\nconst StaffAttendanceCard = ({ staff, attendance, onTimeUpdate, isEditable = true }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [timeIn, setTimeIn] = useState(attendance?.timeIn || '');\n  const [timeOut, setTimeOut] = useState(attendance?.timeOut || '');\n  const [status, setStatus] = useState(attendance?.status || 'present');\n  const [remarks, setRemarks] = useState(attendance?.remarks || '');\n\n  const handleSave = () => {\n    onTimeUpdate(staff.id, {\n      status,\n      timeIn,\n      timeOut,\n      remarks\n    });\n    setIsEditing(false);\n  };\n\n  const handleCancel = () => {\n    setTimeIn(attendance?.timeIn || '');\n    setTimeOut(attendance?.timeOut || '');\n    setStatus(attendance?.status || 'present');\n    setRemarks(attendance?.remarks || '');\n    setIsEditing(false);\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'present': return 'text-green-600 bg-green-100';\n      case 'absent': return 'text-red-600 bg-red-100';\n      case 'late': return 'text-yellow-600 bg-yellow-100';\n      case 'half-day': return 'text-blue-600 bg-blue-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const calculateWorkingHours = () => {\n    if (!timeIn || !timeOut) return '0:00';\n    \n    const inTime = new Date(`2000-01-01 ${timeIn}`);\n    const outTime = new Date(`2000-01-01 ${timeOut}`);\n    \n    if (outTime < inTime) return '0:00';\n    \n    const diff = outTime - inTime;\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n    \n    return `${hours}:${minutes.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"bg-white border rounded-lg p-4 hover:shadow-md transition-shadow\">\n      <div className=\"flex justify-between items-start mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-12 h-12 rounded-full overflow-hidden bg-gray-200\">\n            {staff.avatar ? (\n              <img src={staff.avatar} alt={staff.name} className=\"w-full h-full object-cover\" />\n            ) : (\n              <div className=\"w-full h-full flex items-center justify-center\">\n                <User className=\"w-6 h-6 text-gray-400\" />\n              </div>\n            )}\n          </div>\n          <div>\n            <h3 className=\"font-medium\">{staff.name}</h3>\n            <p className=\"text-sm text-gray-500\">{staff.employeeId} • {staff.department}</p>\n            <p className=\"text-xs text-gray-400\">{staff.role}</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(status)}`}>\n            {status.charAt(0).toUpperCase() + status.slice(1)}\n          </span>\n          {isEditable && (\n            <button\n              onClick={() => setIsEditing(!isEditing)}\n              className=\"p-1 text-gray-400 hover:text-gray-600\"\n            >\n              <Edit className=\"w-4 h-4\" />\n            </button>\n          )}\n        </div>\n      </div>\n\n      {isEditing ? (\n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">Status</label>\n              <select\n                value={status}\n                onChange={(e) => setStatus(e.target.value)}\n                className=\"w-full border rounded px-3 py-2 text-sm\"\n              >\n                <option value=\"present\">Present</option>\n                <option value=\"absent\">Absent</option>\n                <option value=\"late\">Late</option>\n                <option value=\"half-day\">Half Day</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">Working Hours</label>\n              <div className=\"text-sm text-gray-600 py-2\">\n                {calculateWorkingHours()}\n              </div>\n            </div>\n          </div>\n          \n          {status !== 'absent' && (\n            <div className=\"grid grid-cols-2 gap-4\">\n              <Input\n                label=\"Time In\"\n                type=\"time\"\n                value={timeIn}\n                onChange={(e) => setTimeIn(e.target.value)}\n                size=\"sm\"\n              />\n              <Input\n                label=\"Time Out\"\n                type=\"time\"\n                value={timeOut}\n                onChange={(e) => setTimeOut(e.target.value)}\n                size=\"sm\"\n              />\n            </div>\n          )}\n          \n          <div>\n            <label className=\"block text-sm font-medium mb-1\">Remarks</label>\n            <textarea\n              value={remarks}\n              onChange={(e) => setRemarks(e.target.value)}\n              placeholder=\"Add any remarks...\"\n              className=\"w-full border rounded px-3 py-2 text-sm h-16 resize-none\"\n            />\n          </div>\n          \n          <div className=\"flex justify-end gap-2\">\n            <button\n              onClick={handleCancel}\n              className=\"px-3 py-1 text-sm border rounded hover:bg-gray-50\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleSave}\n              className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 flex items-center gap-1\"\n            >\n              <Save className=\"w-3 h-3\" />\n              Save\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          <div className=\"grid grid-cols-3 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-500\">Time In:</span>\n              <div className=\"font-medium flex items-center gap-1\">\n                <Clock className=\"w-3 h-3\" />\n                {timeIn || '--:--'}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Time Out:</span>\n              <div className=\"font-medium flex items-center gap-1\">\n                <Clock className=\"w-3 h-3\" />\n                {timeOut || '--:--'}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Working Hours:</span>\n              <div className=\"font-medium\">{calculateWorkingHours()}</div>\n            </div>\n          </div>\n          \n          {remarks && (\n            <div className=\"text-sm\">\n              <span className=\"text-gray-500\">Remarks:</span>\n              <p className=\"text-gray-700 mt-1\">{remarks}</p>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst AttendanceStats = ({ data }) => {\n  const stats = Array.isArray(data) ? data.reduce((acc, staff) => {\n    const attendance = staff.attendance;\n    if (attendance) {\n      acc[attendance.status] = (acc[attendance.status] || 0) + 1;\n    } else {\n      acc.notMarked = (acc.notMarked || 0) + 1;\n    }\n    return acc;\n  }, {});\n\n  const total = data.length;\n  const present = stats.present || 0;\n  const absent = stats.absent || 0;\n  const late = stats.late || 0;\n  const halfDay = stats['half-day'] || 0;\n  const notMarked = stats.notMarked || 0;\n\n  return (\n    <div className=\"grid grid-cols-2 md:grid-cols-6 gap-4\">\n      <div className=\"bg-white p-4 rounded-lg shadow\">\n        <div className=\"flex items-center gap-3\">\n          <Users className=\"w-6 h-6 text-blue-600\" />\n          <div>\n            <p className=\"text-lg font-bold\">{total}</p>\n            <p className=\"text-sm text-gray-600\">Total Staff</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-white p-4 rounded-lg shadow\">\n        <div className=\"flex items-center gap-3\">\n          <CheckCircle className=\"w-6 h-6 text-green-600\" />\n          <div>\n            <p className=\"text-lg font-bold\">{present}</p>\n            <p className=\"text-sm text-gray-600\">Present</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-white p-4 rounded-lg shadow\">\n        <div className=\"flex items-center gap-3\">\n          <XCircle className=\"w-6 h-6 text-red-600\" />\n          <div>\n            <p className=\"text-lg font-bold\">{absent}</p>\n            <p className=\"text-sm text-gray-600\">Absent</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-white p-4 rounded-lg shadow\">\n        <div className=\"flex items-center gap-3\">\n          <Clock className=\"w-6 h-6 text-yellow-600\" />\n          <div>\n            <p className=\"text-lg font-bold\">{late}</p>\n            <p className=\"text-sm text-gray-600\">Late</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-white p-4 rounded-lg shadow\">\n        <div className=\"flex items-center gap-3\">\n          <AlertTriangle className=\"w-6 h-6 text-blue-600\" />\n          <div>\n            <p className=\"text-lg font-bold\">{halfDay}</p>\n            <p className=\"text-sm text-gray-600\">Half Day</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-white p-4 rounded-lg shadow\">\n        <div className=\"flex items-center gap-3\">\n          <Calendar className=\"w-6 h-6 text-gray-600\" />\n          <div>\n            <p className=\"text-lg font-bold\">{notMarked}</p>\n            <p className=\"text-sm text-gray-600\">Not Marked</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst StaffAttendance = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [departmentFilter, setDepartmentFilter] = useState('all');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [showBulkActions, setShowBulkActions] = useState(false);\n  const [hasChanges, setHasChanges] = useState(false);\n\n  const queryClient = useQueryClient();\n\n  const { data: staffData, isLoading } = useQuery({\n    queryKey: ['staff-attendance', selectedDate],\n    queryFn: () => staffAttendanceApi.getAttendance(selectedDate)\n  });\n\n  const { data: departmentsData } = useQuery({\n    queryKey: ['departments'],\n    queryFn: () => staffAttendanceApi.getDepartments()\n  });\n\n  const saveAttendanceMutation = useMutation({\n    mutationFn: staffAttendanceApi.saveAttendance,\n    onSuccess: () => {\n      queryClient.invalidateQueries(['staff-attendance']);\n      setHasChanges(false);\n    }\n  });\n\n  const bulkMarkMutation = useMutation({\n    mutationFn: staffAttendanceApi.bulkMark,\n    onSuccess: () => {\n      queryClient.invalidateQueries(['staff-attendance']);\n      setHasChanges(false);\n    }\n  });\n\n  const handleTimeUpdate = (staffId, attendanceData) => {\n    // Update local state and mark as changed\n    setHasChanges(true);\n    \n    // Save immediately or batch updates\n    const data = {\n      staffId,\n      date: selectedDate,\n      ...attendanceData\n    };\n    \n    saveAttendanceMutation.mutate(data);\n  };\n\n  const handleBulkMark = (status) => {\n    const filteredStaff = getFilteredStaff();\n    const staffIds = filteredStaff.map(staff => staff.id);\n    \n    bulkMarkMutation.mutate({\n      date: selectedDate,\n      staffIds,\n      status,\n      timeIn: status === 'present' ? '09:00' : '',\n      timeOut: status === 'present' ? '17:00' : ''\n    });\n    \n    setShowBulkActions(false);\n  };\n\n  const getFilteredStaff = () => {\n    if (!staffData?.data) return [];\n    \n    return staffData.data.filter(staff => {\n      const matchesSearch = staff.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           staff.employeeId.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDepartment = departmentFilter === 'all' || staff.department === departmentFilter;\n      const matchesStatus = statusFilter === 'all' || \n                           (staff.attendance?.status || 'not-marked') === statusFilter;\n      \n      return matchesSearch && matchesDepartment && matchesStatus;\n    });\n  };\n\n  const filteredStaff = getFilteredStaff();\n\n  if (isLoading) return <LoadingSkeleton />;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">Staff Attendance</h1>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => setShowBulkActions(true)}\n            className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\"\n          >\n            <Users className=\"w-4 h-4\" />\n            Bulk Actions\n          </button>\n          <button className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n            <TrendingUp className=\"w-4 h-4\" />\n            View Reports\n          </button>\n          <button className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n            <Download className=\"w-4 h-4\" />\n            Export\n          </button>\n        </div>\n      </div>\n\n      {/* Date Selection and Filters */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n          <Input\n            label=\"Date\"\n            type=\"date\"\n            value={selectedDate}\n            onChange={(e) => setSelectedDate(e.target.value)}\n          />\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4 mt-6\" />\n            <Input\n              label=\"Search Staff\"\n              type=\"text\"\n              placeholder=\"Search by name or ID...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium mb-1\">Department</label>\n            <select\n              value={departmentFilter}\n              onChange={(e) => setDepartmentFilter(e.target.value)}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"all\">All Departments</option>\n              {departmentsData?.data?.map(dept => (\n                <option key={dept} value={dept}>\n                  {dept}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium mb-1\">Status</label>\n            <select\n              value={statusFilter}\n              onChange={(e) => setStatusFilter(e.target.value)}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"all\">All Status</option>\n              <option value=\"present\">Present</option>\n              <option value=\"absent\">Absent</option>\n              <option value=\"late\">Late</option>\n              <option value=\"half-day\">Half Day</option>\n              <option value=\"not-marked\">Not Marked</option>\n            </select>\n          </div>\n          <div className=\"flex items-end\">\n            <button className=\"w-full border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center justify-center gap-2\">\n              <Filter className=\"w-4 h-4\" />\n              More Filters\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Statistics */}\n      <AttendanceStats data={staffData?.data || []} />\n\n      {/* Staff Attendance Cards */}\n      <div className=\"space-y-4\">\n        <div className=\"flex justify-between items-center\">\n          <h2 className=\"text-lg font-medium\">\n            Staff Attendance - {new Date(selectedDate).toLocaleDateString()}\n          </h2>\n          <div className=\"text-sm text-gray-500\">\n            Showing {filteredStaff.length} of {staffData?.data?.length || 0} staff members\n          </div>\n        </div>\n        \n        {filteredStaff.length === 0 ? (\n          <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n            <Users className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Staff Found</h3>\n            <p className=\"text-gray-500\">No staff members match your current filters.</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n            {Array.isArray(filteredStaff) && filteredStaff.map(staff => (\n              <StaffAttendanceCard\n                key={staff.id}\n                staff={staff}\n                attendance={staff.attendance}\n                onTimeUpdate={handleTimeUpdate}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Bulk Actions Dialog */}\n      <Dialog\n        open={showBulkActions}\n        onClose={() => setShowBulkActions(false)}\n        title=\"Bulk Attendance Actions\"\n      >\n        <div className=\"space-y-4\">\n          <p>Apply attendance status to all filtered staff members ({filteredStaff.length} staff):</p>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <button\n              onClick={() => handleBulkMark('present')}\n              disabled={bulkMarkMutation.isPending}\n              className=\"flex-1 bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center justify-center gap-2\"\n            >\n              <CheckCircle className=\"w-5 h-5\" />\n              Mark All Present\n            </button>\n            <button\n              onClick={() => handleBulkMark('absent')}\n              disabled={bulkMarkMutation.isPending}\n              className=\"flex-1 bg-red-600 text-white py-3 rounded-lg hover:bg-red-700 disabled:opacity-50 flex items-center justify-center gap-2\"\n            >\n              <XCircle className=\"w-5 h-5\" />\n              Mark All Absent\n            </button>\n          </div>\n          <button\n            onClick={() => setShowBulkActions(false)}\n            className=\"w-full border py-2 rounded-lg hover:bg-gray-50\"\n          >\n            Cancel\n          </button>\n        </div>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default StaffAttendance;"
        }
    ]
}