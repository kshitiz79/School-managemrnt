{
    "sourceFile": "src/pages/dashboard/TeacherDashboard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1755986163483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1755986163483,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  BookOpen,\n  Users,\n  ClipboardList,\n  Calendar,\n  Clock,\n  CheckCircle,\n  Upload,\n  BarChart3,\n  MessageSquare,\n  Bell,\n  AlertCircle,\n  FileText,\n  Send,\n  Notebook,\n  GraduationCap,\n  Target,\n  Copy,\n  Mail,\n} from 'lucide-react'\nimport { withRoleGuard } from '../../guards/withRoleGuard.jsx'\nimport { USER_ROLES } from '../../constants/auth'\nimport {\n  useDashboardKpis,\n  useStudentsByClass,\n  useHomeworkByClass,\n  useExamSchedule,\n  useClassAttendance,\n  useNoticesByAudience,\n  useMarkAttendance,\n  useCreateHomework,\n  useSubmitExamResult,\n} from '../../hooks/useApi'\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  KpiCard,\n  DataTable,\n  QuickActions,\n  FormDialog,\n  Button,\n  Input,\n  Select,\n  Badge,\n  LoadingSkeleton,\n  ErrorState,\n  EmptyState,\n} from '../../components/ui'\n\nconst TeacherDashboard = () => {\n  const navigate = useNavigate()\n\n  // State for dialogs and forms\n  const [markAttendanceDialogOpen, setMarkAttendanceDialogOpen] =\n    useState(false)\n  const [uploadHomeworkDialogOpen, setUploadHomeworkDialogOpen] =\n    useState(false)\n  const [enterMarksDialogOpen, setEnterMarksDialogOpen] = useState(false)\n  const [messageParentsDialogOpen, setMessageParentsDialogOpen] =\n    useState(false)\n  const [selectedClass, setSelectedClass] = useState('class-10') // Default class\n  const [selectedSection, setSelectedSection] = useState('A')\n\n  // Fetch dashboard data\n  const {\n    data: kpis,\n    isLoading: kpisLoading,\n    error: kpisError,\n  } = useDashboardKpis('teacher')\n  const { data: students = [] } = useStudentsByClass(\n    selectedClass,\n    selectedSection\n  )\n  const { data: homework = [] } = useHomeworkByClass(\n    selectedClass,\n    selectedSection\n  )\n  const { data: exams = [] } = useExamSchedule(selectedClass, selectedSection)\n  const { data: notices = [] } = useNoticesByAudience('staff')\n\n  // Get today's date for attendance\n  const today = new Date().toISOString().split('T')[0]\n  const { data: attendanceData = [] } = useClassAttendance(\n    selectedClass,\n    selectedSection,\n    today\n  )\n\n  // Mutations\n  const markAttendanceMutation = useMarkAttendance()\n  const createHomeworkMutation = useCreateHomework()\n  const submitExamResultMutation = useSubmitExamResult()\n\n  // Mock timetable data - in real app, this would come from API\n  const todayTimetable = [\n    {\n      time: '09:00 - 09:45',\n      subject: 'Mathematics',\n      class: 'Class 10A',\n      room: 'Room 201',\n    },\n    {\n      time: '09:45 - 10:30',\n      subject: 'Physics',\n      class: 'Class 10B',\n      room: 'Lab 3',\n    },\n    {\n      time: '11:00 - 11:45',\n      subject: 'Mathematics',\n      class: 'Class 9A',\n      room: 'Room 201',\n    },\n    {\n      time: '11:45 - 12:30',\n      subject: 'Physics',\n      class: 'Class 9B',\n      room: 'Lab 3',\n    },\n    {\n      time: '14:00 - 14:45',\n      subject: 'Mathematics',\n      class: 'Class 10C',\n      room: 'Room 201',\n    },\n  ]\n\n  // KPI Cards data\n  const kpiCards = [\n    {\n      title: 'Assigned Classes',\n      value: kpis?.totalClasses?.toString() || '0',\n      change: '6 subjects',\n      changeType: 'neutral',\n      icon: BookOpen,\n      description: 'active classes',\n    },\n    {\n      title: 'Attendance Due Today',\n      value: attendanceData\n        .filter(a => a.attendance.status === 'not_marked')\n        .length.toString(),\n      change: `${attendanceData.length} total students`,\n      changeType:\n        attendanceData.filter(a => a.attendance.status === 'not_marked')\n          .length > 0\n          ? 'negative'\n          : 'positive',\n      icon: Users,\n      description: 'need marking',\n    },\n    {\n      title: 'Pending Submissions',\n      value: homework.filter(hw => hw.status === 'submitted').length.toString(),\n      change: `${homework.length} total assignments`,\n      changeType: 'neutral',\n      icon: ClipboardList,\n      description: 'to review',\n    },\n    {\n      title: 'Upcoming Exams',\n      value: kpis?.upcomingExams?.toString() || '0',\n      change: 'next 7 days',\n      changeType: 'neutral',\n      icon: Calendar,\n      description: 'scheduled',\n    },\n  ]\n\n  // Quick Actions\n  const quickActions = [\n    {\n      id: 'mark-attendance',\n      label: 'Mark Attendance',\n      icon: CheckCircle,\n      variant: 'default',\n      description: 'Take class attendance',\n      onClick: () => setMarkAttendanceDialogOpen(true),\n      badge: attendanceData\n        .filter(a => a.attendance.status === 'not_marked')\n        .length.toString(),\n    },\n    {\n      id: 'upload-homework',\n      label: 'Upload Homework',\n      icon: Upload,\n      variant: 'outline',\n      description: 'Assign new homework',\n      onClick: () => setUploadHomeworkDialogOpen(true),\n    },\n    {\n      id: 'enter-marks',\n      label: 'Enter Exam Marks',\n      icon: BarChart3,\n      variant: 'outline',\n      description: 'Record exam results',\n      onClick: () => setEnterMarksDialogOpen(true),\n    },\n    {\n      id: 'message-parents',\n      label: 'Message Parents',\n      icon: MessageSquare,\n      variant: 'outline',\n      description: 'Send notifications',\n      onClick: () => setMessageParentsDialogOpen(true),\n    },\n  ]\n\n  // Table columns for attendance\n  const attendanceColumns = [\n    {\n      key: 'student',\n      header: 'Student',\n      render: (_, row) => (\n        <div>\n          <div className=\"font-medium\">{row.student.name}</div>\n          <div className=\"text-sm text-gray-500\">{row.student.rollNumber}</div>\n        </div>\n      ),\n    },\n    {\n      key: 'status',\n      header: 'Status',\n      render: (_, row) => (\n        <Badge\n          variant={\n            row.attendance.status === 'present'\n              ? 'success'\n              : row.attendance.status === 'absent'\n                ? 'danger'\n                : 'secondary'\n          }\n        >\n          {row.attendance.status === 'not_marked'\n            ? 'Not Marked'\n            : row.attendance.status}\n        </Badge>\n      ),\n    },\n    {\n      key: 'actions',\n      header: 'Quick Mark',\n      render: (_, row) => (\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleQuickAttendance(row.student.id, 'present')}\n            disabled={row.attendance.status !== 'not_marked'}\n          >\n            Present\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleQuickAttendance(row.student.id, 'absent')}\n            disabled={row.attendance.status !== 'not_marked'}\n          >\n            Absent\n          </Button>\n        </div>\n      ),\n    },\n  ]\n\n  // Event handlers\n  const handleQuickAttendance = async (studentId, status) => {\n    try {\n      await markAttendanceMutation.mutateAsync([\n        {\n          userId: studentId,\n          type: 'student',\n          date: today,\n          status,\n          markedBy: 'current-teacher',\n        },\n      ])\n    } catch (error) {\n      console.error('Failed to mark attendance:', error)\n    }\n  }\n\n  const handleMarkAttendance = async event => {\n    event.preventDefault()\n    const formData = new FormData(event.target)\n\n    const attendanceRecords = attendanceData.map(({ student }) => ({\n      userId: student.id,\n      type: 'student',\n      date: today,\n      status: formData.get(`attendance-${student.id}`) || 'absent',\n      markedBy: 'current-teacher',\n    }))\n\n    try {\n      await markAttendanceMutation.mutateAsync(attendanceRecords)\n      setMarkAttendanceDialogOpen(false)\n    } catch (error) {\n      console.error('Failed to mark attendance:', error)\n    }\n  }\n\n  const handleUploadHomework = async event => {\n    event.preventDefault()\n    const formData = new FormData(event.target)\n\n    try {\n      await createHomeworkMutation.mutateAsync({\n        title: formData.get('title'),\n        description: formData.get('description'),\n        subjectId: formData.get('subject'),\n        classId: selectedClass,\n        section: selectedSection,\n        assignedBy: 'current-teacher',\n        assignedDate: today,\n        dueDate: formData.get('dueDate'),\n        status: 'active',\n        instructions: formData.get('instructions'),\n      })\n      setUploadHomeworkDialogOpen(false)\n    } catch (error) {\n      console.error('Failed to create homework:', error)\n    }\n  }\n\n  const handleEnterMarks = async event => {\n    event.preventDefault()\n    const formData = new FormData(event.target)\n\n    try {\n      await submitExamResultMutation.mutateAsync({\n        examId: formData.get('examId'),\n        studentId: formData.get('studentId'),\n        marksObtained: parseInt(formData.get('marks')),\n        grade: formData.get('grade'),\n        remarks: formData.get('remarks'),\n        evaluatedBy: 'current-teacher',\n      })\n      setEnterMarksDialogOpen(false)\n    } catch (error) {\n      console.error('Failed to submit marks:', error)\n    }\n  }\n\n  // Handle loading states\n  if (kpisLoading) {\n    return (\n      <div className=\"p-6 space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              Teacher Dashboard\n            </h1>\n            <p className=\"text-gray-600\">\n              Manage your classes and student progress\n            </p>\n          </div>\n        </div>\n        <LoadingSkeleton.Dashboard />\n      </div>\n    )\n  }\n\n  // Handle error states\n  if (kpisError) {\n    return (\n      <div className=\"p-6\">\n        <ErrorState\n          error={kpisError}\n          onRetry={() => window.location.reload()}\n          showRetry={true}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">\n            Teacher Dashboard\n          </h1>\n          <p className=\"text-gray-600\">\n            Manage your classes and student progress\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <Select\n            value={selectedClass}\n            onChange={e => setSelectedClass(e.target.value)}\n            className=\"w-32\"\n          >\n            <option value=\"class-9\">Class 9</option>\n            <option value=\"class-10\">Class 10</option>\n          </Select>\n          <Select\n            value={selectedSection}\n            onChange={e => setSelectedSection(e.target.value)}\n            className=\"w-24\"\n          >\n            <option value=\"A\">Section A</option>\n            <option value=\"B\">Section B</option>\n            <option value=\"C\">Section C</option>\n          </Select>\n        </div>\n      </div>\n\n      {/* KPI Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {Array.isArray(kpiCards) &&\n          kpiCards.map((kpi, index) => <KpiCard key={index} {...kpi} />)}\n      </div>\n\n      {/* Quick Actions */}\n      <QuickActions\n        title=\"Quick Actions\"\n        actions={quickActions}\n        variant=\"card\"\n        layout=\"grid\"\n      />\n\n      {/* Teaching Modules */}\n      <div className=\"space-y-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">Teaching Tools</h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {/* Homework Management */}\n          <Card\n            className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => navigate('/dashboard/homework/daily')}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"p-3 bg-orange-100 rounded-lg\">\n                  <Notebook className=\"h-6 w-6 text-orange-600\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">\n                    Homework Management\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">\n                    Assign & Track Homework\n                  </p>\n                </div>\n              </div>\n              <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-orange-600\">12</div>\n                  <div className=\"text-gray-500\">Active</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-green-600\">85%</div>\n                  <div className=\"text-gray-500\">Submitted</div>\n                </div>\n              </div>\n              <div className=\"mt-4 flex gap-2\">\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/homework/add')\n                  }}\n                  className=\"flex-1 bg-orange-50 text-orange-700 px-3 py-1 rounded text-xs hover:bg-orange-100\"\n                >\n                  Add Homework\n                </button>\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/homework/daily')\n                  }}\n                  className=\"flex-1 bg-blue-50 text-blue-700 px-3 py-1 rounded text-xs hover:bg-blue-100\"\n                >\n                  Track Daily\n                </button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Lesson Planning */}\n          <Card\n            className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => navigate('/dashboard/lessonplan/lessons')}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"p-3 bg-purple-100 rounded-lg\">\n                  <GraduationCap className=\"h-6 w-6 text-purple-600\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">\n                    Lesson Planning\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">\n                    Create & Manage Lessons\n                  </p>\n                </div>\n              </div>\n              <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-purple-600\">28</div>\n                  <div className=\"text-gray-500\">Lessons</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-green-600\">92%</div>\n                  <div className=\"text-gray-500\">Complete</div>\n                </div>\n              </div>\n              <div className=\"mt-4 flex gap-2\">\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/lessonplan/lessons')\n                  }}\n                  className=\"flex-1 bg-purple-50 text-purple-700 px-3 py-1 rounded text-xs hover:bg-purple-100\"\n                >\n                  My Lessons\n                </button>\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/lessonplan/topics')\n                  }}\n                  className=\"flex-1 bg-green-50 text-green-700 px-3 py-1 rounded text-xs hover:bg-green-100\"\n                >\n                  Topics\n                </button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Communication */}\n          <Card\n            className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => navigate('/dashboard/communication/send-message')}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"p-3 bg-blue-100 rounded-lg\">\n                  <Send className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">Communication</h3>\n                  <p className=\"text-sm text-gray-600\">\n                    Message Parents & Students\n                  </p>\n                </div>\n              </div>\n              <div className=\"mt-4 grid grid-cols-3 gap-2 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-green-600\">📱</div>\n                  <div className=\"text-xs text-gray-500\">WhatsApp</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-blue-600\">📧</div>\n                  <div className=\"text-xs text-gray-500\">Email</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-purple-600\">💬</div>\n                  <div className=\"text-xs text-gray-500\">SMS</div>\n                </div>\n              </div>\n              <div className=\"mt-4 flex gap-2\">\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/communication/send-message')\n                  }}\n                  className=\"flex-1 bg-blue-50 text-blue-700 px-3 py-1 rounded text-xs hover:bg-blue-100\"\n                >\n                  Send Message\n                </button>\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/communication/notice-board')\n                  }}\n                  className=\"flex-1 bg-gray-50 text-gray-700 px-3 py-1 rounded text-xs hover:bg-gray-100\"\n                >\n                  Notices\n                </button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Quick Access Tools */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n          <button\n            onClick={() => navigate('/dashboard/lessonplan/copy-old')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <Copy className=\"h-6 w-6 text-gray-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Copy Old Lessons</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/communication/template-email')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <Mail className=\"h-6 w-6 text-blue-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Email Templates</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/lessonplan/topics')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <Target className=\"h-6 w-6 text-orange-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Manage Topics</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/communication/log')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <FileText className=\"h-6 w-6 text-green-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Message Logs</div>\n          </button>\n        </div>\n      </div>\n\n      {/* Main Content Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Today's Timetable */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Clock className=\"h-5 w-5\" />\n              <span>Today's Timetable</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {Array.isArray(todayTimetable) &&\n                todayTimetable.map((slot, index) => (\n                  <div\n                    key={index}\n                    className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\n                  >\n                    <div>\n                      <div className=\"font-medium text-gray-900\">\n                        {slot.subject}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        {slot.class} - {slot.room}\n                      </div>\n                    </div>\n                    <div className=\"text-sm font-medium text-blue-600\">\n                      {slot.time}\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Student Attendance */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Users className=\"h-5 w-5\" />\n                <span>Student Attendance</span>\n              </div>\n              <Badge variant=\"outline\">\n                {\n                  attendanceData.filter(\n                    a => a.attendance.status === 'not_marked'\n                  ).length\n                }{' '}\n                pending\n              </Badge>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {attendanceData.length === 0 ? (\n              <EmptyState\n                title=\"No Students\"\n                description=\"No students found for the selected class and section.\"\n                variant=\"users\"\n              />\n            ) : (\n              <DataTable\n                data={attendanceData.slice(0, 5)}\n                columns={attendanceColumns}\n                sortable={false}\n                paginated={false}\n                emptyMessage=\"No attendance data found\"\n              />\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Upcoming Exams & Assignments */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Calendar className=\"h-5 w-5\" />\n              <span>Upcoming Exams & Assignments</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {/* Exams */}\n              {exams.slice(0, 3).map(exam => (\n                <div key={exam.id} className=\"border-l-4 border-red-500 pl-4\">\n                  <div className=\"flex items-start justify-between\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">{exam.name}</h4>\n                      <p className=\"text-sm text-gray-600\">\n                        {exam.subjectId} - {exam.totalMarks} marks\n                      </p>\n                      <p className=\"text-xs text-gray-500\">\n                        {new Date(exam.date).toLocaleDateString()} at{' '}\n                        {exam.startTime}\n                      </p>\n                    </div>\n                    <Badge variant=\"danger\" size=\"sm\">\n                      Exam\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n\n              {/* Homework */}\n              {homework.slice(0, 2).map(hw => (\n                <div key={hw.id} className=\"border-l-4 border-blue-500 pl-4\">\n                  <div className=\"flex items-start justify-between\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">{hw.title}</h4>\n                      <p className=\"text-sm text-gray-600\">{hw.description}</p>\n                      <p className=\"text-xs text-gray-500\">\n                        Due: {new Date(hw.dueDate).toLocaleDateString()}\n                      </p>\n                    </div>\n                    <Badge variant=\"info\" size=\"sm\">\n                      Assignment\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Notices */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Bell className=\"h-5 w-5\" />\n              <span>Recent Notices</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {notices.length === 0 ? (\n              <EmptyState\n                title=\"No Notices\"\n                description=\"No recent notices for teachers.\"\n                variant=\"default\"\n              />\n            ) : (\n              <div className=\"space-y-4\">\n                {notices.slice(0, 4).map(notice => (\n                  <div\n                    key={notice.id}\n                    className=\"border-l-4 border-yellow-500 pl-4\"\n                  >\n                    <div className=\"flex items-start justify-between\">\n                      <div>\n                        <h4 className=\"font-medium text-gray-900\">\n                          {notice.title}\n                        </h4>\n                        <p className=\"text-sm text-gray-600 line-clamp-2\">\n                          {notice.content}\n                        </p>\n                        <p className=\"text-xs text-gray-500 mt-1\">\n                          {new Date(notice.publishedAt).toLocaleDateString()}\n                        </p>\n                      </div>\n                      <Badge\n                        variant={\n                          notice.priority === 'high'\n                            ? 'danger'\n                            : notice.priority === 'medium'\n                              ? 'warning'\n                              : 'secondary'\n                        }\n                        size=\"sm\"\n                      >\n                        {notice.priority}\n                      </Badge>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Mark Attendance Dialog */}\n      <FormDialog\n        open={markAttendanceDialogOpen}\n        onOpenChange={setMarkAttendanceDialogOpen}\n        title=\"Mark Class Attendance\"\n        description={`Mark attendance for ${selectedClass} - Section ${selectedSection}`}\n        onSubmit={handleMarkAttendance}\n        submitLabel=\"Submit Attendance\"\n        loading={markAttendanceMutation.isPending}\n      >\n        <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n          {Array.isArray(attendanceData) &&\n            attendanceData.map(({ student }) => (\n              <div\n                key={student.id}\n                className=\"flex items-center justify-between p-3 border rounded-lg\"\n              >\n                <div>\n                  <div className=\"font-medium\">{student.name}</div>\n                  <div className=\"text-sm text-gray-500\">\n                    {student.rollNumber}\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-4\">\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"radio\"\n                      name={`attendance-${student.id}`}\n                      value=\"present\"\n                      className=\"mr-2\"\n                      defaultChecked\n                    />\n                    Present\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"radio\"\n                      name={`attendance-${student.id}`}\n                      value=\"absent\"\n                      className=\"mr-2\"\n                    />\n                    Absent\n                  </label>\n                </div>\n              </div>\n            ))}\n        </div>\n      </FormDialog>\n\n      {/* Upload Homework Dialog */}\n      <FormDialog\n        open={uploadHomeworkDialogOpen}\n        onOpenChange={setUploadHomeworkDialogOpen}\n        title=\"Assign New Homework\"\n        description=\"Create a new homework assignment for your class\"\n        onSubmit={handleUploadHomework}\n        submitLabel=\"Assign Homework\"\n        loading={createHomeworkMutation.isPending}\n      >\n        <div className=\"space-y-4\">\n          <Input\n            name=\"title\"\n            label=\"Assignment Title\"\n            placeholder=\"Enter assignment title\"\n            required\n          />\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Description\n            </label>\n            <textarea\n              name=\"description\"\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Enter assignment description\"\n              required\n            />\n          </div>\n          <Select name=\"subject\" label=\"Subject\" required>\n            <option value=\"\">Select Subject</option>\n            <option value=\"math\">Mathematics</option>\n            <option value=\"physics\">Physics</option>\n            <option value=\"chemistry\">Chemistry</option>\n            <option value=\"english\">English</option>\n          </Select>\n          <Input name=\"dueDate\" type=\"date\" label=\"Due Date\" required />\n          <Input\n            name=\"instructions\"\n            label=\"Instructions\"\n            placeholder=\"Additional instructions\"\n          />\n        </div>\n      </FormDialog>\n\n      {/* Enter Marks Dialog */}\n      <FormDialog\n        open={enterMarksDialogOpen}\n        onOpenChange={setEnterMarksDialogOpen}\n        title=\"Enter Exam Marks\"\n        description=\"Record exam results for a student\"\n        onSubmit={handleEnterMarks}\n        submitLabel=\"Submit Marks\"\n        loading={submitExamResultMutation.isPending}\n      >\n        <div className=\"space-y-4\">\n          <Select name=\"examId\" label=\"Exam\" required>\n            <option value=\"\">Select Exam</option>\n            {Array.isArray(exams) &&\n              exams.map(exam => (\n                <option key={exam.id} value={exam.id}>\n                  {exam.name} - {exam.subjectId}\n                </option>\n              ))}\n          </Select>\n          <Select name=\"studentId\" label=\"Student\" required>\n            <option value=\"\">Select Student</option>\n            {Array.isArray(students) &&\n              students.map(student => (\n                <option key={student.id} value={student.id}>\n                  {student.name} - {student.rollNumber}\n                </option>\n              ))}\n          </Select>\n          <Input\n            name=\"marks\"\n            type=\"number\"\n            label=\"Marks Obtained\"\n            placeholder=\"85\"\n            required\n          />\n          <Select name=\"grade\" label=\"Grade\" required>\n            <option value=\"\">Select Grade</option>\n            <option value=\"A+\">A+</option>\n            <option value=\"A\">A</option>\n            <option value=\"B+\">B+</option>\n            <option value=\"B\">B</option>\n            <option value=\"C+\">C+</option>\n            <option value=\"C\">C</option>\n            <option value=\"D\">D</option>\n            <option value=\"F\">F</option>\n          </Select>\n          <Input\n            name=\"remarks\"\n            label=\"Remarks\"\n            placeholder=\"Optional remarks\"\n          />\n        </div>\n      </FormDialog>\n\n      {/* Message Parents Dialog */}\n      <FormDialog\n        open={messageParentsDialogOpen}\n        onOpenChange={setMessageParentsDialogOpen}\n        title=\"Message Parents\"\n        description=\"Send a message to parents of your students\"\n        onSubmit={() => setMessageParentsDialogOpen(false)}\n        submitLabel=\"Send Message\"\n      >\n        <div className=\"space-y-4\">\n          <Select name=\"recipient\" label=\"Send To\" required>\n            <option value=\"\">Select Recipients</option>\n            <option value=\"all\">All Parents</option>\n            <option value=\"class\">Class Parents Only</option>\n            <option value=\"individual\">Individual Parent</option>\n          </Select>\n          <Input\n            name=\"subject\"\n            label=\"Subject\"\n            placeholder=\"Message subject\"\n            required\n          />\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Message\n            </label>\n            <textarea\n              name=\"message\"\n              rows={4}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Enter your message\"\n              required\n            />\n          </div>\n        </div>\n      </FormDialog>\n    </div>\n  )\n}\n\nexport default withRoleGuard([USER_ROLES.TEACHER])(TeacherDashboard)\n"
        }
    ]
}