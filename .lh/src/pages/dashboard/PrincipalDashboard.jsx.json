{
    "sourceFile": "src/pages/dashboard/PrincipalDashboard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1755984965404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1755984965404,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  Users,\n  UserCheck,\n  TrendingUp,\n  DollarSign,\n  Calendar,\n  BookOpen,\n  BarChart3,\n  CheckCircle,\n  XCircle,\n  Eye,\n  AlertCircle,\n  Award,\n  Bell,\n  MessageSquare,\n  FileText,\n} from 'lucide-react'\nimport { withRoleGuard } from '../../guards/withRoleGuard.jsx'\nimport { USER_ROLES } from '../../constants/auth'\nimport {\n  useDashboardKpis,\n  useStudents,\n  useStaff,\n  useTodayAttendance,\n  useFeesSummary,\n  useExams,\n  useExamResults,\n  useLeaveRequests,\n  useAdmissions,\n  useNoticesByAudience,\n  useApproveLeaveRequest,\n  useRejectLeaveRequest,\n  useProcessAdmission,\n} from '../../hooks/useApi'\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  KpiCard,\n  TrendChart,\n  DataTable,\n  QuickActions,\n  ConfirmDialog,\n  Button,\n  Badge,\n  LoadingSkeleton,\n  ErrorState,\n  EmptyState,\n} from '../../components/ui'\n\nconst PrincipalDashboard = () => {\n  const navigate = useNavigate()\n\n  // State for dialogs\n  const [approvalDialogOpen, setApprovalDialogOpen] = useState(false)\n  const [selectedRequest, setSelectedRequest] = useState(null)\n  const [actionType, setActionType] = useState(null)\n\n  // Fetch dashboard data\n  const {\n    data: kpis,\n    isLoading: kpisLoading,\n    error: kpisError,\n  } = useDashboardKpis('principal')\n  const { data: students = [] } = useStudents()\n  const { data: staff = [] } = useStaff()\n  const { data: todayAttendance } = useTodayAttendance()\n  const { data: feesSummary } = useFeesSummary()\n  const { data: exams = [] } = useExams()\n  const { data: examResults = [] } = useExamResults()\n  const { data: leaveRequests = [] } = useLeaveRequests({ status: 'pending' })\n  const { data: admissions = [] } = useAdmissions({ status: 'pending' })\n  const { data: notices = [] } = useNoticesByAudience('staff')\n\n  // Mutations\n  const approveLeaveRequestMutation = useApproveLeaveRequest()\n  const rejectLeaveRequestMutation = useRejectLeaveRequest()\n  const processAdmissionMutation = useProcessAdmission()\n\n  // Generate attendance trend data (last 7 days)\n  const attendanceTrendData = React.useMemo(() => {\n    const data = []\n    for (let i = 6; i >= 0; i--) {\n      const date = new Date()\n      date.setDate(date.getDate() - i)\n\n      // Mock attendance data - in real app, this would come from API\n      const attendance = 85 + Math.random() * 10 // 85-95% range\n\n      data.push({\n        name: date.toLocaleDateString('en-US', { weekday: 'short' }),\n        value: Math.round(attendance),\n      })\n    }\n    return data\n  }, [])\n\n  // Generate exam performance data\n  const examPerformanceData = React.useMemo(() => {\n    return [\n      { name: 'A+', value: 15 },\n      { name: 'A', value: 25 },\n      { name: 'B+', value: 30 },\n      { name: 'B', value: 20 },\n      { name: 'C+', value: 8 },\n      { name: 'C', value: 2 },\n    ]\n  }, [])\n\n  // Mock upcoming events\n  const upcomingEvents = [\n    {\n      id: 1,\n      title: 'Annual Sports Day',\n      date: '2024-03-15',\n      type: 'Sports',\n      description: 'Inter-house sports competition',\n    },\n    {\n      id: 2,\n      title: 'Parent-Teacher Meeting',\n      date: '2024-02-28',\n      type: 'Academic',\n      description: 'Quarterly PTM for all classes',\n    },\n    {\n      id: 3,\n      title: 'Science Exhibition',\n      date: '2024-03-10',\n      type: 'Academic',\n      description: 'Student science project showcase',\n    },\n  ]\n\n  // KPI Cards data\n  const kpiCards = [\n    {\n      title: 'Total Students',\n      value: kpis?.totalStudents?.toString() || students.length.toString(),\n      change: '+12',\n      changeType: 'positive',\n      icon: Users,\n      description: 'active students',\n    },\n    {\n      title: 'Total Teachers',\n      value:\n        kpis?.totalTeachers?.toString() ||\n        staff.filter(s => s.role === 'teacher').length.toString(),\n      change: '+2',\n      changeType: 'positive',\n      icon: UserCheck,\n      description: 'teaching staff',\n    },\n    {\n      title: 'Attendance Rate',\n      value: todayAttendance ? `${todayAttendance.students.percentage}%` : '0%',\n      change: '+2.5%',\n      changeType: 'positive',\n      icon: TrendingUp,\n      description: 'from last week',\n    },\n    {\n      title: 'Fee Collection',\n      value: feesSummary ? `${feesSummary.collectionPercentage}%` : '0%',\n      change: `â‚¹${feesSummary?.totalPaid?.toLocaleString() || 0}`,\n      changeType: 'positive',\n      icon: DollarSign,\n      description: 'collected',\n    },\n  ]\n\n  // Quick Actions\n  const quickActions = [\n    {\n      id: 'approve-requests',\n      label: 'Approve Requests',\n      icon: CheckCircle,\n      variant: 'default',\n      description: 'Review pending approvals',\n      badge: (leaveRequests.length + admissions.length).toString(),\n    },\n    {\n      id: 'view-reports',\n      label: 'View Reports',\n      icon: BarChart3,\n      variant: 'outline',\n      description: 'Academic & financial reports',\n    },\n    {\n      id: 'schedule-meeting',\n      label: 'Schedule Meeting',\n      icon: Calendar,\n      variant: 'outline',\n      description: 'Plan staff meetings',\n    },\n    {\n      id: 'send-announcement',\n      label: 'Send Announcement',\n      icon: Bell,\n      variant: 'outline',\n      description: 'School-wide notifications',\n    },\n  ]\n\n  // Table columns for exam performance\n  const examPerformanceColumns = [\n    {\n      key: 'subject',\n      header: 'Subject',\n      render: () => 'Mathematics', // Mock data\n    },\n    {\n      key: 'class',\n      header: 'Class',\n      render: () => 'Class 10',\n    },\n    {\n      key: 'totalStudents',\n      header: 'Students',\n      render: () => '30',\n    },\n    {\n      key: 'averageMarks',\n      header: 'Average',\n      render: () => '78.5',\n    },\n    {\n      key: 'passPercentage',\n      header: 'Pass %',\n      render: () => <Badge variant=\"success\">92%</Badge>,\n    },\n    {\n      key: 'topScore',\n      header: 'Top Score',\n      render: () => '95',\n    },\n  ]\n\n  // Table columns for approvals\n  const approvalsColumns = [\n    {\n      key: 'type',\n      header: 'Type',\n      render: (_, row) => (\n        <Badge variant={row.type === 'leave' ? 'info' : 'warning'}>\n          {row.type === 'leave' ? 'Leave Request' : 'Admission'}\n        </Badge>\n      ),\n    },\n    {\n      key: 'applicant',\n      header: 'Applicant',\n      render: (_, row) => (\n        <div>\n          <div className=\"font-medium\">{row.name}</div>\n          <div className=\"text-sm text-gray-500\">{row.details}</div>\n        </div>\n      ),\n    },\n    {\n      key: 'date',\n      header: 'Date',\n      render: (_, row) => new Date(row.date).toLocaleDateString(),\n    },\n    {\n      key: 'priority',\n      header: 'Priority',\n      render: (_, row) => (\n        <Badge\n          variant={\n            row.priority === 'high'\n              ? 'danger'\n              : row.priority === 'medium'\n                ? 'warning'\n                : 'secondary'\n          }\n        >\n          {row.priority}\n        </Badge>\n      ),\n    },\n    {\n      key: 'actions',\n      header: 'Actions',\n      render: (_, row) => (\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleApproval(row, 'approve')}\n          >\n            <CheckCircle className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleApproval(row, 'reject')}\n          >\n            <XCircle className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleViewDetails(row)}\n          >\n            <Eye className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      ),\n    },\n  ]\n\n  // Combine leave requests and admissions for approvals table\n  const pendingApprovals = React.useMemo(() => {\n    const leaveApprovals = leaveRequests.map(request => ({\n      id: request.id,\n      type: 'leave',\n      name: request.userType === 'student' ? 'Student' : 'Staff Member',\n      details: `${request.type} leave - ${request.reason}`,\n      date: request.appliedAt,\n      priority: 'medium',\n      originalData: request,\n    }))\n\n    const admissionApprovals = admissions.map(admission => ({\n      id: admission.id,\n      type: 'admission',\n      name: admission.studentName,\n      details: `${admission.classApplied} - ${admission.fatherName}`,\n      date: admission.applicationDate,\n      priority: 'high',\n      originalData: admission,\n    }))\n\n    return [...leaveApprovals, ...admissionApprovals]\n  }, [leaveRequests, admissions])\n\n  // Mock exam performance data for table\n  const examPerformanceTableData = [\n    {\n      subject: 'Mathematics',\n      class: 'Class 10',\n      totalStudents: 30,\n      averageMarks: 78.5,\n      passPercentage: 92,\n      topScore: 95,\n    },\n    {\n      subject: 'English',\n      class: 'Class 10',\n      totalStudents: 30,\n      averageMarks: 82.3,\n      passPercentage: 96,\n      topScore: 98,\n    },\n    {\n      subject: 'Physics',\n      class: 'Class 10',\n      totalStudents: 30,\n      averageMarks: 75.8,\n      passPercentage: 88,\n      topScore: 94,\n    },\n  ]\n\n  // Event handlers\n  const handleApproval = (request, action) => {\n    setSelectedRequest(request)\n    setActionType(action)\n    setApprovalDialogOpen(true)\n  }\n\n  const handleViewDetails = request => {\n    // Implementation for viewing details\n    console.log('View details:', request)\n  }\n\n  const handleConfirmApproval = async () => {\n    if (!selectedRequest) return\n\n    try {\n      if (selectedRequest.type === 'leave') {\n        if (actionType === 'approve') {\n          await approveLeaveRequestMutation.mutateAsync({\n            id: selectedRequest.id,\n            remarks: 'Approved by Principal',\n          })\n        } else {\n          await rejectLeaveRequestMutation.mutateAsync({\n            id: selectedRequest.id,\n            remarks: 'Rejected by Principal',\n          })\n        }\n      } else if (selectedRequest.type === 'admission') {\n        await processAdmissionMutation.mutateAsync({\n          id: selectedRequest.id,\n          status: actionType === 'approve' ? 'approved' : 'rejected',\n          remarks: `${actionType === 'approve' ? 'Approved' : 'Rejected'} by Principal`,\n        })\n      }\n\n      setApprovalDialogOpen(false)\n      setSelectedRequest(null)\n      setActionType(null)\n    } catch (error) {\n      console.error('Failed to process approval:', error)\n    }\n  }\n\n  // Handle loading states\n  if (kpisLoading) {\n    return (\n      <div className=\"p-6 space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              Principal Dashboard\n            </h1>\n            <p className=\"text-gray-600\">School oversight and management</p>\n          </div>\n        </div>\n        <LoadingSkeleton.Dashboard />\n      </div>\n    )\n  }\n\n  // Handle error states\n  if (kpisError) {\n    return (\n      <div className=\"p-6\">\n        <ErrorState\n          error={kpisError}\n          onRetry={() => window.location.reload()}\n          showRetry={true}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">\n            Principal Dashboard\n          </h1>\n          <p className=\"text-gray-600\">School oversight and management</p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge variant=\"info\" className=\"flex items-center space-x-1\">\n            <Award className=\"h-3 w-3\" />\n            <span>Excellence Award 2023</span>\n          </Badge>\n        </div>\n      </div>\n\n      {/* KPI Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {Array.isArray(kpiCards) &&\n          kpiCards.map((kpi, index) => <KpiCard key={index} {...kpi} />)}\n      </div>\n\n      {/* Quick Actions */}\n      <QuickActions\n        title=\"Quick Actions\"\n        actions={quickActions}\n        variant=\"card\"\n        layout=\"grid\"\n      />\n\n      {/* Management Modules */}\n      <div className=\"space-y-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">\n          School Management\n        </h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {/* Academic Management */}\n          <Card\n            className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => navigate('/dashboard/lessonplan/manage')}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"p-3 bg-purple-100 rounded-lg\">\n                  <BookOpen className=\"h-6 w-6 text-purple-600\" />\n                </div>\n                <div className=\"flex-1 \">\n                  <h3 className=\"font-semibold text-gray-900\">\n                    Academic Management\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">\n                    Lesson Plans & Syllabus\n                  </p>\n                </div>\n              </div>\n              <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-purple-600\">156</div>\n                  <div className=\"text-gray-500\">Lessons</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-green-600\">92%</div>\n                  <div className=\"text-gray-500\">Complete</div>\n                </div>\n              </div>\n              <div className=\"mt-4 flex gap-2\">\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/lessonplan/syllabus-status')\n                  }}\n                  className=\"flex-1 bg-purple-50 text-purple-700 px-3 py-1 rounded text-xs hover:bg-purple-100\"\n                >\n                  Syllabus Status\n                </button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Communication Hub */}\n          <Card\n            className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => navigate('/dashboard/communication/send-message')}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"p-3 bg-blue-100 rounded-lg\">\n                  <MessageSquare className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">Communication</h3>\n                  <p className=\"text-sm text-gray-600\">Messages & Notices</p>\n                </div>\n              </div>\n              <div className=\"mt-4 grid grid-cols-3 gap-2 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-green-600\">ðŸ“±</div>\n                  <div className=\"text-xs text-gray-500\">WhatsApp</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-blue-600\">ðŸ“§</div>\n                  <div className=\"text-xs text-gray-500\">Email</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-purple-600\">ðŸ’¬</div>\n                  <div className=\"text-xs text-gray-500\">SMS</div>\n                </div>\n              </div>\n              <div className=\"mt-4 flex gap-2\">\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/communication/notice-board')\n                  }}\n                  className=\"flex-1 bg-blue-50 text-blue-700 px-3 py-1 rounded text-xs hover:bg-blue-100\"\n                >\n                  Notice Board\n                </button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Homework Tracking */}\n          <Card\n            className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => navigate('/dashboard/homework/daily')}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"p-3 bg-orange-100 rounded-lg\">\n                  <FileText className=\"h-6 w-6 text-orange-600\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">\n                    Homework Tracking\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">Monitor Assignments</p>\n                </div>\n              </div>\n              <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-orange-600\">24</div>\n                  <div className=\"text-gray-500\">Active</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-green-600\">78%</div>\n                  <div className=\"text-gray-500\">Submitted</div>\n                </div>\n              </div>\n              <div className=\"mt-4 flex gap-2\">\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/homework/daily')\n                  }}\n                  className=\"flex-1 bg-orange-50 text-orange-700 px-3 py-1 rounded text-xs hover:bg-orange-100\"\n                >\n                  Track Daily\n                </button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Finance Overview */}\n          <Card\n            className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => navigate('/dashboard/finance/profit-loss')}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"p-3 bg-green-100 rounded-lg\">\n                  <BarChart3 className=\"h-6 w-6 text-green-600\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">\n                    Finance Overview\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">P&L & Reports</p>\n                </div>\n              </div>\n              <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-green-600\">â‚¹2.5L</div>\n                  <div className=\"text-gray-500\">Income</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-blue-600\">85%</div>\n                  <div className=\"text-gray-500\">Collection</div>\n                </div>\n              </div>\n              <div className=\"mt-4 flex gap-2\">\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/finance/profit-loss')\n                  }}\n                  className=\"flex-1 bg-green-50 text-green-700 px-3 py-1 rounded text-xs hover:bg-green-100\"\n                >\n                  P&L Report\n                </button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Quick Management Tools */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n          <button\n            onClick={() => navigate('/dashboard/lessonplan/manage')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <BookOpen className=\"h-6 w-6 text-purple-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Lesson Plans</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/communication/log')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <MessageSquare className=\"h-6 w-6 text-blue-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Message Logs</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/finance/search-income')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <TrendingUp className=\"h-6 w-6 text-green-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Income Reports</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/finance/search-expense')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <DollarSign className=\"h-6 w-6 text-red-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Expense Reports</div>\n          </button>\n\n          <button\n            onClick={() =>\n              navigate('/dashboard/communication/send-credentials')\n            }\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <Users className=\"h-6 w-6 text-orange-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Send Credentials</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/lessonplan/syllabus-status')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <CheckCircle className=\"h-6 w-6 text-green-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Syllabus Status</div>\n          </button>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <TrendChart\n          title=\"Attendance Trends\"\n          description=\"School-wide attendance for the past 7 days\"\n          data={attendanceTrendData}\n          type=\"line\"\n          color=\"#3b82f6\"\n          formatTooltip={value => [`${value}%`, 'Attendance']}\n        />\n\n        <TrendChart\n          title=\"Exam Performance Distribution\"\n          description=\"Grade distribution across all subjects\"\n          data={examPerformanceData}\n          type=\"pie\"\n          colors={[\n            '#10b981',\n            '#3b82f6',\n            '#f59e0b',\n            '#ef4444',\n            '#8b5cf6',\n            '#6b7280',\n          ]}\n          formatTooltip={value => [`${value} students`, 'Count']}\n        />\n      </div>\n\n      {/* Main Content Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Exam Performance Summary */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <BarChart3 className=\"h-5 w-5\" />\n              <span>Exam Performance Summary</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <DataTable\n              data={examPerformanceTableData}\n              columns={examPerformanceColumns}\n              sortable={true}\n              paginated={false}\n              emptyMessage=\"No exam data available\"\n            />\n          </CardContent>\n        </Card>\n\n        {/* Upcoming School Events */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Calendar className=\"h-5 w-5\" />\n              <span>Upcoming School Events</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {Array.isArray(upcomingEvents) &&\n                upcomingEvents.map(event => (\n                  <div\n                    key={event.id}\n                    className=\"border-l-4 border-blue-500 pl-4\"\n                  >\n                    <div className=\"flex items-start justify-between\">\n                      <div>\n                        <h4 className=\"font-medium text-gray-900\">\n                          {event.title}\n                        </h4>\n                        <p className=\"text-sm text-gray-600\">\n                          {event.description}\n                        </p>\n                        <p className=\"text-xs text-gray-500 mt-1\">\n                          {new Date(event.date).toLocaleDateString()}\n                        </p>\n                      </div>\n                      <Badge variant=\"outline\">{event.type}</Badge>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Approvals Section */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"h-5 w-5\" />\n              <span>Pending Approvals</span>\n            </div>\n            <Badge variant=\"warning\">{pendingApprovals.length} pending</Badge>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {pendingApprovals.length === 0 ? (\n            <EmptyState\n              title=\"No Pending Approvals\"\n              description=\"All requests have been processed.\"\n              variant=\"default\"\n            />\n          ) : (\n            <DataTable\n              data={pendingApprovals}\n              columns={approvalsColumns}\n              sortable={true}\n              paginated={true}\n              emptyMessage=\"No pending approvals\"\n            />\n          )}\n        </CardContent>\n      </Card>\n\n      {/* School Notices */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Bell className=\"h-5 w-5\" />\n            <span>Recent School Notices</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {notices.length === 0 ? (\n            <EmptyState\n              title=\"No Notices\"\n              description=\"No recent notices available.\"\n              variant=\"default\"\n            />\n          ) : (\n            <div className=\"space-y-4\">\n              {notices.slice(0, 5).map(notice => (\n                <div\n                  key={notice.id}\n                  className=\"border-l-4 border-yellow-500 pl-4\"\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">\n                        {notice.title}\n                      </h4>\n                      <p className=\"text-sm text-gray-600 line-clamp-2\">\n                        {notice.content}\n                      </p>\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        {new Date(notice.publishedAt).toLocaleDateString()}\n                      </p>\n                    </div>\n                    <Badge\n                      variant={\n                        notice.priority === 'high'\n                          ? 'danger'\n                          : notice.priority === 'medium'\n                            ? 'warning'\n                            : 'secondary'\n                      }\n                      size=\"sm\"\n                    >\n                      {notice.priority}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Approval Confirmation Dialog */}\n      <ConfirmDialog\n        open={approvalDialogOpen}\n        onOpenChange={setApprovalDialogOpen}\n        title={`${actionType === 'approve' ? 'Approve' : 'Reject'} Request`}\n        description={`Are you sure you want to ${actionType} this ${selectedRequest?.type} request?`}\n        confirmLabel={actionType === 'approve' ? 'Approve' : 'Reject'}\n        cancelLabel=\"Cancel\"\n        variant={actionType === 'reject' ? 'destructive' : 'default'}\n        onConfirm={handleConfirmApproval}\n        loading={\n          approveLeaveRequestMutation.isPending ||\n          rejectLeaveRequestMutation.isPending ||\n          processAdmissionMutation.isPending\n        }\n      />\n    </div>\n  )\n}\n\nexport default withRoleGuard([USER_ROLES.PRINCIPAL])(PrincipalDashboard)\n"
        }
    ]
}