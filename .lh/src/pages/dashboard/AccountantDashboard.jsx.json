{
    "sourceFile": "src/pages/dashboard/AccountantDashboard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1755985211800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755985287081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -415,8 +415,9 @@\n       {/* Finance Management Modules */}\n       <div className=\"space-y-6\">\n         <h2 className=\"text-xl font-semibold text-gray-900\">\n           Finance Management\n+        </h2>\n \n         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n           {/* Profit & Loss */}\n           <Card\n"
                }
            ],
            "date": 1755985211800,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  DollarSign,\n  TrendingUp,\n  CreditCard,\n  FileText,\n  Users,\n  Calendar,\n  PieChart,\n  BarChart3,\n  Plus,\n  Download,\n  Eye,\n  Calculator,\n  Archive,\n  Layers,\n} from 'lucide-react'\nimport { withRoleGuard } from '../../guards/withRoleGuard.jsx'\nimport { USER_ROLES } from '../../constants/auth'\nimport {\n  useDashboardKpis,\n  useFeesSummary,\n  useFeePayments,\n  useStudents,\n  useRecordPayment,\n} from '../../hooks/useApi'\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  KpiCard,\n  TrendChart,\n  DataTable,\n  QuickActions,\n  FormDialog,\n  Button,\n  Input,\n  Select,\n  Badge,\n  LoadingSkeleton,\n  ErrorState,\n  EmptyState,\n} from '../../components/ui'\n\nconst AccountantDashboard = () => {\n  const navigate = useNavigate()\n\n  // State for dialogs\n  const [collectFeeDialogOpen, setCollectFeeDialogOpen] = useState(false)\n  const [addExpenseDialogOpen, setAddExpenseDialogOpen] = useState(false)\n  const [viewReceiptDialogOpen, setViewReceiptDialogOpen] = useState(false)\n  const [selectedPayment, setSelectedPayment] = useState(null)\n\n  // Fetch dashboard data\n  const {\n    data: kpis,\n    isLoading: kpisLoading,\n    error: kpisError,\n  } = useDashboardKpis('accountant')\n  const { data: feesSummary, isLoading: feesLoading } = useFeesSummary()\n  const { data: feePayments = [] } = useFeePayments()\n  const { data: students = [] } = useStudents()\n\n  // Mutations\n  const recordPaymentMutation = useRecordPayment()\n\n  // Generate fee collection chart data (last 7 days)\n  const feeCollectionData = React.useMemo(() => {\n    const data = []\n    for (let i = 6; i >= 0; i--) {\n      const date = new Date()\n      date.setDate(date.getDate() - i)\n      const dateStr = date.toISOString().split('T')[0]\n\n      const dayPayments = feePayments.filter(\n        payment => payment.paymentDate === dateStr && payment.status === 'paid',\n      )\n      const totalAmount = Array.isArray(dayPayments)\n        ? dayPayments.reduce((sum, payment) => sum + payment.amount, 0)\n        : 0\n\n      data.push({\n        name: date.toLocaleDateString('en-US', { weekday: 'short' }),\n        value: totalAmount,\n      })\n    }\n    return data\n  }, [feePayments])\n\n  // Generate expense breakdown data\n  const expenseData = [\n    { name: 'Salaries', value: 150000 },\n    { name: 'Utilities', value: 25000 },\n    { name: 'Maintenance', value: 15000 },\n    { name: 'Supplies', value: 10000 },\n    { name: 'Others', value: 8000 },\n  ]\n\n  // Calculate today's collection\n  const todayCollection = React.useMemo(() => {\n    const today = new Date().toISOString().split('T')[0]\n    const todayPayments = feePayments.filter(\n      payment => payment.paymentDate === today && payment.status === 'paid',\n    )\n    return Array.isArray(todayPayments)\n      ? todayPayments.reduce((sum, payment) => sum + payment.amount, 0)\n      : 0\n  }, [feePayments])\n\n  // KPI Cards data\n  const kpiCards = [\n    {\n      title: \"Today's Collection\",\n      value: `₹${todayCollection.toLocaleString()}`,\n      change: '+12%',\n      changeType: 'positive',\n      icon: DollarSign,\n      description: 'from yesterday',\n    },\n    {\n      title: 'Monthly Collection',\n      value: `₹${kpis?.totalCollection?.toLocaleString() || 0}`,\n      change: `${kpis?.collectionRate || 0}%`,\n      changeType: 'positive',\n      icon: TrendingUp,\n      description: 'collection rate',\n    },\n    {\n      title: 'Pending Dues',\n      value: `₹${feesSummary?.totalPending?.toLocaleString() || 0}`,\n      change: `${feesSummary?.pendingStudents || 0} students`,\n      changeType: 'negative',\n      icon: CreditCard,\n      description: 'outstanding',\n    },\n    {\n      title: 'Total Transactions',\n      value: kpis?.totalTransactions?.toString() || '0',\n      change: '+15',\n      changeType: 'positive',\n      icon: FileText,\n      description: 'this month',\n    },\n  ]\n\n  // Quick Actions\n  const quickActions = [\n    {\n      id: 'collect-fee',\n      label: 'Collect Fee',\n      icon: DollarSign,\n      variant: 'default',\n      description: 'Record fee payment',\n      onClick: () => setCollectFeeDialogOpen(true),\n    },\n    {\n      id: 'add-expense',\n      label: 'Add Expense',\n      icon: Plus,\n      variant: 'outline',\n      description: 'Record new expense',\n      onClick: () => setAddExpenseDialogOpen(true),\n    },\n    {\n      id: 'generate-report',\n      label: 'Generate Report',\n      icon: Download,\n      variant: 'outline',\n      description: 'Financial reports',\n    },\n    {\n      id: 'view-analytics',\n      label: 'View Analytics',\n      icon: BarChart3,\n      variant: 'outline',\n      description: 'Detailed analytics',\n    },\n  ]\n\n  // Table columns for fees due\n  const feesDueColumns = [\n    {\n      key: 'student',\n      header: 'Student',\n      render: (_, row) => {\n        const student = students.find(s => s.id === row.studentId)\n        return student ? (\n          <div>\n            <div className=\"font-medium\">{student.name}</div>\n            <div className=\"text-sm text-gray-500\">{student.rollNumber}</div>\n          </div>\n        ) : (\n          'Unknown Student'\n        )\n      },\n    },\n    {\n      key: 'amount',\n      header: 'Amount Due',\n      render: value => `₹${value.toLocaleString()}`,\n    },\n    {\n      key: 'dueDate',\n      header: 'Due Date',\n      render: () => {\n        const dueDate = new Date()\n        dueDate.setDate(10) // Assuming fees are due on 10th of each month\n        return dueDate.toLocaleDateString()\n      },\n    },\n    {\n      key: 'status',\n      header: 'Status',\n      render: value => (\n        <Badge variant={value === 'paid' ? 'success' : 'warning'}>\n          {value === 'paid' ? 'Paid' : 'Pending'}\n        </Badge>\n      ),\n    },\n    {\n      key: 'actions',\n      header: 'Actions',\n      render: (_, row) => (\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleCollectFee(row)}\n            disabled={row.status === 'paid'}\n          >\n            Collect\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleViewReceipt(row)}\n          >\n            <Eye className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      ),\n    },\n  ]\n\n  // Table columns for recent payments\n  const paymentsColumns = [\n    {\n      key: 'student',\n      header: 'Student',\n      render: (_, row) => {\n        const student = students.find(s => s.id === row.studentId)\n        return student ? (\n          <div>\n            <div className=\"font-medium\">{student.name}</div>\n            <div className=\"text-sm text-gray-500\">{student.rollNumber}</div>\n          </div>\n        ) : (\n          'Unknown Student'\n        )\n      },\n    },\n    {\n      key: 'amount',\n      header: 'Amount',\n      render: value => `₹${value.toLocaleString()}`,\n    },\n    {\n      key: 'paymentMethod',\n      header: 'Method',\n      render: value => (\n        <Badge variant=\"outline\" className=\"capitalize\">\n          {value}\n        </Badge>\n      ),\n    },\n    {\n      key: 'paymentDate',\n      header: 'Date',\n      render: value => new Date(value).toLocaleDateString(),\n    },\n    {\n      key: 'transactionId',\n      header: 'Transaction ID',\n      render: value => <span className=\"font-mono text-sm\">{value}</span>,\n    },\n    {\n      key: 'actions',\n      header: 'Receipt',\n      render: (_, row) => (\n        <Button\n          size=\"sm\"\n          variant=\"outline\"\n          onClick={() => handleViewReceipt(row)}\n        >\n          <Download className=\"h-4 w-4\" />\n        </Button>\n      ),\n    },\n  ]\n\n  // Event handlers\n  const handleCollectFee = feeRecord => {\n    setSelectedPayment(feeRecord)\n    setCollectFeeDialogOpen(true)\n  }\n\n  const handleViewReceipt = payment => {\n    setSelectedPayment(payment)\n    setViewReceiptDialogOpen(true)\n  }\n\n  const handleRecordPayment = async event => {\n    event.preventDefault()\n    const formData = new FormData(event.target)\n\n    try {\n      await recordPaymentMutation.mutateAsync({\n        studentId: formData.get('studentId'),\n        feeId: 'fee-1',\n        amount: parseFloat(formData.get('amount')),\n        paymentMethod: formData.get('paymentMethod'),\n        receivedBy: 'current-accountant',\n        remarks: formData.get('remarks'),\n      })\n      setCollectFeeDialogOpen(false)\n      setSelectedPayment(null)\n    } catch (error) {\n      console.error('Failed to record payment:', error)\n    }\n  }\n\n  // Get pending fee payments for table\n  const pendingFees = React.useMemo(() => {\n    return feePayments\n      .filter(payment => payment.status === 'pending')\n      .slice(0, 10)\n  }, [feePayments])\n\n  // Get recent payments for table\n  const recentPayments = React.useMemo(() => {\n    return feePayments\n      .filter(payment => payment.status === 'paid')\n      .sort((a, b) => new Date(b.paymentDate) - new Date(a.paymentDate))\n      .slice(0, 10)\n  }, [feePayments])\n\n  // Handle loading states\n  if (kpisLoading || feesLoading) {\n    return (\n      <div className=\"p-6 space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              Accountant Dashboard\n            </h1>\n            <p className=\"text-gray-600\">\n              Financial management and fee collection\n            </p>\n          </div>\n        </div>\n        <LoadingSkeleton.Dashboard />\n      </div>\n    )\n  }\n\n  // Handle error states\n  if (kpisError) {\n    return (\n      <div className=\"p-6\">\n        <ErrorState\n          error={kpisError}\n          onRetry={() => window.location.reload()}\n          showRetry={true}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">\n            Accountant Dashboard\n          </h1>\n          <p className=\"text-gray-600\">\n            Financial management and fee collection\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge variant=\"success\" className=\"flex items-center space-x-1\">\n            <DollarSign className=\"h-3 w-3\" />\n            <span>₹{todayCollection.toLocaleString()} Today</span>\n          </Badge>\n        </div>\n      </div>\n\n      {/* KPI Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {Array.isArray(kpiCards) &&\n          kpiCards.map((kpi, index) => <KpiCard key={index} {...kpi} />)}\n      </div>\n\n      {/* Quick Actions */}\n      <QuickActions\n        title=\"Quick Actions\"\n        actions={quickActions}\n        variant=\"card\"\n        layout=\"grid\"\n      />\n\n      {/* Finance Management Modules */}\n      <div className=\"space-y-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">\n          Finance Management\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {/* Profit & Loss */}\n          <Card\n            className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => navigate('/dashboard/finance/profit-loss')}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"p-3 bg-blue-100 rounded-lg\">\n                  <BarChart3 className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">Profit & Loss</h3>\n                  <p className=\"text-sm text-gray-600\">\n                    Financial Overview & Reports\n                  </p>\n                </div>\n              </div>\n              <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-green-600\">₹2.5L</div>\n                  <div className=\"text-gray-500\">Income</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-red-600\">₹1.8L</div>\n                  <div className=\"text-gray-500\">Expenses</div>\n                </div>\n              </div>\n              <div className=\"mt-4 text-center\">\n                <div className=\"font-bold text-blue-600 text-lg\">\n                  ₹70K Profit\n                </div>\n                <div className=\"text-xs text-gray-500\">This Month</div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Income Management */}\n          <Card\n            className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => navigate('/dashboard/finance/search-income')}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"p-3 bg-green-100 rounded-lg\">\n                  <TrendingUp className=\"h-6 w-6 text-green-600\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">\n                    Income Management\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">Track & Manage Income</p>\n                </div>\n              </div>\n              <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-green-600\">156</div>\n                  <div className=\"text-gray-500\">Records</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-blue-600\">12</div>\n                  <div className=\"text-gray-500\">Categories</div>\n                </div>\n              </div>\n              <div className=\"mt-4 flex gap-2\">\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/finance/add-income')\n                  }}\n                  className=\"flex-1 bg-green-50 text-green-700 px-3 py-1 rounded text-xs hover:bg-green-100\"\n                >\n                  Add Income\n                </button>\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/finance/income-head')\n                  }}\n                  className=\"flex-1 bg-blue-50 text-blue-700 px-3 py-1 rounded text-xs hover:bg-blue-100\"\n                >\n                  Manage Heads\n                </button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Expense Management */}\n          <Card\n            className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n            onClick={() => navigate('/dashboard/finance/search-expense')}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"p-3 bg-red-100 rounded-lg\">\n                  <Calculator className=\"h-6 w-6 text-red-600\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900\">\n                    Expense Management\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">\n                    Track & Control Expenses\n                  </p>\n                </div>\n              </div>\n              <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-red-600\">89</div>\n                  <div className=\"text-gray-500\">Records</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-bold text-orange-600\">8</div>\n                  <div className=\"text-gray-500\">Categories</div>\n                </div>\n              </div>\n              <div className=\"mt-4 flex gap-2\">\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/finance/add-expense')\n                  }}\n                  className=\"flex-1 bg-red-50 text-red-700 px-3 py-1 rounded text-xs hover:bg-red-100\"\n                >\n                  Add Expense\n                </button>\n                <button\n                  onClick={e => {\n                    e.stopPropagation()\n                    navigate('/dashboard/finance/expense-head')\n                  }}\n                  className=\"flex-1 bg-orange-50 text-orange-700 px-3 py-1 rounded text-xs hover:bg-orange-100\"\n                >\n                  Manage Heads\n                </button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Quick Finance Tools */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n          <button\n            onClick={() => navigate('/dashboard/finance/add-income')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <Plus className=\"h-6 w-6 text-green-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Add Income</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/finance/add-expense')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <Plus className=\"h-6 w-6 text-red-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Add Expense</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/finance/search-income')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <Archive className=\"h-6 w-6 text-blue-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Income Reports</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/finance/search-expense')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <Archive className=\"h-6 w-6 text-orange-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Expense Reports</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/finance/income-head')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <Layers className=\"h-6 w-6 text-green-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Income Heads</div>\n          </button>\n\n          <button\n            onClick={() => navigate('/dashboard/finance/expense-head')}\n            className=\"p-4 bg-white border rounded-lg hover:shadow-md transition-shadow text-center\"\n          >\n            <Layers className=\"h-6 w-6 text-red-600 mx-auto mb-2\" />\n            <div className=\"text-sm font-medium\">Expense Heads</div>\n          </button>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <TrendChart\n          title=\"Daily Fee Collection\"\n          description=\"Fee collection trend for the past 7 days\"\n          data={feeCollectionData}\n          type=\"bar\"\n          color=\"#10b981\"\n          formatTooltip={value => [`₹${value.toLocaleString()}`, 'Collection']}\n          formatYAxis={value => `₹${(value / 1000).toFixed(0)}k`}\n        />\n\n        <TrendChart\n          title=\"Expense Breakdown\"\n          description=\"Monthly expense distribution by category\"\n          data={expenseData}\n          type=\"pie\"\n          colors={['#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6']}\n          formatTooltip={value => [`₹${value.toLocaleString()}`, 'Amount']}\n        />\n      </div>\n\n      {/* Data Tables */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Fees Due Table */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <CreditCard className=\"h-5 w-5\" />\n                <span>Fees Due</span>\n              </div>\n              <Badge variant=\"warning\">{pendingFees.length} pending</Badge>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {pendingFees.length === 0 ? (\n              <EmptyState\n                title=\"No Pending Fees\"\n                description=\"All fees have been collected.\"\n                variant=\"financial\"\n              />\n            ) : (\n              <DataTable\n                data={pendingFees}\n                columns={feesDueColumns}\n                sortable={true}\n                paginated={false}\n                emptyMessage=\"No pending fees found\"\n              />\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Recent Payments Table */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <FileText className=\"h-5 w-5\" />\n              <span>Recent Payments</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {recentPayments.length === 0 ? (\n              <EmptyState\n                title=\"No Recent Payments\"\n                description=\"No payments recorded recently.\"\n                variant=\"financial\"\n              />\n            ) : (\n              <DataTable\n                data={recentPayments}\n                columns={paymentsColumns}\n                sortable={true}\n                paginated={false}\n                emptyMessage=\"No payments found\"\n              />\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Financial Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <PieChart className=\"h-5 w-5\" />\n            <span>Financial Summary</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-green-600\">\n                ₹{feesSummary?.totalPaid?.toLocaleString() || 0}\n              </div>\n              <div className=\"text-sm text-gray-600\">Total Collected</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-red-600\">\n                ₹{feesSummary?.totalPending?.toLocaleString() || 0}\n              </div>\n              <div className=\"text-sm text-gray-600\">Total Pending</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">\n                {feesSummary?.collectionPercentage || 0}%\n              </div>\n              <div className=\"text-sm text-gray-600\">Collection Rate</div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Collect Fee Dialog */}\n      <FormDialog\n        open={collectFeeDialogOpen}\n        onOpenChange={setCollectFeeDialogOpen}\n        title=\"Collect Fee Payment\"\n        description=\"Record a new fee payment\"\n        onSubmit={handleRecordPayment}\n        submitLabel=\"Record Payment\"\n        loading={recordPaymentMutation.isPending}\n      >\n        <div className=\"space-y-4\">\n          <Select name=\"studentId\" label=\"Student\" required>\n            <option value=\"\">Select Student</option>\n            {students.slice(0, 20).map(student => (\n              <option key={student.id} value={student.id}>\n                {student.name} - {student.rollNumber}\n              </option>\n            ))}\n          </Select>\n          <Input\n            name=\"amount\"\n            type=\"number\"\n            label=\"Amount\"\n            placeholder=\"5000\"\n            defaultValue={selectedPayment?.amount}\n            required\n          />\n          <Select name=\"paymentMethod\" label=\"Payment Method\" required>\n            <option value=\"\">Select Method</option>\n            <option value=\"cash\">Cash</option>\n            <option value=\"card\">Credit/Debit Card</option>\n            <option value=\"online\">Online Transfer</option>\n            <option value=\"cheque\">Cheque</option>\n            <option value=\"upi\">UPI</option>\n          </Select>\n          <Input\n            name=\"remarks\"\n            label=\"Remarks\"\n            placeholder=\"Optional remarks\"\n          />\n        </div>\n      </FormDialog>\n\n      {/* Add Expense Dialog */}\n      <FormDialog\n        open={addExpenseDialogOpen}\n        onOpenChange={setAddExpenseDialogOpen}\n        title=\"Add Expense\"\n        description=\"Record a new expense\"\n        onSubmit={() => setAddExpenseDialogOpen(false)}\n        submitLabel=\"Add Expense\"\n      >\n        <div className=\"space-y-4\">\n          <Input\n            name=\"description\"\n            label=\"Description\"\n            placeholder=\"Expense description\"\n            required\n          />\n          <Select name=\"category\" label=\"Category\" required>\n            <option value=\"\">Select Category</option>\n            <option value=\"salaries\">Salaries</option>\n            <option value=\"utilities\">Utilities</option>\n            <option value=\"maintenance\">Maintenance</option>\n            <option value=\"supplies\">Supplies</option>\n            <option value=\"others\">Others</option>\n          </Select>\n          <Input\n            name=\"amount\"\n            type=\"number\"\n            label=\"Amount\"\n            placeholder=\"10000\"\n            required\n          />\n          <Input name=\"date\" type=\"date\" label=\"Date\" required />\n          <Input\n            name=\"remarks\"\n            label=\"Remarks\"\n            placeholder=\"Additional notes\"\n          />\n        </div>\n      </FormDialog>\n\n      {/* View Receipt Dialog */}\n      <FormDialog\n        open={viewReceiptDialogOpen}\n        onOpenChange={setViewReceiptDialogOpen}\n        title=\"Payment Receipt\"\n        description=\"Payment receipt details\"\n        submitLabel=\"Close\"\n        onSubmit={() => setViewReceiptDialogOpen(false)}\n      >\n        {selectedPayment && (\n          <div className=\"space-y-4\">\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <div className=\"text-center mb-4\">\n                <h3 className=\"text-lg font-bold\">Payment Receipt</h3>\n                <p className=\"text-sm text-gray-600\">\n                  Transaction ID: {selectedPayment.transactionId}\n                </p>\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span>Student:</span>\n                  <span className=\"font-medium\">\n                    {students.find(s => s.id === selectedPayment.studentId)\n                      ?.name || 'Unknown'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Amount:</span>\n                  <span className=\"font-medium\">\n                    ₹{selectedPayment.amount.toLocaleString()}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Payment Method:</span>\n                  <span className=\"font-medium capitalize\">\n                    {selectedPayment.paymentMethod}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Date:</span>\n                  <span className=\"font-medium\">\n                    {selectedPayment.paymentDate\n                      ? new Date(\n                          selectedPayment.paymentDate\n                        ).toLocaleDateString()\n                      : 'N/A'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Status:</span>\n                  <Badge\n                    variant={\n                      selectedPayment.status === 'paid' ? 'success' : 'warning'\n                    }\n                  >\n                    {selectedPayment.status}\n                  </Badge>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex justify-center\">\n              <Button variant=\"outline\">\n                <Download className=\"h-4 w-4 mr-2\" />\n                Download Receipt\n              </Button>\n            </div>\n          </div>\n        )}\n      </FormDialog>\n    </div>\n  )\n}\n\nexport default withRoleGuard([USER_ROLES.ACCOUNTANT])(AccountantDashboard)\n"
        }
    ]
}