{
    "sourceFile": "src/pages/fees/FeesCarryForward.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1755986649572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755994925763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-import React, { useState } from 'react';\n-import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\n-import { \n+import React, { useState } from 'react'\n+import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\n+import {\n   ArrowRight,\n   Calendar,\n   Users,\n   DollarSign,\n@@ -16,29 +16,40 @@\n   Eye,\n   FileText,\n   TrendingUp,\n   Clock,\n-  BookOpen\n-} from 'lucide-react';\n-import Input from '../../components/ui/Input';\n-import Dialog from '../../components/ui/Dialog';\n-import LoadingSkeleton from '../../components/ui/LoadingSkeleton';\n-import { feesApi } from '../../lib/api/fees';\n+  BookOpen,\n+} from 'lucide-react'\n+import Input from '../../components/ui/Input'\n+import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '../../components/ui/Dialog'\n+import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n+import { feesApi } from '../../lib/api/fees'\n \n-const CarryForwardCard = ({ student, onViewDetails, onProcessCarryForward, onAdjustAmount }) => {\n-  const totalCarryForward = student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0;\n-  const adjustedAmount = student.adjustedAmount || 0;\n-  const finalAmount = totalCarryForward - adjustedAmount;\n+const CarryForwardCard = ({\n+  student,\n+  onViewDetails,\n+  onProcessCarryForward,\n+  onAdjustAmount,\n+}) => {\n+  const totalCarryForward =\n+    student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0\n+  const adjustedAmount = student.adjustedAmount || 0\n+  const finalAmount = totalCarryForward - adjustedAmount\n \n-  const getStatusColor = (status) => {\n+  const getStatusColor = status => {\n     switch (status) {\n-      case 'pending': return 'text-yellow-600 bg-yellow-100';\n-      case 'processed': return 'text-green-600 bg-green-100';\n-      case 'adjusted': return 'text-blue-600 bg-blue-100';\n-      case 'cancelled': return 'text-red-600 bg-red-100';\n-      default: return 'text-gray-600 bg-gray-100';\n+      case 'pending':\n+        return 'text-yellow-600 bg-yellow-100'\n+      case 'processed':\n+        return 'text-green-600 bg-green-100'\n+      case 'adjusted':\n+        return 'text-blue-600 bg-blue-100'\n+      case 'cancelled':\n+        return 'text-red-600 bg-red-100'\n+      default:\n+        return 'text-gray-600 bg-gray-100'\n     }\n-  };\n+  }\n \n   return (\n     <div className=\"bg-white border rounded-lg p-6 hover:shadow-md transition-shadow\">\n       <div className=\"flex justify-between items-start mb-4\">\n@@ -48,18 +59,21 @@\n           </div>\n           <div>\n             <h3 className=\"font-semibold\">{student.name}</h3>\n             <p className=\"text-sm text-gray-600\">\n-              {student.className} - {student.section} | Roll: {student.rollNumber}\n+              {student.className} - {student.section} | Roll:{' '}\n+              {student.rollNumber}\n             </p>\n           </div>\n         </div>\n         <div className=\"text-right\">\n           <div className=\"text-xl font-bold text-orange-600\">\n             ₹{finalAmount.toLocaleString()}\n           </div>\n           <div className=\"text-sm text-gray-500\">Carry Forward</div>\n-          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(student.status)}`}>\n+          <span\n+            className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(student.status)}`}\n+          >\n             {student.status.charAt(0).toUpperCase() + student.status.slice(1)}\n           </span>\n         </div>\n       </div>\n@@ -74,9 +88,11 @@\n           <div className=\"font-medium\">{student.currentAcademicYear}</div>\n         </div>\n         <div>\n           <span className=\"text-gray-500\">Original Amount:</span>\n-          <div className=\"font-medium\">₹{totalCarryForward.toLocaleString()}</div>\n+          <div className=\"font-medium\">\n+            ₹{totalCarryForward.toLocaleString()}\n+          </div>\n         </div>\n         <div>\n           <span className=\"text-gray-500\">Adjustments:</span>\n           <div className=\"font-medium text-blue-600\">\n@@ -89,11 +105,18 @@\n         <div className=\"border-t pt-3 mb-4\">\n           <div className=\"text-sm text-gray-600 mb-2\">Carry Forward Items:</div>\n           <div className=\"space-y-1\">\n             {student.carryForwardItems.slice(0, 3).map((item, index) => (\n-              <div key={index} className=\"flex justify-between items-center text-sm\">\n-                <span>{item.feeType} - {item.description}</span>\n-                <span className=\"font-medium\">₹{item.amount.toLocaleString()}</span>\n+              <div\n+                key={index}\n+                className=\"flex justify-between items-center text-sm\"\n+              >\n+                <span>\n+                  {item.feeType} - {item.description}\n+                </span>\n+                <span className=\"font-medium\">\n+                  ₹{item.amount.toLocaleString()}\n+                </span>\n               </div>\n             ))}\n             {student.carryForwardItems.length > 3 && (\n               <div className=\"text-sm text-gray-500\">\n@@ -106,9 +129,11 @@\n \n       {student.remarks && (\n         <div className=\"border-t pt-3 mb-4\">\n           <div className=\"text-sm text-gray-600 mb-1\">Remarks:</div>\n-          <div className=\"text-sm bg-gray-50 p-2 rounded\">{student.remarks}</div>\n+          <div className=\"text-sm bg-gray-50 p-2 rounded\">\n+            {student.remarks}\n+          </div>\n         </div>\n       )}\n \n       <div className=\"flex justify-between items-center\">\n@@ -143,20 +168,26 @@\n           )}\n         </div>\n       </div>\n     </div>\n-  );\n-};\n+  )\n+}\n \n const CarryForwardDetailsDialog = ({ student, open, onClose }) => {\n-  if (!student) return null;\n+  if (!student) return null\n \n-  const totalCarryForward = student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0;\n-  const adjustedAmount = student.adjustedAmount || 0;\n-  const finalAmount = totalCarryForward - adjustedAmount;\n+  const totalCarryForward =\n+    student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0\n+  const adjustedAmount = student.adjustedAmount || 0\n+  const finalAmount = totalCarryForward - adjustedAmount\n \n   return (\n-    <Dialog open={open} onClose={onClose} title={`Carry Forward Details - ${student.name}`} size=\"xl\">\n+    <Dialog\n+      open={open}\n+      onClose={onClose}\n+      title={`Carry Forward Details - ${student.name}`}\n+      size=\"xl\"\n+    >\n       <div className=\"space-y-6\">\n         {/* Student Information */}\n         <div className=\"bg-gray-50 rounded-lg p-4\">\n           <h3 className=\"font-medium mb-3\">Student Information</h3>\n@@ -174,9 +205,11 @@\n               <div className=\"font-medium\">{student.previousClass}</div>\n             </div>\n             <div>\n               <span className=\"text-gray-500\">Current Class:</span>\n-              <div className=\"font-medium\">{student.className} - {student.section}</div>\n+              <div className=\"font-medium\">\n+                {student.className} - {student.section}\n+              </div>\n             </div>\n             <div>\n               <span className=\"text-gray-500\">Previous Year:</span>\n               <div className=\"font-medium\">{student.previousAcademicYear}</div>\n@@ -190,17 +223,23 @@\n \n         {/* Carry Forward Summary */}\n         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n           <div className=\"bg-orange-50 rounded-lg p-4 text-center\">\n-            <div className=\"text-2xl font-bold text-orange-600\">₹{totalCarryForward.toLocaleString()}</div>\n+            <div className=\"text-2xl font-bold text-orange-600\">\n+              ₹{totalCarryForward.toLocaleString()}\n+            </div>\n             <div className=\"text-sm text-gray-600\">Original Amount</div>\n           </div>\n           <div className=\"bg-blue-50 rounded-lg p-4 text-center\">\n-            <div className=\"text-2xl font-bold text-blue-600\">₹{adjustedAmount.toLocaleString()}</div>\n+            <div className=\"text-2xl font-bold text-blue-600\">\n+              ₹{adjustedAmount.toLocaleString()}\n+            </div>\n             <div className=\"text-sm text-gray-600\">Adjustments</div>\n           </div>\n           <div className=\"bg-green-50 rounded-lg p-4 text-center\">\n-            <div className=\"text-2xl font-bold text-green-600\">₹{finalAmount.toLocaleString()}</div>\n+            <div className=\"text-2xl font-bold text-green-600\">\n+              ₹{finalAmount.toLocaleString()}\n+            </div>\n             <div className=\"text-sm text-gray-600\">Final Amount</div>\n           </div>\n         </div>\n \n@@ -222,10 +261,14 @@\n                 {student.carryForwardItems?.map((item, index) => (\n                   <tr key={index} className=\"border-b hover:bg-gray-50\">\n                     <td className=\"py-3 px-4 font-medium\">{item.feeType}</td>\n                     <td className=\"py-3 px-4\">{item.description}</td>\n-                    <td className=\"py-3 px-4\">{new Date(item.dueDate).toLocaleDateString()}</td>\n-                    <td className=\"py-3 px-4 text-right font-medium\">₹{item.amount.toLocaleString()}</td>\n+                    <td className=\"py-3 px-4\">\n+                      {new Date(item.dueDate).toLocaleDateString()}\n+                    </td>\n+                    <td className=\"py-3 px-4 text-right font-medium\">\n+                      ₹{item.amount.toLocaleString()}\n+                    </td>\n                     <td className=\"py-3 px-4 text-center\">\n                       <span className=\"px-2 py-1 bg-orange-100 text-orange-800 rounded text-xs\">\n                         Pending\n                       </span>\n@@ -234,10 +277,14 @@\n                 ))}\n               </tbody>\n               <tfoot className=\"bg-gray-50\">\n                 <tr>\n-                  <td colSpan=\"3\" className=\"py-3 px-4 font-bold text-right\">Total:</td>\n-                  <td className=\"py-3 px-4 text-right font-bold text-lg\">₹{totalCarryForward.toLocaleString()}</td>\n+                  <td colSpan=\"3\" className=\"py-3 px-4 font-bold text-right\">\n+                    Total:\n+                  </td>\n+                  <td className=\"py-3 px-4 text-right font-bold text-lg\">\n+                    ₹{totalCarryForward.toLocaleString()}\n+                  </td>\n                   <td></td>\n                 </tr>\n               </tfoot>\n             </table>\n@@ -259,17 +306,24 @@\n                     <th className=\"text-left py-2 px-4\">By</th>\n                   </tr>\n                 </thead>\n                 <tbody>\n-                  {Array.isArray(student.adjustmentHistory) && student.adjustmentHistory.map((adjustment, index) => (\n-                    <tr key={index} className=\"border-b text-sm\">\n-                      <td className=\"py-2 px-4\">{new Date(adjustment.date).toLocaleDateString()}</td>\n-                      <td className=\"py-2 px-4 capitalize\">{adjustment.type}</td>\n-                      <td className=\"py-2 px-4 text-right\">₹{adjustment.amount.toLocaleString()}</td>\n-                      <td className=\"py-2 px-4\">{adjustment.reason}</td>\n-                      <td className=\"py-2 px-4\">{adjustment.adjustedBy}</td>\n-                    </tr>\n-                  ))}\n+                  {Array.isArray(student.adjustmentHistory) &&\n+                    student.adjustmentHistory.map((adjustment, index) => (\n+                      <tr key={index} className=\"border-b text-sm\">\n+                        <td className=\"py-2 px-4\">\n+                          {new Date(adjustment.date).toLocaleDateString()}\n+                        </td>\n+                        <td className=\"py-2 px-4 capitalize\">\n+                          {adjustment.type}\n+                        </td>\n+                        <td className=\"py-2 px-4 text-right\">\n+                          ₹{adjustment.amount.toLocaleString()}\n+                        </td>\n+                        <td className=\"py-2 px-4\">{adjustment.reason}</td>\n+                        <td className=\"py-2 px-4\">{adjustment.adjustedBy}</td>\n+                      </tr>\n+                    ))}\n                 </tbody>\n               </table>\n             </div>\n           </div>\n@@ -285,74 +339,88 @@\n           </button>\n         </div>\n       </div>\n     </Dialog>\n-  );\n-};\n+  )\n+}\n \n const AdjustAmountDialog = ({ student, open, onClose, onAdjust }) => {\n-  const [adjustmentType, setAdjustmentType] = useState('waiver');\n-  const [adjustmentAmount, setAdjustmentAmount] = useState(0);\n-  const [adjustmentReason, setAdjustmentReason] = useState('');\n-  const [isProcessing, setIsProcessing] = useState(false);\n+  const [adjustmentType, setAdjustmentType] = useState('waiver')\n+  const [adjustmentAmount, setAdjustmentAmount] = useState(0)\n+  const [adjustmentReason, setAdjustmentReason] = useState('')\n+  const [isProcessing, setIsProcessing] = useState(false)\n \n   const handleAdjust = async () => {\n     if (!adjustmentAmount || !adjustmentReason.trim()) {\n-      alert('Please enter adjustment amount and reason');\n-      return;\n+      alert('Please enter adjustment amount and reason')\n+      return\n     }\n \n-    setIsProcessing(true);\n+    setIsProcessing(true)\n     try {\n       await onAdjust(student.id, {\n         type: adjustmentType,\n         amount: adjustmentAmount,\n-        reason: adjustmentReason\n-      });\n-      onClose();\n-      setAdjustmentAmount(0);\n-      setAdjustmentReason('');\n+        reason: adjustmentReason,\n+      })\n+      onClose()\n+      setAdjustmentAmount(0)\n+      setAdjustmentReason('')\n     } catch (error) {\n-      console.error('Adjustment error:', error);\n-      alert('Error processing adjustment. Please try again.');\n+      console.error('Adjustment error:', error)\n+      alert('Error processing adjustment. Please try again.')\n     } finally {\n-      setIsProcessing(false);\n+      setIsProcessing(false)\n     }\n-  };\n+  }\n \n-  if (!student) return null;\n+  if (!student) return null\n \n-  const totalCarryForward = student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0;\n-  const currentAdjustment = student.adjustedAmount || 0;\n-  const maxAdjustment = totalCarryForward - currentAdjustment;\n+  const totalCarryForward =\n+    student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0\n+  const currentAdjustment = student.adjustedAmount || 0\n+  const maxAdjustment = totalCarryForward - currentAdjustment\n \n   return (\n-    <Dialog open={open} onClose={onClose} title={`Adjust Carry Forward - ${student.name}`} size=\"lg\">\n+    <Dialog\n+      open={open}\n+      onClose={onClose}\n+      title={`Adjust Carry Forward - ${student.name}`}\n+      size=\"lg\"\n+    >\n       <div className=\"space-y-6\">\n         <div className=\"bg-blue-50 rounded-lg p-4\">\n           <h3 className=\"font-medium mb-2\">Current Status</h3>\n           <div className=\"grid grid-cols-3 gap-4 text-sm\">\n             <div>\n               <span className=\"text-gray-600\">Original Amount:</span>\n-              <div className=\"font-medium\">₹{totalCarryForward.toLocaleString()}</div>\n+              <div className=\"font-medium\">\n+                ₹{totalCarryForward.toLocaleString()}\n+              </div>\n             </div>\n             <div>\n               <span className=\"text-gray-600\">Current Adjustments:</span>\n-              <div className=\"font-medium\">₹{currentAdjustment.toLocaleString()}</div>\n+              <div className=\"font-medium\">\n+                ₹{currentAdjustment.toLocaleString()}\n+              </div>\n             </div>\n             <div>\n               <span className=\"text-gray-600\">Remaining:</span>\n-              <div className=\"font-medium\">₹{maxAdjustment.toLocaleString()}</div>\n+              <div className=\"font-medium\">\n+                ₹{maxAdjustment.toLocaleString()}\n+              </div>\n             </div>\n           </div>\n         </div>\n \n         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n           <div>\n-            <label className=\"block text-sm font-medium mb-1\">Adjustment Type</label>\n+            <label className=\"block text-sm font-medium mb-1\">\n+              Adjustment Type\n+            </label>\n             <select\n               value={adjustmentType}\n-              onChange={(e) => setAdjustmentType(e.target.value)}\n+              onChange={e => setAdjustmentType(e.target.value)}\n               className=\"w-full border rounded-lg px-3 py-2\"\n             >\n               <option value=\"waiver\">Fee Waiver</option>\n               <option value=\"discount\">Discount</option>\n@@ -364,20 +432,22 @@\n           <Input\n             label=\"Adjustment Amount\"\n             type=\"number\"\n             value={adjustmentAmount}\n-            onChange={(e) => setAdjustmentAmount(parseFloat(e.target.value) || 0)}\n+            onChange={e => setAdjustmentAmount(parseFloat(e.target.value) || 0)}\n             min=\"0\"\n             max={maxAdjustment}\n             placeholder=\"Enter amount\"\n           />\n         </div>\n \n         <div>\n-          <label className=\"block text-sm font-medium mb-1\">Reason for Adjustment *</label>\n+          <label className=\"block text-sm font-medium mb-1\">\n+            Reason for Adjustment *\n+          </label>\n           <textarea\n             value={adjustmentReason}\n-            onChange={(e) => setAdjustmentReason(e.target.value)}\n+            onChange={e => setAdjustmentReason(e.target.value)}\n             rows={3}\n             className=\"w-full border rounded-lg px-3 py-2\"\n             placeholder=\"Provide detailed reason for this adjustment...\"\n           />\n@@ -386,10 +456,11 @@\n         <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n           <div className=\"flex items-start gap-2\">\n             <AlertTriangle className=\"w-5 h-5 text-yellow-600 mt-0.5\" />\n             <div className=\"text-sm text-yellow-800\">\n-              <strong>Note:</strong> This adjustment will reduce the carry forward amount. \n-              Final amount after adjustment: ₹{(maxAdjustment - adjustmentAmount).toLocaleString()}\n+              <strong>Note:</strong> This adjustment will reduce the carry\n+              forward amount. Final amount after adjustment: ₹\n+              {(maxAdjustment - adjustmentAmount).toLocaleString()}\n             </div>\n           </div>\n         </div>\n \n@@ -401,9 +472,11 @@\n             Cancel\n           </button>\n           <button\n             onClick={handleAdjust}\n-            disabled={isProcessing || !adjustmentAmount || !adjustmentReason.trim()}\n+            disabled={\n+              isProcessing || !adjustmentAmount || !adjustmentReason.trim()\n+            }\n             className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2\"\n           >\n             {isProcessing ? (\n               <RefreshCw className=\"w-4 h-4 animate-spin\" />\n@@ -414,48 +487,66 @@\n           </button>\n         </div>\n       </div>\n     </Dialog>\n-  );\n-};\n+  )\n+}\n \n-const BulkProcessDialog = ({ selectedStudents, open, onClose, onBulkProcess }) => {\n-  const [processType, setProcessType] = useState('carry_forward');\n-  const [targetAcademicYear, setTargetAcademicYear] = useState('2024-25');\n-  const [applyDiscount, setApplyDiscount] = useState(false);\n-  const [discountPercentage, setDiscountPercentage] = useState(0);\n-  const [isProcessing, setIsProcessing] = useState(false);\n+const BulkProcessDialog = ({\n+  selectedStudents,\n+  open,\n+  onClose,\n+  onBulkProcess,\n+}) => {\n+  const [processType, setProcessType] = useState('carry_forward')\n+  const [targetAcademicYear, setTargetAcademicYear] = useState('2024-25')\n+  const [applyDiscount, setApplyDiscount] = useState(false)\n+  const [discountPercentage, setDiscountPercentage] = useState(0)\n+  const [isProcessing, setIsProcessing] = useState(false)\n \n-  const totalAmount = Array.isArray(selectedStudents) ? selectedStudents.reduce((sum, student) => {\n-    const carryForwardAmount = student.carryForwardItems?.reduce((itemSum, item) => itemSum + item.amount, 0) || 0;\n-    const adjustedAmount = student.adjustedAmount || 0;\n-    return sum + (carryForwardAmount - adjustedAmount);\n-  }, 0) : 0;\n+  const totalAmount = Array.isArray(selectedStudents)\n+    ? selectedStudents.reduce((sum, student) => {\n+        const carryForwardAmount =\n+          student.carryForwardItems?.reduce(\n+            (itemSum, item) => itemSum + item.amount,\n+            0,\n+          ) || 0\n+        const adjustedAmount = student.adjustedAmount || 0\n+        return sum + (carryForwardAmount - adjustedAmount)\n+      }, 0)\n+    : 0\n \n-  const discountAmount = applyDiscount ? (totalAmount * discountPercentage) / 100 : 0;\n-  const finalAmount = totalAmount - discountAmount;\n+  const discountAmount = applyDiscount\n+    ? (totalAmount * discountPercentage) / 100\n+    : 0\n+  const finalAmount = totalAmount - discountAmount\n \n   const handleBulkProcess = async () => {\n-    setIsProcessing(true);\n+    setIsProcessing(true)\n     try {\n       await onBulkProcess({\n         studentIds: selectedStudents.map(s => s.id),\n         processType,\n         targetAcademicYear,\n         applyDiscount,\n-        discountPercentage\n-      });\n-      onClose();\n+        discountPercentage,\n+      })\n+      onClose()\n     } catch (error) {\n-      console.error('Bulk process error:', error);\n-      alert('Error processing bulk operation. Please try again.');\n+      console.error('Bulk process error:', error)\n+      alert('Error processing bulk operation. Please try again.')\n     } finally {\n-      setIsProcessing(false);\n+      setIsProcessing(false)\n     }\n-  };\n+  }\n \n   return (\n-    <Dialog open={open} onClose={onClose} title=\"Bulk Process Carry Forward\" size=\"lg\">\n+    <Dialog\n+      open={open}\n+      onClose={onClose}\n+      title=\"Bulk Process Carry Forward\"\n+      size=\"lg\"\n+    >\n       <div className=\"space-y-6\">\n         <div className=\"bg-blue-50 rounded-lg p-4\">\n           <h3 className=\"font-medium mb-2\">Selected Students</h3>\n           <div className=\"grid grid-cols-3 gap-4 text-sm\">\n@@ -468,31 +559,39 @@\n               <div className=\"font-medium\">₹{totalAmount.toLocaleString()}</div>\n             </div>\n             <div>\n               <span className=\"text-gray-600\">Final Amount:</span>\n-              <div className=\"font-medium text-green-600\">₹{finalAmount.toLocaleString()}</div>\n+              <div className=\"font-medium text-green-600\">\n+                ₹{finalAmount.toLocaleString()}\n+              </div>\n             </div>\n           </div>\n         </div>\n \n         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n           <div>\n-            <label className=\"block text-sm font-medium mb-1\">Process Type</label>\n+            <label className=\"block text-sm font-medium mb-1\">\n+              Process Type\n+            </label>\n             <select\n               value={processType}\n-              onChange={(e) => setProcessType(e.target.value)}\n+              onChange={e => setProcessType(e.target.value)}\n               className=\"w-full border rounded-lg px-3 py-2\"\n             >\n               <option value=\"carry_forward\">Carry Forward to Next Year</option>\n               <option value=\"write_off\">Write Off Amount</option>\n-              <option value=\"convert_to_dues\">Convert to Current Year Dues</option>\n+              <option value=\"convert_to_dues\">\n+                Convert to Current Year Dues\n+              </option>\n             </select>\n           </div>\n           <div>\n-            <label className=\"block text-sm font-medium mb-1\">Target Academic Year</label>\n+            <label className=\"block text-sm font-medium mb-1\">\n+              Target Academic Year\n+            </label>\n             <select\n               value={targetAcademicYear}\n-              onChange={(e) => setTargetAcademicYear(e.target.value)}\n+              onChange={e => setTargetAcademicYear(e.target.value)}\n               className=\"w-full border rounded-lg px-3 py-2\"\n             >\n               <option value=\"2024-25\">2024-25</option>\n               <option value=\"2025-26\">2025-26</option>\n@@ -504,21 +603,23 @@\n           <label className=\"flex items-center gap-2\">\n             <input\n               type=\"checkbox\"\n               checked={applyDiscount}\n-              onChange={(e) => setApplyDiscount(e.target.checked)}\n+              onChange={e => setApplyDiscount(e.target.checked)}\n               className=\"rounded\"\n             />\n             <span className=\"text-sm font-medium\">Apply bulk discount</span>\n           </label>\n-          \n+\n           {applyDiscount && (\n             <div className=\"ml-6\">\n               <Input\n                 label=\"Discount Percentage\"\n                 type=\"number\"\n                 value={discountPercentage}\n-                onChange={(e) => setDiscountPercentage(parseFloat(e.target.value) || 0)}\n+                onChange={e =>\n+                  setDiscountPercentage(parseFloat(e.target.value) || 0)\n+                }\n                 min=\"0\"\n                 max=\"100\"\n                 placeholder=\"Enter discount percentage\"\n               />\n@@ -532,10 +633,11 @@\n         <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n           <div className=\"flex items-start gap-2\">\n             <AlertTriangle className=\"w-5 h-5 text-yellow-600 mt-0.5\" />\n             <div className=\"text-sm text-yellow-800\">\n-              <strong>Warning:</strong> This action will process carry forward for {selectedStudents.length} students. \n-              This operation cannot be undone. Please review carefully before proceeding.\n+              <strong>Warning:</strong> This action will process carry forward\n+              for {selectedStudents.length} students. This operation cannot be\n+              undone. Please review carefully before proceeding.\n             </div>\n           </div>\n         </div>\n \n@@ -555,128 +657,139 @@\n               <RefreshCw className=\"w-4 h-4 animate-spin\" />\n             ) : (\n               <ArrowRight className=\"w-4 h-4\" />\n             )}\n-            {isProcessing ? 'Processing...' : `Process ${selectedStudents.length} Students`}\n+            {isProcessing\n+              ? 'Processing...'\n+              : `Process ${selectedStudents.length} Students`}\n           </button>\n         </div>\n       </div>\n     </Dialog>\n-  );\n-};\n+  )\n+}\n \n const FeesCarryForward = () => {\n-  const [selectedStudent, setSelectedStudent] = useState(null);\n-  const [selectedStudents, setSelectedStudents] = useState([]);\n-  const [showDetailsDialog, setShowDetailsDialog] = useState(false);\n-  const [showAdjustDialog, setShowAdjustDialog] = useState(false);\n-  const [showBulkProcessDialog, setShowBulkProcessDialog] = useState(false);\n+  const [selectedStudent, setSelectedStudent] = useState(null)\n+  const [selectedStudents, setSelectedStudents] = useState([])\n+  const [showDetailsDialog, setShowDetailsDialog] = useState(false)\n+  const [showAdjustDialog, setShowAdjustDialog] = useState(false)\n+  const [showBulkProcessDialog, setShowBulkProcessDialog] = useState(false)\n   const [filters, setFilters] = useState({\n     searchTerm: '',\n     academicYear: '2023-24',\n     status: 'all',\n     classId: '',\n     amountFrom: '',\n-    amountTo: ''\n-  });\n+    amountTo: '',\n+  })\n \n-  const queryClient = useQueryClient();\n+  const queryClient = useQueryClient()\n \n-  const { data: carryForwardData, isLoading, refetch } = useQuery({\n+  const {\n+    data: carryForwardData,\n+    isLoading,\n+    refetch,\n+  } = useQuery({\n     queryKey: ['carry-forward', 'students', filters],\n-    queryFn: () => feesApi.getCarryForwardStudents(filters)\n-  });\n+    queryFn: () => feesApi.getCarryForwardStudents(filters),\n+  })\n \n   const { data: classesData } = useQuery({\n     queryKey: ['classes', 'all'],\n-    queryFn: () => feesApi.getClasses()\n-  });\n+    queryFn: () => feesApi.getClasses(),\n+  })\n \n   const adjustAmountMutation = useMutation({\n-    mutationFn: ({ studentId, adjustmentData }) => feesApi.adjustCarryForwardAmount(studentId, adjustmentData),\n+    mutationFn: ({ studentId, adjustmentData }) =>\n+      feesApi.adjustCarryForwardAmount(studentId, adjustmentData),\n     onSuccess: () => {\n-      queryClient.invalidateQueries(['carry-forward']);\n-      setShowAdjustDialog(false);\n-    }\n-  });\n+      queryClient.invalidateQueries(['carry-forward'])\n+      setShowAdjustDialog(false)\n+    },\n+  })\n \n   const processCarryForwardMutation = useMutation({\n-    mutationFn: (studentId) => feesApi.processCarryForward(studentId),\n+    mutationFn: studentId => feesApi.processCarryForward(studentId),\n     onSuccess: () => {\n-      queryClient.invalidateQueries(['carry-forward']);\n-    }\n-  });\n+      queryClient.invalidateQueries(['carry-forward'])\n+    },\n+  })\n \n   const bulkProcessMutation = useMutation({\n-    mutationFn: (bulkData) => feesApi.bulkProcessCarryForward(bulkData),\n+    mutationFn: bulkData => feesApi.bulkProcessCarryForward(bulkData),\n     onSuccess: () => {\n-      queryClient.invalidateQueries(['carry-forward']);\n-      setSelectedStudents([]);\n-      setShowBulkProcessDialog(false);\n-    }\n-  });\n+      queryClient.invalidateQueries(['carry-forward'])\n+      setSelectedStudents([])\n+      setShowBulkProcessDialog(false)\n+    },\n+  })\n \n-  const handleViewDetails = (student) => {\n-    setSelectedStudent(student);\n-    setShowDetailsDialog(true);\n-  };\n+  const handleViewDetails = student => {\n+    setSelectedStudent(student)\n+    setShowDetailsDialog(true)\n+  }\n \n-  const handleAdjustAmount = (student) => {\n-    setSelectedStudent(student);\n-    setShowAdjustDialog(true);\n-  };\n+  const handleAdjustAmount = student => {\n+    setSelectedStudent(student)\n+    setShowAdjustDialog(true)\n+  }\n \n-  const handleProcessCarryForward = async (student) => {\n-    if (confirm(`Process carry forward for ${student.name}? This action cannot be undone.`)) {\n-      processCarryForwardMutation.mutate(student.id);\n+  const handleProcessCarryForward = async student => {\n+    if (\n+      confirm(\n+        `Process carry forward for ${student.name}? This action cannot be undone.`,\n+      )\n+    ) {\n+      processCarryForwardMutation.mutate(student.id)\n     }\n-  };\n+  }\n \n   const handleAdjustAmountSubmit = (studentId, adjustmentData) => {\n-    adjustAmountMutation.mutate({ studentId, adjustmentData });\n-  };\n+    adjustAmountMutation.mutate({ studentId, adjustmentData })\n+  }\n \n-  const handleBulkProcess = (bulkData) => {\n-    bulkProcessMutation.mutate(bulkData);\n-  };\n+  const handleBulkProcess = bulkData => {\n+    bulkProcessMutation.mutate(bulkData)\n+  }\n \n-  const toggleStudentSelection = (student) => {\n+  const toggleStudentSelection = student => {\n     setSelectedStudents(prev => {\n-      const isSelected = prev.find(s => s.id === student.id);\n+      const isSelected = prev.find(s => s.id === student.id)\n       if (isSelected) {\n-        return prev.filter(s => s.id !== student.id);\n+        return prev.filter(s => s.id !== student.id)\n       } else {\n-        return [...prev, student];\n+        return [...prev, student]\n       }\n-    });\n-  };\n+    })\n+  }\n \n   const selectAllStudents = () => {\n     if (selectedStudents.length === carryForwardData?.data?.length) {\n-      setSelectedStudents([]);\n+      setSelectedStudents([])\n     } else {\n-      setSelectedStudents(carryForwardData?.data || []);\n+      setSelectedStudents(carryForwardData?.data || [])\n     }\n-  };\n+  }\n \n   const handleExportData = async () => {\n     try {\n-      const exportData = carryForwardData?.data || [];\n-      const csvContent = generateCSVContent(exportData);\n-      const blob = new Blob([csvContent], { type: 'text/csv' });\n-      const url = window.URL.createObjectURL(blob);\n-      const a = document.createElement('a');\n-      a.href = url;\n-      a.download = `carry-forward-${filters.academicYear}.csv`;\n-      a.click();\n-      window.URL.revokeObjectURL(url);\n+      const exportData = carryForwardData?.data || []\n+      const csvContent = generateCSVContent(exportData)\n+      const blob = new Blob([csvContent], { type: 'text/csv' })\n+      const url = window.URL.createObjectURL(blob)\n+      const a = document.createElement('a')\n+      a.href = url\n+      a.download = `carry-forward-${filters.academicYear}.csv`\n+      a.click()\n+      window.URL.revokeObjectURL(url)\n     } catch (error) {\n-      console.error('Export error:', error);\n-      alert('Error exporting data. Please try again.');\n+      console.error('Export error:', error)\n+      alert('Error exporting data. Please try again.')\n     }\n-  };\n+  }\n \n-  const generateCSVContent = (data) => {\n+  const generateCSVContent = data => {\n     const headers = [\n       'Student Name',\n       'Roll Number',\n       'Previous Class',\n@@ -685,15 +798,19 @@\n       'Current Year',\n       'Original Amount',\n       'Adjusted Amount',\n       'Final Amount',\n-      'Status'\n-    ];\n+      'Status',\n+    ]\n \n     const rows = data.map(student => {\n-      const totalCarryForward = student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0;\n-      const adjustedAmount = student.adjustedAmount || 0;\n-      const finalAmount = totalCarryForward - adjustedAmount;\n+      const totalCarryForward =\n+        student.carryForwardItems?.reduce(\n+          (sum, item) => sum + item.amount,\n+          0,\n+        ) || 0\n+      const adjustedAmount = student.adjustedAmount || 0\n+      const finalAmount = totalCarryForward - adjustedAmount\n \n       return [\n         student.name,\n         student.rollNumber,\n@@ -703,34 +820,40 @@\n         student.currentAcademicYear,\n         totalCarryForward,\n         adjustedAmount,\n         finalAmount,\n-        student.status\n-      ];\n-    });\n+        student.status,\n+      ]\n+    })\n \n-    return [headers, ...rows].map(row => row.join(',')).join('\\n');\n-  };\n+    return [headers, ...rows].map(row => row.join(',')).join('\\n')\n+  }\n \n   const getStatistics = () => {\n-    const students = carryForwardData?.data || [];\n-    const totalAmount = Array.isArray(students) ? students.reduce((sum, student) => {\n-      const carryForwardAmount = student.carryForwardItems?.reduce((itemSum, item) => itemSum + item.amount, 0) || 0;\n-      const adjustedAmount = student.adjustedAmount || 0;\n-      return sum + (carryForwardAmount - adjustedAmount);\n-    }, 0) : 0;\n-    \n+    const students = carryForwardData?.data || []\n+    const totalAmount = Array.isArray(students)\n+      ? students.reduce((sum, student) => {\n+          const carryForwardAmount =\n+            student.carryForwardItems?.reduce(\n+              (itemSum, item) => itemSum + item.amount,\n+              0,\n+            ) || 0\n+          const adjustedAmount = student.adjustedAmount || 0\n+          return sum + (carryForwardAmount - adjustedAmount)\n+        }, 0)\n+      : 0\n+\n     return {\n       totalStudents: students.length,\n       pendingStudents: students.filter(s => s.status === 'pending').length,\n       processedStudents: students.filter(s => s.status === 'processed').length,\n-      totalAmount\n-    };\n-  };\n+      totalAmount,\n+    }\n+  }\n \n-  const stats = getStatistics();\n+  const stats = getStatistics()\n \n-  if (isLoading) return <LoadingSkeleton />;\n+  if (isLoading) return <LoadingSkeleton />\n \n   return (\n     <div className=\"space-y-6\">\n       <div className=\"flex justify-between items-center\">\n@@ -794,9 +917,11 @@\n         <div className=\"bg-white p-4 rounded-lg shadow\">\n           <div className=\"flex items-center gap-3\">\n             <DollarSign className=\"w-8 h-8 text-orange-600\" />\n             <div>\n-              <p className=\"text-2xl font-bold\">₹{stats.totalAmount.toLocaleString()}</p>\n+              <p className=\"text-2xl font-bold\">\n+                ₹{stats.totalAmount.toLocaleString()}\n+              </p>\n               <p className=\"text-sm text-gray-600\">Total Amount</p>\n             </div>\n           </div>\n         </div>\n@@ -810,24 +935,30 @@\n             <input\n               type=\"text\"\n               placeholder=\"Search students...\"\n               value={filters.searchTerm}\n-              onChange={(e) => setFilters(prev => ({ ...prev, searchTerm: e.target.value }))}\n+              onChange={e =>\n+                setFilters(prev => ({ ...prev, searchTerm: e.target.value }))\n+              }\n               className=\"pl-10 pr-4 py-2 border rounded-lg w-full\"\n             />\n           </div>\n           <select\n             value={filters.academicYear}\n-            onChange={(e) => setFilters(prev => ({ ...prev, academicYear: e.target.value }))}\n+            onChange={e =>\n+              setFilters(prev => ({ ...prev, academicYear: e.target.value }))\n+            }\n             className=\"border rounded-lg px-3 py-2\"\n           >\n             <option value=\"2023-24\">2023-24</option>\n             <option value=\"2022-23\">2022-23</option>\n             <option value=\"2021-22\">2021-22</option>\n           </select>\n           <select\n             value={filters.status}\n-            onChange={(e) => setFilters(prev => ({ ...prev, status: e.target.value }))}\n+            onChange={e =>\n+              setFilters(prev => ({ ...prev, status: e.target.value }))\n+            }\n             className=\"border rounded-lg px-3 py-2\"\n           >\n             <option value=\"all\">All Status</option>\n             <option value=\"pending\">Pending</option>\n@@ -835,30 +966,37 @@\n             <option value=\"adjusted\">Adjusted</option>\n           </select>\n           <select\n             value={filters.classId}\n-            onChange={(e) => setFilters(prev => ({ ...prev, classId: e.target.value }))}\n+            onChange={e =>\n+              setFilters(prev => ({ ...prev, classId: e.target.value }))\n+            }\n             className=\"border rounded-lg px-3 py-2\"\n           >\n             <option value=\"\">All Classes</option>\n-            {Array.isArray(classesData?.data) && classesData.data.map(cls => (\n-              <option key={cls.id} value={cls.id}>\n-                {cls.name}\n-              </option>\n-            ))}\n+            {Array.isArray(classesData?.data) &&\n+              classesData.data.map(cls => (\n+                <option key={cls.id} value={cls.id}>\n+                  {cls.name}\n+                </option>\n+              ))}\n           </select>\n           <input\n             type=\"number\"\n             placeholder=\"Min Amount\"\n             value={filters.amountFrom}\n-            onChange={(e) => setFilters(prev => ({ ...prev, amountFrom: e.target.value }))}\n+            onChange={e =>\n+              setFilters(prev => ({ ...prev, amountFrom: e.target.value }))\n+            }\n             className=\"border rounded-lg px-3 py-2\"\n           />\n           <input\n             type=\"number\"\n             placeholder=\"Max Amount\"\n             value={filters.amountTo}\n-            onChange={(e) => setFilters(prev => ({ ...prev, amountTo: e.target.value }))}\n+            onChange={e =>\n+              setFilters(prev => ({ ...prev, amountTo: e.target.value }))\n+            }\n             className=\"border rounded-lg px-3 py-2\"\n           />\n         </div>\n       </div>\n@@ -869,20 +1007,25 @@\n           <div className=\"flex items-center gap-4\">\n             <label className=\"flex items-center gap-2\">\n               <input\n                 type=\"checkbox\"\n-                checked={selectedStudents.length === carryForwardData?.data?.length && carryForwardData?.data?.length > 0}\n+                checked={\n+                  selectedStudents.length === carryForwardData?.data?.length &&\n+                  carryForwardData?.data?.length > 0\n+                }\n                 onChange={selectAllStudents}\n                 className=\"rounded\"\n               />\n               <span className=\"text-sm font-medium\">Select All</span>\n             </label>\n             <span className=\"text-sm text-gray-500\">\n-              {selectedStudents.length} of {carryForwardData?.data?.length || 0} selected\n+              {selectedStudents.length} of {carryForwardData?.data?.length || 0}{' '}\n+              selected\n             </span>\n           </div>\n           <div className=\"text-sm text-gray-500\">\n-            Showing {carryForwardData?.data?.length || 0} students with carry forward amounts\n+            Showing {carryForwardData?.data?.length || 0} students with carry\n+            forward amounts\n           </div>\n         </div>\n       </div>\n \n@@ -890,11 +1033,14 @@\n       <div className=\"space-y-4\">\n         {carryForwardData?.data?.length === 0 ? (\n           <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n             <BookOpen className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n-            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Carry Forward Records</h3>\n+            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n+              No Carry Forward Records\n+            </h3>\n             <p className=\"text-gray-500\">\n-              No students have pending carry forward amounts for the selected criteria.\n+              No students have pending carry forward amounts for the selected\n+              criteria.\n             </p>\n           </div>\n         ) : (\n           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n@@ -902,9 +1048,12 @@\n               <div key={student.id} className=\"relative\">\n                 <label className=\"absolute top-4 left-4 z-10\">\n                   <input\n                     type=\"checkbox\"\n-                    checked={selectedStudents.find(s => s.id === student.id) !== undefined}\n+                    checked={\n+                      selectedStudents.find(s => s.id === student.id) !==\n+                      undefined\n+                    }\n                     onChange={() => toggleStudentSelection(student)}\n                     className=\"rounded\"\n                   />\n                 </label>\n@@ -940,8 +1089,8 @@\n         onClose={() => setShowBulkProcessDialog(false)}\n         onBulkProcess={handleBulkProcess}\n       />\n     </div>\n-  );\n-};\n+  )\n+}\n\\ No newline at end of file\n \n-export default FeesCarryForward;\n+export default FeesCarryForward\n"
                }
            ],
            "date": 1755986649572,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { \n  ArrowRight,\n  Calendar,\n  Users,\n  DollarSign,\n  CheckCircle,\n  XCircle,\n  AlertTriangle,\n  Filter,\n  Search,\n  Download,\n  Upload,\n  RefreshCw,\n  Eye,\n  FileText,\n  TrendingUp,\n  Clock,\n  BookOpen\n} from 'lucide-react';\nimport Input from '../../components/ui/Input';\nimport Dialog from '../../components/ui/Dialog';\nimport LoadingSkeleton from '../../components/ui/LoadingSkeleton';\nimport { feesApi } from '../../lib/api/fees';\n\nconst CarryForwardCard = ({ student, onViewDetails, onProcessCarryForward, onAdjustAmount }) => {\n  const totalCarryForward = student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0;\n  const adjustedAmount = student.adjustedAmount || 0;\n  const finalAmount = totalCarryForward - adjustedAmount;\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'pending': return 'text-yellow-600 bg-yellow-100';\n      case 'processed': return 'text-green-600 bg-green-100';\n      case 'adjusted': return 'text-blue-600 bg-blue-100';\n      case 'cancelled': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  return (\n    <div className=\"bg-white border rounded-lg p-6 hover:shadow-md transition-shadow\">\n      <div className=\"flex justify-between items-start mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n            <Users className=\"w-5 h-5 text-blue-600\" />\n          </div>\n          <div>\n            <h3 className=\"font-semibold\">{student.name}</h3>\n            <p className=\"text-sm text-gray-600\">\n              {student.className} - {student.section} | Roll: {student.rollNumber}\n            </p>\n          </div>\n        </div>\n        <div className=\"text-right\">\n          <div className=\"text-xl font-bold text-orange-600\">\n            ₹{finalAmount.toLocaleString()}\n          </div>\n          <div className=\"text-sm text-gray-500\">Carry Forward</div>\n          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(student.status)}`}>\n            {student.status.charAt(0).toUpperCase() + student.status.slice(1)}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4 mb-4 text-sm\">\n        <div>\n          <span className=\"text-gray-500\">Previous Year:</span>\n          <div className=\"font-medium\">{student.previousAcademicYear}</div>\n        </div>\n        <div>\n          <span className=\"text-gray-500\">Current Year:</span>\n          <div className=\"font-medium\">{student.currentAcademicYear}</div>\n        </div>\n        <div>\n          <span className=\"text-gray-500\">Original Amount:</span>\n          <div className=\"font-medium\">₹{totalCarryForward.toLocaleString()}</div>\n        </div>\n        <div>\n          <span className=\"text-gray-500\">Adjustments:</span>\n          <div className=\"font-medium text-blue-600\">\n            {adjustedAmount > 0 ? `-₹${adjustedAmount.toLocaleString()}` : '₹0'}\n          </div>\n        </div>\n      </div>\n\n      {student.carryForwardItems && student.carryForwardItems.length > 0 && (\n        <div className=\"border-t pt-3 mb-4\">\n          <div className=\"text-sm text-gray-600 mb-2\">Carry Forward Items:</div>\n          <div className=\"space-y-1\">\n            {student.carryForwardItems.slice(0, 3).map((item, index) => (\n              <div key={index} className=\"flex justify-between items-center text-sm\">\n                <span>{item.feeType} - {item.description}</span>\n                <span className=\"font-medium\">₹{item.amount.toLocaleString()}</span>\n              </div>\n            ))}\n            {student.carryForwardItems.length > 3 && (\n              <div className=\"text-sm text-gray-500\">\n                +{student.carryForwardItems.length - 3} more items\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {student.remarks && (\n        <div className=\"border-t pt-3 mb-4\">\n          <div className=\"text-sm text-gray-600 mb-1\">Remarks:</div>\n          <div className=\"text-sm bg-gray-50 p-2 rounded\">{student.remarks}</div>\n        </div>\n      )}\n\n      <div className=\"flex justify-between items-center\">\n        <div className=\"text-xs text-gray-500\">\n          Last updated: {new Date(student.updatedAt).toLocaleDateString()}\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => onViewDetails(student)}\n            className=\"p-1 text-gray-400 hover:text-blue-600\"\n            title=\"View Details\"\n          >\n            <Eye className=\"w-4 h-4\" />\n          </button>\n          {student.status === 'pending' && (\n            <>\n              <button\n                onClick={() => onAdjustAmount(student)}\n                className=\"p-1 text-gray-400 hover:text-yellow-600\"\n                title=\"Adjust Amount\"\n              >\n                <DollarSign className=\"w-4 h-4\" />\n              </button>\n              <button\n                onClick={() => onProcessCarryForward(student)}\n                className=\"p-1 text-gray-400 hover:text-green-600\"\n                title=\"Process Carry Forward\"\n              >\n                <ArrowRight className=\"w-4 h-4\" />\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst CarryForwardDetailsDialog = ({ student, open, onClose }) => {\n  if (!student) return null;\n\n  const totalCarryForward = student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0;\n  const adjustedAmount = student.adjustedAmount || 0;\n  const finalAmount = totalCarryForward - adjustedAmount;\n\n  return (\n    <Dialog open={open} onClose={onClose} title={`Carry Forward Details - ${student.name}`} size=\"xl\">\n      <div className=\"space-y-6\">\n        {/* Student Information */}\n        <div className=\"bg-gray-50 rounded-lg p-4\">\n          <h3 className=\"font-medium mb-3\">Student Information</h3>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-500\">Name:</span>\n              <div className=\"font-medium\">{student.name}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Roll Number:</span>\n              <div className=\"font-medium\">{student.rollNumber}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Previous Class:</span>\n              <div className=\"font-medium\">{student.previousClass}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Current Class:</span>\n              <div className=\"font-medium\">{student.className} - {student.section}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Previous Year:</span>\n              <div className=\"font-medium\">{student.previousAcademicYear}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Current Year:</span>\n              <div className=\"font-medium\">{student.currentAcademicYear}</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Carry Forward Summary */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"bg-orange-50 rounded-lg p-4 text-center\">\n            <div className=\"text-2xl font-bold text-orange-600\">₹{totalCarryForward.toLocaleString()}</div>\n            <div className=\"text-sm text-gray-600\">Original Amount</div>\n          </div>\n          <div className=\"bg-blue-50 rounded-lg p-4 text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">₹{adjustedAmount.toLocaleString()}</div>\n            <div className=\"text-sm text-gray-600\">Adjustments</div>\n          </div>\n          <div className=\"bg-green-50 rounded-lg p-4 text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">₹{finalAmount.toLocaleString()}</div>\n            <div className=\"text-sm text-gray-600\">Final Amount</div>\n          </div>\n        </div>\n\n        {/* Carry Forward Items */}\n        <div>\n          <h3 className=\"font-medium mb-3\">Carry Forward Items</h3>\n          <div className=\"bg-white border rounded-lg overflow-hidden\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"text-left py-3 px-4\">Fee Type</th>\n                  <th className=\"text-left py-3 px-4\">Description</th>\n                  <th className=\"text-left py-3 px-4\">Due Date</th>\n                  <th className=\"text-right py-3 px-4\">Amount</th>\n                  <th className=\"text-center py-3 px-4\">Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {student.carryForwardItems?.map((item, index) => (\n                  <tr key={index} className=\"border-b hover:bg-gray-50\">\n                    <td className=\"py-3 px-4 font-medium\">{item.feeType}</td>\n                    <td className=\"py-3 px-4\">{item.description}</td>\n                    <td className=\"py-3 px-4\">{new Date(item.dueDate).toLocaleDateString()}</td>\n                    <td className=\"py-3 px-4 text-right font-medium\">₹{item.amount.toLocaleString()}</td>\n                    <td className=\"py-3 px-4 text-center\">\n                      <span className=\"px-2 py-1 bg-orange-100 text-orange-800 rounded text-xs\">\n                        Pending\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n              <tfoot className=\"bg-gray-50\">\n                <tr>\n                  <td colSpan=\"3\" className=\"py-3 px-4 font-bold text-right\">Total:</td>\n                  <td className=\"py-3 px-4 text-right font-bold text-lg\">₹{totalCarryForward.toLocaleString()}</td>\n                  <td></td>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </div>\n\n        {/* Adjustment History */}\n        {student.adjustmentHistory && student.adjustmentHistory.length > 0 && (\n          <div>\n            <h3 className=\"font-medium mb-3\">Adjustment History</h3>\n            <div className=\"bg-white border rounded-lg overflow-hidden\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"text-left py-2 px-4\">Date</th>\n                    <th className=\"text-left py-2 px-4\">Type</th>\n                    <th className=\"text-right py-2 px-4\">Amount</th>\n                    <th className=\"text-left py-2 px-4\">Reason</th>\n                    <th className=\"text-left py-2 px-4\">By</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Array.isArray(student.adjustmentHistory) && student.adjustmentHistory.map((adjustment, index) => (\n                    <tr key={index} className=\"border-b text-sm\">\n                      <td className=\"py-2 px-4\">{new Date(adjustment.date).toLocaleDateString()}</td>\n                      <td className=\"py-2 px-4 capitalize\">{adjustment.type}</td>\n                      <td className=\"py-2 px-4 text-right\">₹{adjustment.amount.toLocaleString()}</td>\n                      <td className=\"py-2 px-4\">{adjustment.reason}</td>\n                      <td className=\"py-2 px-4\">{adjustment.adjustedBy}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n\n        {/* Actions */}\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 border rounded-lg hover:bg-gray-50\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nconst AdjustAmountDialog = ({ student, open, onClose, onAdjust }) => {\n  const [adjustmentType, setAdjustmentType] = useState('waiver');\n  const [adjustmentAmount, setAdjustmentAmount] = useState(0);\n  const [adjustmentReason, setAdjustmentReason] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const handleAdjust = async () => {\n    if (!adjustmentAmount || !adjustmentReason.trim()) {\n      alert('Please enter adjustment amount and reason');\n      return;\n    }\n\n    setIsProcessing(true);\n    try {\n      await onAdjust(student.id, {\n        type: adjustmentType,\n        amount: adjustmentAmount,\n        reason: adjustmentReason\n      });\n      onClose();\n      setAdjustmentAmount(0);\n      setAdjustmentReason('');\n    } catch (error) {\n      console.error('Adjustment error:', error);\n      alert('Error processing adjustment. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  if (!student) return null;\n\n  const totalCarryForward = student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0;\n  const currentAdjustment = student.adjustedAmount || 0;\n  const maxAdjustment = totalCarryForward - currentAdjustment;\n\n  return (\n    <Dialog open={open} onClose={onClose} title={`Adjust Carry Forward - ${student.name}`} size=\"lg\">\n      <div className=\"space-y-6\">\n        <div className=\"bg-blue-50 rounded-lg p-4\">\n          <h3 className=\"font-medium mb-2\">Current Status</h3>\n          <div className=\"grid grid-cols-3 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">Original Amount:</span>\n              <div className=\"font-medium\">₹{totalCarryForward.toLocaleString()}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Current Adjustments:</span>\n              <div className=\"font-medium\">₹{currentAdjustment.toLocaleString()}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Remaining:</span>\n              <div className=\"font-medium\">₹{maxAdjustment.toLocaleString()}</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-1\">Adjustment Type</label>\n            <select\n              value={adjustmentType}\n              onChange={(e) => setAdjustmentType(e.target.value)}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"waiver\">Fee Waiver</option>\n              <option value=\"discount\">Discount</option>\n              <option value=\"scholarship\">Scholarship</option>\n              <option value=\"correction\">Correction</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          <Input\n            label=\"Adjustment Amount\"\n            type=\"number\"\n            value={adjustmentAmount}\n            onChange={(e) => setAdjustmentAmount(parseFloat(e.target.value) || 0)}\n            min=\"0\"\n            max={maxAdjustment}\n            placeholder=\"Enter amount\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium mb-1\">Reason for Adjustment *</label>\n          <textarea\n            value={adjustmentReason}\n            onChange={(e) => setAdjustmentReason(e.target.value)}\n            rows={3}\n            className=\"w-full border rounded-lg px-3 py-2\"\n            placeholder=\"Provide detailed reason for this adjustment...\"\n          />\n        </div>\n\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n          <div className=\"flex items-start gap-2\">\n            <AlertTriangle className=\"w-5 h-5 text-yellow-600 mt-0.5\" />\n            <div className=\"text-sm text-yellow-800\">\n              <strong>Note:</strong> This adjustment will reduce the carry forward amount. \n              Final amount after adjustment: ₹{(maxAdjustment - adjustmentAmount).toLocaleString()}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 border rounded-lg hover:bg-gray-50\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleAdjust}\n            disabled={isProcessing || !adjustmentAmount || !adjustmentReason.trim()}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2\"\n          >\n            {isProcessing ? (\n              <RefreshCw className=\"w-4 h-4 animate-spin\" />\n            ) : (\n              <CheckCircle className=\"w-4 h-4\" />\n            )}\n            {isProcessing ? 'Processing...' : 'Apply Adjustment'}\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nconst BulkProcessDialog = ({ selectedStudents, open, onClose, onBulkProcess }) => {\n  const [processType, setProcessType] = useState('carry_forward');\n  const [targetAcademicYear, setTargetAcademicYear] = useState('2024-25');\n  const [applyDiscount, setApplyDiscount] = useState(false);\n  const [discountPercentage, setDiscountPercentage] = useState(0);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const totalAmount = Array.isArray(selectedStudents) ? selectedStudents.reduce((sum, student) => {\n    const carryForwardAmount = student.carryForwardItems?.reduce((itemSum, item) => itemSum + item.amount, 0) || 0;\n    const adjustedAmount = student.adjustedAmount || 0;\n    return sum + (carryForwardAmount - adjustedAmount);\n  }, 0) : 0;\n\n  const discountAmount = applyDiscount ? (totalAmount * discountPercentage) / 100 : 0;\n  const finalAmount = totalAmount - discountAmount;\n\n  const handleBulkProcess = async () => {\n    setIsProcessing(true);\n    try {\n      await onBulkProcess({\n        studentIds: selectedStudents.map(s => s.id),\n        processType,\n        targetAcademicYear,\n        applyDiscount,\n        discountPercentage\n      });\n      onClose();\n    } catch (error) {\n      console.error('Bulk process error:', error);\n      alert('Error processing bulk operation. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} title=\"Bulk Process Carry Forward\" size=\"lg\">\n      <div className=\"space-y-6\">\n        <div className=\"bg-blue-50 rounded-lg p-4\">\n          <h3 className=\"font-medium mb-2\">Selected Students</h3>\n          <div className=\"grid grid-cols-3 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">Students:</span>\n              <div className=\"font-medium\">{selectedStudents.length}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Total Amount:</span>\n              <div className=\"font-medium\">₹{totalAmount.toLocaleString()}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Final Amount:</span>\n              <div className=\"font-medium text-green-600\">₹{finalAmount.toLocaleString()}</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-1\">Process Type</label>\n            <select\n              value={processType}\n              onChange={(e) => setProcessType(e.target.value)}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"carry_forward\">Carry Forward to Next Year</option>\n              <option value=\"write_off\">Write Off Amount</option>\n              <option value=\"convert_to_dues\">Convert to Current Year Dues</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium mb-1\">Target Academic Year</label>\n            <select\n              value={targetAcademicYear}\n              onChange={(e) => setTargetAcademicYear(e.target.value)}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"2024-25\">2024-25</option>\n              <option value=\"2025-26\">2025-26</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          <label className=\"flex items-center gap-2\">\n            <input\n              type=\"checkbox\"\n              checked={applyDiscount}\n              onChange={(e) => setApplyDiscount(e.target.checked)}\n              className=\"rounded\"\n            />\n            <span className=\"text-sm font-medium\">Apply bulk discount</span>\n          </label>\n          \n          {applyDiscount && (\n            <div className=\"ml-6\">\n              <Input\n                label=\"Discount Percentage\"\n                type=\"number\"\n                value={discountPercentage}\n                onChange={(e) => setDiscountPercentage(parseFloat(e.target.value) || 0)}\n                min=\"0\"\n                max=\"100\"\n                placeholder=\"Enter discount percentage\"\n              />\n              <div className=\"text-sm text-gray-600 mt-1\">\n                Discount Amount: ₹{discountAmount.toLocaleString()}\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n          <div className=\"flex items-start gap-2\">\n            <AlertTriangle className=\"w-5 h-5 text-yellow-600 mt-0.5\" />\n            <div className=\"text-sm text-yellow-800\">\n              <strong>Warning:</strong> This action will process carry forward for {selectedStudents.length} students. \n              This operation cannot be undone. Please review carefully before proceeding.\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 border rounded-lg hover:bg-gray-50\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleBulkProcess}\n            disabled={isProcessing}\n            className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center gap-2\"\n          >\n            {isProcessing ? (\n              <RefreshCw className=\"w-4 h-4 animate-spin\" />\n            ) : (\n              <ArrowRight className=\"w-4 h-4\" />\n            )}\n            {isProcessing ? 'Processing...' : `Process ${selectedStudents.length} Students`}\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nconst FeesCarryForward = () => {\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [showDetailsDialog, setShowDetailsDialog] = useState(false);\n  const [showAdjustDialog, setShowAdjustDialog] = useState(false);\n  const [showBulkProcessDialog, setShowBulkProcessDialog] = useState(false);\n  const [filters, setFilters] = useState({\n    searchTerm: '',\n    academicYear: '2023-24',\n    status: 'all',\n    classId: '',\n    amountFrom: '',\n    amountTo: ''\n  });\n\n  const queryClient = useQueryClient();\n\n  const { data: carryForwardData, isLoading, refetch } = useQuery({\n    queryKey: ['carry-forward', 'students', filters],\n    queryFn: () => feesApi.getCarryForwardStudents(filters)\n  });\n\n  const { data: classesData } = useQuery({\n    queryKey: ['classes', 'all'],\n    queryFn: () => feesApi.getClasses()\n  });\n\n  const adjustAmountMutation = useMutation({\n    mutationFn: ({ studentId, adjustmentData }) => feesApi.adjustCarryForwardAmount(studentId, adjustmentData),\n    onSuccess: () => {\n      queryClient.invalidateQueries(['carry-forward']);\n      setShowAdjustDialog(false);\n    }\n  });\n\n  const processCarryForwardMutation = useMutation({\n    mutationFn: (studentId) => feesApi.processCarryForward(studentId),\n    onSuccess: () => {\n      queryClient.invalidateQueries(['carry-forward']);\n    }\n  });\n\n  const bulkProcessMutation = useMutation({\n    mutationFn: (bulkData) => feesApi.bulkProcessCarryForward(bulkData),\n    onSuccess: () => {\n      queryClient.invalidateQueries(['carry-forward']);\n      setSelectedStudents([]);\n      setShowBulkProcessDialog(false);\n    }\n  });\n\n  const handleViewDetails = (student) => {\n    setSelectedStudent(student);\n    setShowDetailsDialog(true);\n  };\n\n  const handleAdjustAmount = (student) => {\n    setSelectedStudent(student);\n    setShowAdjustDialog(true);\n  };\n\n  const handleProcessCarryForward = async (student) => {\n    if (confirm(`Process carry forward for ${student.name}? This action cannot be undone.`)) {\n      processCarryForwardMutation.mutate(student.id);\n    }\n  };\n\n  const handleAdjustAmountSubmit = (studentId, adjustmentData) => {\n    adjustAmountMutation.mutate({ studentId, adjustmentData });\n  };\n\n  const handleBulkProcess = (bulkData) => {\n    bulkProcessMutation.mutate(bulkData);\n  };\n\n  const toggleStudentSelection = (student) => {\n    setSelectedStudents(prev => {\n      const isSelected = prev.find(s => s.id === student.id);\n      if (isSelected) {\n        return prev.filter(s => s.id !== student.id);\n      } else {\n        return [...prev, student];\n      }\n    });\n  };\n\n  const selectAllStudents = () => {\n    if (selectedStudents.length === carryForwardData?.data?.length) {\n      setSelectedStudents([]);\n    } else {\n      setSelectedStudents(carryForwardData?.data || []);\n    }\n  };\n\n  const handleExportData = async () => {\n    try {\n      const exportData = carryForwardData?.data || [];\n      const csvContent = generateCSVContent(exportData);\n      const blob = new Blob([csvContent], { type: 'text/csv' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `carry-forward-${filters.academicYear}.csv`;\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Export error:', error);\n      alert('Error exporting data. Please try again.');\n    }\n  };\n\n  const generateCSVContent = (data) => {\n    const headers = [\n      'Student Name',\n      'Roll Number',\n      'Previous Class',\n      'Current Class',\n      'Previous Year',\n      'Current Year',\n      'Original Amount',\n      'Adjusted Amount',\n      'Final Amount',\n      'Status'\n    ];\n\n    const rows = data.map(student => {\n      const totalCarryForward = student.carryForwardItems?.reduce((sum, item) => sum + item.amount, 0) || 0;\n      const adjustedAmount = student.adjustedAmount || 0;\n      const finalAmount = totalCarryForward - adjustedAmount;\n\n      return [\n        student.name,\n        student.rollNumber,\n        student.previousClass,\n        `${student.className} - ${student.section}`,\n        student.previousAcademicYear,\n        student.currentAcademicYear,\n        totalCarryForward,\n        adjustedAmount,\n        finalAmount,\n        student.status\n      ];\n    });\n\n    return [headers, ...rows].map(row => row.join(',')).join('\\n');\n  };\n\n  const getStatistics = () => {\n    const students = carryForwardData?.data || [];\n    const totalAmount = Array.isArray(students) ? students.reduce((sum, student) => {\n      const carryForwardAmount = student.carryForwardItems?.reduce((itemSum, item) => itemSum + item.amount, 0) || 0;\n      const adjustedAmount = student.adjustedAmount || 0;\n      return sum + (carryForwardAmount - adjustedAmount);\n    }, 0) : 0;\n    \n    return {\n      totalStudents: students.length,\n      pendingStudents: students.filter(s => s.status === 'pending').length,\n      processedStudents: students.filter(s => s.status === 'processed').length,\n      totalAmount\n    };\n  };\n\n  const stats = getStatistics();\n\n  if (isLoading) return <LoadingSkeleton />;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">Fees Carry Forward</h1>\n        <div className=\"flex gap-2\">\n          {selectedStudents.length > 0 && (\n            <button\n              onClick={() => setShowBulkProcessDialog(true)}\n              className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center gap-2\"\n            >\n              <ArrowRight className=\"w-4 h-4\" />\n              Bulk Process ({selectedStudents.length})\n            </button>\n          )}\n          <button\n            onClick={() => refetch()}\n            className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\"\n          >\n            <RefreshCw className=\"w-4 h-4\" />\n            Refresh\n          </button>\n          <button\n            onClick={handleExportData}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n          >\n            <Download className=\"w-4 h-4\" />\n            Export CSV\n          </button>\n        </div>\n      </div>\n\n      {/* Statistics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Users className=\"w-8 h-8 text-blue-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">{stats.totalStudents}</p>\n              <p className=\"text-sm text-gray-600\">Total Students</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Clock className=\"w-8 h-8 text-yellow-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">{stats.pendingStudents}</p>\n              <p className=\"text-sm text-gray-600\">Pending</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <CheckCircle className=\"w-8 h-8 text-green-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">{stats.processedStudents}</p>\n              <p className=\"text-sm text-gray-600\">Processed</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <DollarSign className=\"w-8 h-8 text-orange-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">₹{stats.totalAmount.toLocaleString()}</p>\n              <p className=\"text-sm text-gray-600\">Total Amount</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-4\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search students...\"\n              value={filters.searchTerm}\n              onChange={(e) => setFilters(prev => ({ ...prev, searchTerm: e.target.value }))}\n              className=\"pl-10 pr-4 py-2 border rounded-lg w-full\"\n            />\n          </div>\n          <select\n            value={filters.academicYear}\n            onChange={(e) => setFilters(prev => ({ ...prev, academicYear: e.target.value }))}\n            className=\"border rounded-lg px-3 py-2\"\n          >\n            <option value=\"2023-24\">2023-24</option>\n            <option value=\"2022-23\">2022-23</option>\n            <option value=\"2021-22\">2021-22</option>\n          </select>\n          <select\n            value={filters.status}\n            onChange={(e) => setFilters(prev => ({ ...prev, status: e.target.value }))}\n            className=\"border rounded-lg px-3 py-2\"\n          >\n            <option value=\"all\">All Status</option>\n            <option value=\"pending\">Pending</option>\n            <option value=\"processed\">Processed</option>\n            <option value=\"adjusted\">Adjusted</option>\n          </select>\n          <select\n            value={filters.classId}\n            onChange={(e) => setFilters(prev => ({ ...prev, classId: e.target.value }))}\n            className=\"border rounded-lg px-3 py-2\"\n          >\n            <option value=\"\">All Classes</option>\n            {Array.isArray(classesData?.data) && classesData.data.map(cls => (\n              <option key={cls.id} value={cls.id}>\n                {cls.name}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"number\"\n            placeholder=\"Min Amount\"\n            value={filters.amountFrom}\n            onChange={(e) => setFilters(prev => ({ ...prev, amountFrom: e.target.value }))}\n            className=\"border rounded-lg px-3 py-2\"\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Max Amount\"\n            value={filters.amountTo}\n            onChange={(e) => setFilters(prev => ({ ...prev, amountTo: e.target.value }))}\n            className=\"border rounded-lg px-3 py-2\"\n          />\n        </div>\n      </div>\n\n      {/* Selection Controls */}\n      <div className=\"bg-white rounded-lg shadow p-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center gap-4\">\n            <label className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={selectedStudents.length === carryForwardData?.data?.length && carryForwardData?.data?.length > 0}\n                onChange={selectAllStudents}\n                className=\"rounded\"\n              />\n              <span className=\"text-sm font-medium\">Select All</span>\n            </label>\n            <span className=\"text-sm text-gray-500\">\n              {selectedStudents.length} of {carryForwardData?.data?.length || 0} selected\n            </span>\n          </div>\n          <div className=\"text-sm text-gray-500\">\n            Showing {carryForwardData?.data?.length || 0} students with carry forward amounts\n          </div>\n        </div>\n      </div>\n\n      {/* Students List */}\n      <div className=\"space-y-4\">\n        {carryForwardData?.data?.length === 0 ? (\n          <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n            <BookOpen className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Carry Forward Records</h3>\n            <p className=\"text-gray-500\">\n              No students have pending carry forward amounts for the selected criteria.\n            </p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {carryForwardData?.data?.map(student => (\n              <div key={student.id} className=\"relative\">\n                <label className=\"absolute top-4 left-4 z-10\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedStudents.find(s => s.id === student.id) !== undefined}\n                    onChange={() => toggleStudentSelection(student)}\n                    className=\"rounded\"\n                  />\n                </label>\n                <CarryForwardCard\n                  student={student}\n                  onViewDetails={handleViewDetails}\n                  onProcessCarryForward={handleProcessCarryForward}\n                  onAdjustAmount={handleAdjustAmount}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Dialogs */}\n      <CarryForwardDetailsDialog\n        student={selectedStudent}\n        open={showDetailsDialog}\n        onClose={() => setShowDetailsDialog(false)}\n      />\n\n      <AdjustAmountDialog\n        student={selectedStudent}\n        open={showAdjustDialog}\n        onClose={() => setShowAdjustDialog(false)}\n        onAdjust={handleAdjustAmountSubmit}\n      />\n\n      <BulkProcessDialog\n        selectedStudents={selectedStudents}\n        open={showBulkProcessDialog}\n        onClose={() => setShowBulkProcessDialog(false)}\n        onBulkProcess={handleBulkProcess}\n      />\n    </div>\n  );\n};\n\nexport default FeesCarryForward;"
        }
    ]
}