{
    "sourceFile": "src/pages/fees/SearchDueFees.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1755987434758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755994925739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-import React, { useState } from 'react';\n-import { useQuery } from '@tanstack/react-query';\n-import { \n+import React, { useState } from 'react'\n+import { useQuery } from '@tanstack/react-query'\n+import {\n   Search,\n   Filter,\n   Calendar,\n   Download,\n@@ -16,49 +16,51 @@\n   Phone,\n   Printer,\n   RefreshCw,\n   CheckCircle,\n-  XCircle\n-} from 'lucide-react';\n-import Input from '../../components/ui/Input';\n-import Dialog from '../../components/ui/Dialog';\n-import LoadingSkeleton from '../../components/ui/LoadingSkeleton';\n-import { feesApi } from '../../lib/api/fees';\n-import { printToPDF } from '../../lib/print';\n+  XCircle,\n+} from 'lucide-react'\n+import Input from '../../components/ui/Input'\n+import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '../../components/ui/Dialog'\n+import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n+import { feesApi } from '../../lib/api/fees'\n+import { printToPDF } from '../../lib/print'\n \n const DueFeesFilters = ({ filters, onFiltersChange }) => {\n   const { data: classesData } = useQuery({\n     queryKey: ['classes', 'all'],\n-    queryFn: () => feesApi.getClasses()\n-  });\n+    queryFn: () => feesApi.getClasses(),\n+  })\n \n   const { data: feeGroupsData } = useQuery({\n     queryKey: ['fee-groups', 'active'],\n-    queryFn: () => feesApi.getActiveFeeGroups()\n-  });\n+    queryFn: () => feesApi.getActiveFeeGroups(),\n+  })\n \n   const overdueOptions = [\n     { value: 'all', label: 'All Dues' },\n     { value: 'overdue', label: 'Overdue Only' },\n     { value: 'due_today', label: 'Due Today' },\n-    { value: 'upcoming', label: 'Upcoming' }\n-  ];\n+    { value: 'upcoming', label: 'Upcoming' },\n+  ]\n \n   return (\n     <div className=\"bg-white rounded-lg shadow p-6\">\n       <div className=\"flex justify-between items-center mb-4\">\n         <h3 className=\"font-medium\">Search Filters</h3>\n         <button\n-          onClick={() => onFiltersChange({\n-            searchTerm: '',\n-            classId: '',\n-            feeGroupId: '',\n-            overdueFilter: 'all',\n-            dueDateFrom: '',\n-            dueDateTo: '',\n-            amountFrom: '',\n-            amountTo: ''\n-          })}\n+          onClick={() =>\n+            onFiltersChange({\n+              searchTerm: '',\n+              classId: '',\n+              feeGroupId: '',\n+              overdueFilter: 'all',\n+              dueDateFrom: '',\n+              dueDateTo: '',\n+              amountFrom: '',\n+              amountTo: '',\n+            })\n+          }\n           className=\"text-sm text-blue-600 hover:text-blue-700\"\n         >\n           Clear All\n         </button>\n@@ -71,31 +73,38 @@\n           <input\n             type=\"text\"\n             placeholder=\"Search by name, roll number...\"\n             value={filters.searchTerm}\n-            onChange={(e) => onFiltersChange({ ...filters, searchTerm: e.target.value })}\n+            onChange={e =>\n+              onFiltersChange({ ...filters, searchTerm: e.target.value })\n+            }\n             className=\"pl-10 pr-4 py-2 border rounded-lg w-full\"\n           />\n         </div>\n \n         {/* Class Filter */}\n         <select\n           value={filters.classId}\n-          onChange={(e) => onFiltersChange({ ...filters, classId: e.target.value })}\n+          onChange={e =>\n+            onFiltersChange({ ...filters, classId: e.target.value })\n+          }\n           className=\"border rounded-lg px-3 py-2\"\n         >\n           <option value=\"\">All Classes</option>\n-          {Array.isArray(classesData?.data) && classesData.data.map(cls => (\n-            <option key={cls.id} value={cls.id}>\n-              {cls.name}\n-            </option>\n-          ))}\n+          {Array.isArray(classesData?.data) &&\n+            classesData.data.map(cls => (\n+              <option key={cls.id} value={cls.id}>\n+                {cls.name}\n+              </option>\n+            ))}\n         </select>\n \n         {/* Fee Group Filter */}\n         <select\n           value={filters.feeGroupId}\n-          onChange={(e) => onFiltersChange({ ...filters, feeGroupId: e.target.value })}\n+          onChange={e =>\n+            onFiltersChange({ ...filters, feeGroupId: e.target.value })\n+          }\n           className=\"border rounded-lg px-3 py-2\"\n         >\n           <option value=\"\">All Fee Groups</option>\n           {feeGroupsData?.data?.map(group => (\n@@ -107,93 +116,117 @@\n \n         {/* Overdue Filter */}\n         <select\n           value={filters.overdueFilter}\n-          onChange={(e) => onFiltersChange({ ...filters, overdueFilter: e.target.value })}\n+          onChange={e =>\n+            onFiltersChange({ ...filters, overdueFilter: e.target.value })\n+          }\n           className=\"border rounded-lg px-3 py-2\"\n         >\n-          {Array.isArray(overdueOptions) && overdueOptions.map(option => (\n-            <option key={option.value} value={option.value}>\n-              {option.label}\n-            </option>\n-          ))}\n+          {Array.isArray(overdueOptions) &&\n+            overdueOptions.map(option => (\n+              <option key={option.value} value={option.value}>\n+                {option.label}\n+              </option>\n+            ))}\n         </select>\n \n         {/* Due Date Range */}\n         <Input\n           label=\"Due From\"\n           type=\"date\"\n           value={filters.dueDateFrom}\n-          onChange={(e) => onFiltersChange({ ...filters, dueDateFrom: e.target.value })}\n+          onChange={e =>\n+            onFiltersChange({ ...filters, dueDateFrom: e.target.value })\n+          }\n         />\n \n         <Input\n           label=\"Due To\"\n           type=\"date\"\n           value={filters.dueDateTo}\n-          onChange={(e) => onFiltersChange({ ...filters, dueDateTo: e.target.value })}\n+          onChange={e =>\n+            onFiltersChange({ ...filters, dueDateTo: e.target.value })\n+          }\n         />\n \n         {/* Amount Range */}\n         <Input\n           label=\"Min Amount\"\n           type=\"number\"\n           value={filters.amountFrom}\n-          onChange={(e) => onFiltersChange({ ...filters, amountFrom: e.target.value })}\n+          onChange={e =>\n+            onFiltersChange({ ...filters, amountFrom: e.target.value })\n+          }\n           placeholder=\"0\"\n         />\n \n         <Input\n           label=\"Max Amount\"\n           type=\"number\"\n           value={filters.amountTo}\n-          onChange={(e) => onFiltersChange({ ...filters, amountTo: e.target.value })}\n+          onChange={e =>\n+            onFiltersChange({ ...filters, amountTo: e.target.value })\n+          }\n           placeholder=\"No limit\"\n         />\n       </div>\n     </div>\n-  );\n-};\n+  )\n+}\n \n-const DueFeesCard = ({ student, onViewDetails, onSendReminder, onCollectFees }) => {\n-  const totalDue = student.dueFees?.reduce((sum, fee) => sum + fee.dueAmount, 0) || 0;\n-  const overdueAmount = student.dueFees?.reduce((sum, fee) => \n-    sum + (fee.isOverdue ? fee.dueAmount : 0), 0) || 0;\n-  const overdueCount = student.dueFees?.filter(fee => fee.isOverdue).length || 0;\n+const DueFeesCard = ({\n+  student,\n+  onViewDetails,\n+  onSendReminder,\n+  onCollectFees,\n+}) => {\n+  const totalDue =\n+    student.dueFees?.reduce((sum, fee) => sum + fee.dueAmount, 0) || 0\n+  const overdueAmount =\n+    student.dueFees?.reduce(\n+      (sum, fee) => sum + (fee.isOverdue ? fee.dueAmount : 0),\n+      0,\n+    ) || 0\n+  const overdueCount = student.dueFees?.filter(fee => fee.isOverdue).length || 0\n \n   const getUrgencyColor = () => {\n-    if (overdueAmount > 0) return 'border-red-500 bg-red-50';\n-    if (student.dueFees?.some(fee => fee.isDueToday)) return 'border-yellow-500 bg-yellow-50';\n-    return 'border-gray-200 bg-white';\n-  };\n+    if (overdueAmount > 0) return 'border-red-500 bg-red-50'\n+    if (student.dueFees?.some(fee => fee.isDueToday))\n+      return 'border-yellow-500 bg-yellow-50'\n+    return 'border-gray-200 bg-white'\n+  }\n \n   const getUrgencyIcon = () => {\n-    if (overdueAmount > 0) return <AlertTriangle className=\"w-5 h-5 text-red-600\" />;\n-    if (student.dueFees?.some(fee => fee.isDueToday)) return <Clock className=\"w-5 h-5 text-yellow-600\" />;\n-    return <Calendar className=\"w-5 h-5 text-blue-600\" />;\n-  };\n+    if (overdueAmount > 0)\n+      return <AlertTriangle className=\"w-5 h-5 text-red-600\" />\n+    if (student.dueFees?.some(fee => fee.isDueToday))\n+      return <Clock className=\"w-5 h-5 text-yellow-600\" />\n+    return <Calendar className=\"w-5 h-5 text-blue-600\" />\n+  }\n \n   return (\n-    <div className={`border rounded-lg p-6 hover:shadow-md transition-shadow ${getUrgencyColor()}`}>\n+    <div\n+      className={`border rounded-lg p-6 hover:shadow-md transition-shadow ${getUrgencyColor()}`}\n+    >\n       <div className=\"flex justify-between items-start mb-4\">\n         <div className=\"flex items-center gap-3\">\n           <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n             <User className=\"w-5 h-5 text-blue-600\" />\n           </div>\n           <div>\n             <h3 className=\"font-semibold\">{student.name}</h3>\n             <p className=\"text-sm text-gray-600\">\n-              {student.className} - {student.section} | Roll: {student.rollNumber}\n+              {student.className} - {student.section} | Roll:{' '}\n+              {student.rollNumber}\n             </p>\n             <p className=\"text-sm text-gray-500\">\n               Admission: {student.admissionNumber}\n             </p>\n           </div>\n         </div>\n         <div className=\"text-right\">\n-          <div className=\"flex items-center gap-1 mb-1\">\n-            {getUrgencyIcon()}\n-          </div>\n+          <div className=\"flex items-center gap-1 mb-1\">{getUrgencyIcon()}</div>\n           <div className=\"text-xl font-bold text-red-600\">\n             ₹{totalDue.toLocaleString()}\n           </div>\n           <div className=\"text-sm text-gray-500\">Total Due</div>\n@@ -215,14 +248,18 @@\n           <div className=\"font-medium\">{student.contactNumber}</div>\n         </div>\n         <div>\n           <span className=\"text-gray-500\">Pending Fees:</span>\n-          <div className=\"font-medium\">{student.dueFees?.length || 0} items</div>\n+          <div className=\"font-medium\">\n+            {student.dueFees?.length || 0} items\n+          </div>\n         </div>\n         <div>\n           <span className=\"text-gray-500\">Last Payment:</span>\n           <div className=\"font-medium\">\n-            {student.lastPaymentDate ? new Date(student.lastPaymentDate).toLocaleDateString() : 'Never'}\n+            {student.lastPaymentDate\n+              ? new Date(student.lastPaymentDate).toLocaleDateString()\n+              : 'Never'}\n           </div>\n         </div>\n       </div>\n \n@@ -230,16 +267,33 @@\n         <div className=\"border-t pt-3 mb-4\">\n           <div className=\"text-sm text-gray-600 mb-2\">Due Fees:</div>\n           <div className=\"space-y-1\">\n             {student.dueFees.slice(0, 3).map((fee, index) => (\n-              <div key={index} className=\"flex justify-between items-center text-sm\">\n-                <span className={fee.isOverdue ? 'text-red-600' : fee.isDueToday ? 'text-yellow-600' : ''}>\n+              <div\n+                key={index}\n+                className=\"flex justify-between items-center text-sm\"\n+              >\n+                <span\n+                  className={\n+                    fee.isOverdue\n+                      ? 'text-red-600'\n+                      : fee.isDueToday\n+                        ? 'text-yellow-600'\n+                        : ''\n+                  }\n+                >\n                   {fee.feeTypeName} - {fee.installmentName}\n                 </span>\n                 <div className=\"flex items-center gap-2\">\n-                  <span className=\"font-medium\">₹{fee.dueAmount.toLocaleString()}</span>\n-                  {fee.isOverdue && <AlertTriangle className=\"w-3 h-3 text-red-500\" />}\n-                  {fee.isDueToday && <Clock className=\"w-3 h-3 text-yellow-500\" />}\n+                  <span className=\"font-medium\">\n+                    ₹{fee.dueAmount.toLocaleString()}\n+                  </span>\n+                  {fee.isOverdue && (\n+                    <AlertTriangle className=\"w-3 h-3 text-red-500\" />\n+                  )}\n+                  {fee.isDueToday && (\n+                    <Clock className=\"w-3 h-3 text-yellow-500\" />\n+                  )}\n                 </div>\n               </div>\n             ))}\n             {student.dueFees.length > 3 && (\n@@ -254,9 +308,11 @@\n       {overdueCount > 0 && (\n         <div className=\"bg-red-100 border border-red-200 rounded p-2 mb-4\">\n           <div className=\"flex items-center gap-2 text-red-700 text-sm\">\n             <AlertTriangle className=\"w-4 h-4\" />\n-            <span className=\"font-medium\">{overdueCount} overdue payment(s)</span>\n+            <span className=\"font-medium\">\n+              {overdueCount} overdue payment(s)\n+            </span>\n           </div>\n         </div>\n       )}\n \n@@ -288,32 +344,41 @@\n           </button>\n         </div>\n       </div>\n     </div>\n-  );\n-};\n+  )\n+}\n \n const StudentDueDetailsDialog = ({ student, open, onClose }) => {\n-  if (!student) return null;\n+  if (!student) return null\n \n-  const totalDue = student.dueFees?.reduce((sum, fee) => sum + fee.dueAmount, 0) || 0;\n-  const overdueAmount = student.dueFees?.reduce((sum, fee) => \n-    sum + (fee.isOverdue ? fee.dueAmount : 0), 0) || 0;\n+  const totalDue =\n+    student.dueFees?.reduce((sum, fee) => sum + fee.dueAmount, 0) || 0\n+  const overdueAmount =\n+    student.dueFees?.reduce(\n+      (sum, fee) => sum + (fee.isOverdue ? fee.dueAmount : 0),\n+      0,\n+    ) || 0\n \n-  const getStatusColor = (fee) => {\n-    if (fee.isOverdue) return 'text-red-600 bg-red-100';\n-    if (fee.isDueToday) return 'text-yellow-600 bg-yellow-100';\n-    return 'text-blue-600 bg-blue-100';\n-  };\n+  const getStatusColor = fee => {\n+    if (fee.isOverdue) return 'text-red-600 bg-red-100'\n+    if (fee.isDueToday) return 'text-yellow-600 bg-yellow-100'\n+    return 'text-blue-600 bg-blue-100'\n+  }\n \n-  const getStatusText = (fee) => {\n-    if (fee.isOverdue) return 'Overdue';\n-    if (fee.isDueToday) return 'Due Today';\n-    return 'Upcoming';\n-  };\n+  const getStatusText = fee => {\n+    if (fee.isOverdue) return 'Overdue'\n+    if (fee.isDueToday) return 'Due Today'\n+    return 'Upcoming'\n+  }\n \n   return (\n-    <Dialog open={open} onClose={onClose} title={`Due Fees - ${student.name}`} size=\"xl\">\n+    <Dialog\n+      open={open}\n+      onClose={onClose}\n+      title={`Due Fees - ${student.name}`}\n+      size=\"xl\"\n+    >\n       <div className=\"space-y-6\">\n         {/* Student Information */}\n         <div className=\"bg-gray-50 rounded-lg p-4\">\n           <h3 className=\"font-medium mb-3\">Student Information</h3>\n@@ -327,9 +392,11 @@\n               <div className=\"font-medium\">{student.rollNumber}</div>\n             </div>\n             <div>\n               <span className=\"text-gray-500\">Class:</span>\n-              <div className=\"font-medium\">{student.className} - {student.section}</div>\n+              <div className=\"font-medium\">\n+                {student.className} - {student.section}\n+              </div>\n             </div>\n             <div>\n               <span className=\"text-gray-500\">Admission Number:</span>\n               <div className=\"font-medium\">{student.admissionNumber}</div>\n@@ -347,17 +414,23 @@\n \n         {/* Due Summary */}\n         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n           <div className=\"bg-red-50 rounded-lg p-4 text-center\">\n-            <div className=\"text-2xl font-bold text-red-600\">₹{totalDue.toLocaleString()}</div>\n+            <div className=\"text-2xl font-bold text-red-600\">\n+              ₹{totalDue.toLocaleString()}\n+            </div>\n             <div className=\"text-sm text-gray-600\">Total Due</div>\n           </div>\n           <div className=\"bg-yellow-50 rounded-lg p-4 text-center\">\n-            <div className=\"text-2xl font-bold text-yellow-600\">₹{overdueAmount.toLocaleString()}</div>\n+            <div className=\"text-2xl font-bold text-yellow-600\">\n+              ₹{overdueAmount.toLocaleString()}\n+            </div>\n             <div className=\"text-sm text-gray-600\">Overdue Amount</div>\n           </div>\n           <div className=\"bg-blue-50 rounded-lg p-4 text-center\">\n-            <div className=\"text-2xl font-bold text-blue-600\">{student.dueFees?.length || 0}</div>\n+            <div className=\"text-2xl font-bold text-blue-600\">\n+              {student.dueFees?.length || 0}\n+            </div>\n             <div className=\"text-sm text-gray-600\">Pending Items</div>\n           </div>\n         </div>\n \n@@ -380,35 +453,47 @@\n                 {student.dueFees?.map((fee, index) => (\n                   <tr key={index} className=\"border-b hover:bg-gray-50\">\n                     <td className=\"py-3 px-4\">\n                       <div className=\"font-medium\">{fee.feeTypeName}</div>\n-                      <div className=\"text-sm text-gray-500\">{fee.installmentName}</div>\n+                      <div className=\"text-sm text-gray-500\">\n+                        {fee.installmentName}\n+                      </div>\n                     </td>\n                     <td className=\"py-3 px-4\">\n                       <div className=\"flex items-center gap-2\">\n                         <Calendar className=\"w-4 h-4 text-gray-400\" />\n                         {new Date(fee.dueDate).toLocaleDateString()}\n                       </div>\n                     </td>\n-                    <td className=\"py-3 px-4 text-right\">₹{fee.amount.toLocaleString()}</td>\n                     <td className=\"py-3 px-4 text-right\">\n-                      {fee.lateFee > 0 ? `₹${fee.lateFee.toLocaleString()}` : '-'}\n+                      ₹{fee.amount.toLocaleString()}\n                     </td>\n+                    <td className=\"py-3 px-4 text-right\">\n+                      {fee.lateFee > 0\n+                        ? `₹${fee.lateFee.toLocaleString()}`\n+                        : '-'}\n+                    </td>\n                     <td className=\"py-3 px-4 text-right font-medium\">\n                       ₹{fee.dueAmount.toLocaleString()}\n                     </td>\n                     <td className=\"py-3 px-4 text-center\">\n-                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(fee)}`}>\n+                      <span\n+                        className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(fee)}`}\n+                      >\n                         {getStatusText(fee)}\n                       </span>\n                     </td>\n                   </tr>\n                 ))}\n               </tbody>\n               <tfoot className=\"bg-gray-50\">\n                 <tr>\n-                  <td colSpan=\"4\" className=\"py-3 px-4 font-bold text-right\">Total Due Amount:</td>\n-                  <td className=\"py-3 px-4 text-right font-bold text-lg\">₹{totalDue.toLocaleString()}</td>\n+                  <td colSpan=\"4\" className=\"py-3 px-4 font-bold text-right\">\n+                    Total Due Amount:\n+                  </td>\n+                  <td className=\"py-3 px-4 text-right font-bold text-lg\">\n+                    ₹{totalDue.toLocaleString()}\n+                  </td>\n                   <td></td>\n                 </tr>\n               </tfoot>\n             </table>\n@@ -432,13 +517,19 @@\n                 </thead>\n                 <tbody>\n                   {student.paymentHistory.slice(0, 5).map((payment, index) => (\n                     <tr key={index} className=\"border-b text-sm\">\n-                      <td className=\"py-2 px-4\">{new Date(payment.date).toLocaleDateString()}</td>\n+                      <td className=\"py-2 px-4\">\n+                        {new Date(payment.date).toLocaleDateString()}\n+                      </td>\n                       <td className=\"py-2 px-4\">{payment.receiptNumber}</td>\n                       <td className=\"py-2 px-4\">{payment.feeType}</td>\n-                      <td className=\"py-2 px-4 text-right\">₹{payment.amount.toLocaleString()}</td>\n-                      <td className=\"py-2 px-4 capitalize\">{payment.mode.replace('_', ' ')}</td>\n+                      <td className=\"py-2 px-4 text-right\">\n+                        ₹{payment.amount.toLocaleString()}\n+                      </td>\n+                      <td className=\"py-2 px-4 capitalize\">\n+                        {payment.mode.replace('_', ' ')}\n+                      </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </table>\n@@ -456,60 +547,79 @@\n           </button>\n         </div>\n       </div>\n     </Dialog>\n-  );\n-};\n+  )\n+}\n \n-const BulkReminderDialog = ({ selectedStudents, open, onClose, onSendReminders }) => {\n-  const [reminderType, setReminderType] = useState('sms');\n-  const [customMessage, setCustomMessage] = useState('');\n-  const [isSending, setIsSending] = useState(false);\n+const BulkReminderDialog = ({\n+  selectedStudents,\n+  open,\n+  onClose,\n+  onSendReminders,\n+}) => {\n+  const [reminderType, setReminderType] = useState('sms')\n+  const [customMessage, setCustomMessage] = useState('')\n+  const [isSending, setIsSending] = useState(false)\n \n   const defaultMessages = {\n-    sms: `Dear Parent, your ward has pending fee payment of ₹{amount}. Due date: {dueDate}. Please pay at the earliest. - School Management`,\n-    email: `Dear Parent,\\n\\nThis is to remind you that your ward {studentName} (Roll: {rollNumber}) has pending fee payments.\\n\\nTotal Due Amount: ₹{amount}\\nDue Date: {dueDate}\\n\\nPlease make the payment at the earliest to avoid late fees.\\n\\nThank you,\\nSchool Management`\n-  };\n+    sms: 'Dear Parent, your ward has pending fee payment of ₹{amount}. Due date: {dueDate}. Please pay at the earliest. - School Management',\n+    email:\n+      'Dear Parent,\\n\\nThis is to remind you that your ward {studentName} (Roll: {rollNumber}) has pending fee payments.\\n\\nTotal Due Amount: ₹{amount}\\nDue Date: {dueDate}\\n\\nPlease make the payment at the earliest to avoid late fees.\\n\\nThank you,\\nSchool Management',\n+  }\n \n   const handleSendReminders = async () => {\n-    setIsSending(true);\n+    setIsSending(true)\n     try {\n       await onSendReminders({\n         studentIds: selectedStudents.map(s => s.id),\n         reminderType,\n-        message: customMessage || defaultMessages[reminderType]\n-      });\n-      onClose();\n+        message: customMessage || defaultMessages[reminderType],\n+      })\n+      onClose()\n     } catch (error) {\n-      console.error('Error sending reminders:', error);\n-      alert('Error sending reminders. Please try again.');\n+      console.error('Error sending reminders:', error)\n+      alert('Error sending reminders. Please try again.')\n     } finally {\n-      setIsSending(false);\n+      setIsSending(false)\n     }\n-  };\n+  }\n \n   return (\n     <Dialog open={open} onClose={onClose} title=\"Send Bulk Reminders\" size=\"lg\">\n       <div className=\"space-y-6\">\n         <div className=\"bg-blue-50 rounded-lg p-4\">\n           <h3 className=\"font-medium mb-2\">Selected Students</h3>\n           <p className=\"text-sm text-gray-600\">\n-            Sending reminders to {selectedStudents.length} students with total due amount of ₹\n-            {Array.isArray(selectedStudents) ? selectedStudents.reduce((sum, student) => \n-              sum + (student.dueFees?.reduce((feeSum, fee) => feeSum + fee.dueAmount, 0) || 0), 0\n-            ).toLocaleString() : '0'}\n+            Sending reminders to {selectedStudents.length} students with total\n+            due amount of ₹\n+            {Array.isArray(selectedStudents)\n+              ? selectedStudents\n+                  .reduce(\n+                    (sum, student) =>\n+                      sum +\n+                      (student.dueFees?.reduce(\n+                        (feeSum, fee) => feeSum + fee.dueAmount,\n+                        0,\n+                      ) || 0),\n+                    0\n+                  )\n+                  .toLocaleString()\n+              : '0'}\n           </p>\n         </div>\n \n         <div>\n-          <label className=\"block text-sm font-medium mb-2\">Reminder Type</label>\n+          <label className=\"block text-sm font-medium mb-2\">\n+            Reminder Type\n+          </label>\n           <div className=\"flex gap-4\">\n             <label className=\"flex items-center gap-2\">\n               <input\n                 type=\"radio\"\n                 value=\"sms\"\n                 checked={reminderType === 'sms'}\n-                onChange={(e) => setReminderType(e.target.value)}\n+                onChange={e => setReminderType(e.target.value)}\n                 className=\"rounded\"\n               />\n               <span>SMS</span>\n             </label>\n@@ -517,27 +627,30 @@\n               <input\n                 type=\"radio\"\n                 value=\"email\"\n                 checked={reminderType === 'email'}\n-                onChange={(e) => setReminderType(e.target.value)}\n+                onChange={e => setReminderType(e.target.value)}\n                 className=\"rounded\"\n               />\n               <span>Email</span>\n             </label>\n           </div>\n         </div>\n \n         <div>\n-          <label className=\"block text-sm font-medium mb-2\">Message Template</label>\n+          <label className=\"block text-sm font-medium mb-2\">\n+            Message Template\n+          </label>\n           <textarea\n             value={customMessage || defaultMessages[reminderType]}\n-            onChange={(e) => setCustomMessage(e.target.value)}\n+            onChange={e => setCustomMessage(e.target.value)}\n             rows={6}\n             className=\"w-full border rounded-lg px-3 py-2\"\n             placeholder=\"Enter custom message or use default template\"\n           />\n           <div className=\"text-xs text-gray-500 mt-1\">\n-            Available placeholders: {'{studentName}'}, {'{rollNumber}'}, {'{amount}'}, {'{dueDate}'}\n+            Available placeholders: {'{studentName}'}, {'{rollNumber}'},{' '}\n+            {'{amount}'}, {'{dueDate}'}\n           </div>\n         </div>\n \n         <div className=\"flex justify-end gap-2\">\n@@ -556,15 +669,17 @@\n               <RefreshCw className=\"w-4 h-4 animate-spin\" />\n             ) : (\n               <Mail className=\"w-4 h-4\" />\n             )}\n-            {isSending ? 'Sending...' : `Send ${selectedStudents.length} Reminders`}\n+            {isSending\n+              ? 'Sending...'\n+              : `Send ${selectedStudents.length} Reminders`}\n           </button>\n         </div>\n       </div>\n     </Dialog>\n-  );\n-};\n+  )\n+}\n \n const SearchDueFees = () => {\n   const [filters, setFilters] = useState({\n     searchTerm: '',\n@@ -573,71 +688,75 @@\n     overdueFilter: 'all',\n     dueDateFrom: '',\n     dueDateTo: '',\n     amountFrom: '',\n-    amountTo: ''\n-  });\n-  const [selectedStudent, setSelectedStudent] = useState(null);\n-  const [showDetailsDialog, setShowDetailsDialog] = useState(false);\n-  const [selectedStudents, setSelectedStudents] = useState([]);\n-  const [showBulkReminderDialog, setShowBulkReminderDialog] = useState(false);\n-  const [sortBy, setSortBy] = useState('totalDue');\n-  const [sortOrder, setSortOrder] = useState('desc');\n+    amountTo: '',\n+  })\n+  const [selectedStudent, setSelectedStudent] = useState(null)\n+  const [showDetailsDialog, setShowDetailsDialog] = useState(false)\n+  const [selectedStudents, setSelectedStudents] = useState([])\n+  const [showBulkReminderDialog, setShowBulkReminderDialog] = useState(false)\n+  const [sortBy, setSortBy] = useState('totalDue')\n+  const [sortOrder, setSortOrder] = useState('desc')\n \n-  const { data: dueFeesData, isLoading, refetch } = useQuery({\n+  const {\n+    data: dueFeesData,\n+    isLoading,\n+    refetch,\n+  } = useQuery({\n     queryKey: ['due-fees', 'search', filters, sortBy, sortOrder],\n-    queryFn: () => feesApi.searchDueFees({ ...filters, sortBy, sortOrder })\n-  });\n+    queryFn: () => feesApi.searchDueFees({ ...filters, sortBy, sortOrder }),\n+  })\n \n-  const handleViewDetails = (student) => {\n-    setSelectedStudent(student);\n-    setShowDetailsDialog(true);\n-  };\n+  const handleViewDetails = student => {\n+    setSelectedStudent(student)\n+    setShowDetailsDialog(true)\n+  }\n \n-  const handleSendReminder = async (student) => {\n+  const handleSendReminder = async student => {\n     try {\n-      await feesApi.sendFeeReminder(student.id);\n-      alert('Reminder sent successfully!');\n+      await feesApi.sendFeeReminder(student.id)\n+      alert('Reminder sent successfully!')\n     } catch (error) {\n-      console.error('Error sending reminder:', error);\n-      alert('Error sending reminder. Please try again.');\n+      console.error('Error sending reminder:', error)\n+      alert('Error sending reminder. Please try again.')\n     }\n-  };\n+  }\n \n-  const handleCollectFees = (student) => {\n+  const handleCollectFees = student => {\n     // Navigate to collect fees page with student pre-selected\n-    window.location.href = `/fees/collect?studentId=${student.id}`;\n-  };\n+    window.location.href = `/fees/collect?studentId=${student.id}`\n+  }\n \n-  const handleBulkReminders = async (reminderData) => {\n+  const handleBulkReminders = async reminderData => {\n     try {\n-      await feesApi.sendBulkReminders(reminderData);\n-      alert('Bulk reminders sent successfully!');\n-      setSelectedStudents([]);\n+      await feesApi.sendBulkReminders(reminderData)\n+      alert('Bulk reminders sent successfully!')\n+      setSelectedStudents([])\n     } catch (error) {\n-      console.error('Error sending bulk reminders:', error);\n-      throw error;\n+      console.error('Error sending bulk reminders:', error)\n+      throw error\n     }\n-  };\n+  }\n \n   const handleExportData = async () => {\n     try {\n-      const exportData = dueFeesData?.data || [];\n-      const csvContent = generateCSVContent(exportData);\n-      const blob = new Blob([csvContent], { type: 'text/csv' });\n-      const url = window.URL.createObjectURL(blob);\n-      const a = document.createElement('a');\n-      a.href = url;\n-      a.download = `due-fees-${new Date().toISOString().split('T')[0]}.csv`;\n-      a.click();\n-      window.URL.revokeObjectURL(url);\n+      const exportData = dueFeesData?.data || []\n+      const csvContent = generateCSVContent(exportData)\n+      const blob = new Blob([csvContent], { type: 'text/csv' })\n+      const url = window.URL.createObjectURL(blob)\n+      const a = document.createElement('a')\n+      a.href = url\n+      a.download = `due-fees-${new Date().toISOString().split('T')[0]}.csv`\n+      a.click()\n+      window.URL.revokeObjectURL(url)\n     } catch (error) {\n-      console.error('Export error:', error);\n-      alert('Error exporting data. Please try again.');\n+      console.error('Export error:', error)\n+      alert('Error exporting data. Please try again.')\n     }\n-  };\n+  }\n \n-  const generateCSVContent = (data) => {\n+  const generateCSVContent = data => {\n     const headers = [\n       'Student Name',\n       'Roll Number',\n       'Class',\n@@ -645,65 +764,89 @@\n       'Contact Number',\n       'Total Due',\n       'Overdue Amount',\n       'Pending Items',\n-      'Last Payment Date'\n-    ];\n+      'Last Payment Date',\n+    ]\n \n     const rows = data.map(student => [\n       student.name,\n       student.rollNumber,\n       `${student.className} - ${student.section}`,\n       student.fatherName,\n       student.contactNumber,\n       student.dueFees?.reduce((sum, fee) => sum + fee.dueAmount, 0) || 0,\n-      student.dueFees?.reduce((sum, fee) => sum + (fee.isOverdue ? fee.dueAmount : 0), 0) || 0,\n+      student.dueFees?.reduce(\n+        (sum, fee) => sum + (fee.isOverdue ? fee.dueAmount : 0),\n+        0,\n+      ) || 0,\n       student.dueFees?.length || 0,\n-      student.lastPaymentDate ? new Date(student.lastPaymentDate).toLocaleDateString() : 'Never'\n-    ]);\n+      student.lastPaymentDate\n+        ? new Date(student.lastPaymentDate).toLocaleDateString()\n+        : 'Never',\n+    ])\n \n-    return [headers, ...rows].map(row => row.join(',')).join('\\n');\n-  };\n+    return [headers, ...rows].map(row => row.join(',')).join('\\n')\n+  }\n \n-  const toggleStudentSelection = (student) => {\n+  const toggleStudentSelection = student => {\n     setSelectedStudents(prev => {\n-      const isSelected = prev.find(s => s.id === student.id);\n+      const isSelected = prev.find(s => s.id === student.id)\n       if (isSelected) {\n-        return prev.filter(s => s.id !== student.id);\n+        return prev.filter(s => s.id !== student.id)\n       } else {\n-        return [...prev, student];\n+        return [...prev, student]\n       }\n-    });\n-  };\n+    })\n+  }\n \n   const selectAllStudents = () => {\n     if (selectedStudents.length === dueFeesData?.data?.length) {\n-      setSelectedStudents([]);\n+      setSelectedStudents([])\n     } else {\n-      setSelectedStudents(dueFeesData?.data || []);\n+      setSelectedStudents(dueFeesData?.data || [])\n     }\n-  };\n+  }\n \n   const getStatistics = () => {\n-    const students = dueFeesData?.data || [];\n-    const totalDue = Array.isArray(students) ? students.reduce((sum, student) => \n-      sum + (student.dueFees?.reduce((feeSum, fee) => feeSum + fee.dueAmount, 0) || 0), 0) : 0;\n-    const overdueAmount = Array.isArray(students) ? students.reduce((sum, student) => \n-      sum + (student.dueFees?.reduce((feeSum, fee) => feeSum + (fee.isOverdue ? fee.dueAmount : 0), 0) || 0), 0) : 0;\n-    const overdueStudents = students.filter(student => \n-      student.dueFees?.some(fee => fee.isOverdue)).length;\n+    const students = dueFeesData?.data || []\n+    const totalDue = Array.isArray(students)\n+      ? students.reduce(\n+          (sum, student) =>\n+            sum +\n+            (student.dueFees?.reduce(\n+              (feeSum, fee) => feeSum + fee.dueAmount,\n+              0,\n+            ) || 0),\n+          0,\n+        )\n+      : 0\n+    const overdueAmount = Array.isArray(students)\n+      ? students.reduce(\n+          (sum, student) =>\n+            sum +\n+            (student.dueFees?.reduce(\n+              (feeSum, fee) => feeSum + (fee.isOverdue ? fee.dueAmount : 0),\n+              0,\n+            ) || 0),\n+          0,\n+        )\n+      : 0\n+    const overdueStudents = students.filter(student =>\n+      student.dueFees?.some(fee => fee.isOverdue),\n+    ).length\n \n     return {\n       totalStudents: students.length,\n       totalDue,\n       overdueAmount,\n-      overdueStudents\n-    };\n-  };\n+      overdueStudents,\n+    }\n+  }\n \n-  const stats = getStatistics();\n+  const stats = getStatistics()\n \n-  if (isLoading) return <LoadingSkeleton />;\n+  if (isLoading) return <LoadingSkeleton />\n \n   return (\n     <div className=\"space-y-6\">\n       <div className=\"flex justify-between items-center\">\n@@ -749,18 +892,22 @@\n         <div className=\"bg-white p-4 rounded-lg shadow\">\n           <div className=\"flex items-center gap-3\">\n             <DollarSign className=\"w-8 h-8 text-red-600\" />\n             <div>\n-              <p className=\"text-2xl font-bold\">₹{stats.totalDue.toLocaleString()}</p>\n+              <p className=\"text-2xl font-bold\">\n+                ₹{stats.totalDue.toLocaleString()}\n+              </p>\n               <p className=\"text-sm text-gray-600\">Total Due Amount</p>\n             </div>\n           </div>\n         </div>\n         <div className=\"bg-white p-4 rounded-lg shadow\">\n           <div className=\"flex items-center gap-3\">\n             <AlertTriangle className=\"w-8 h-8 text-yellow-600\" />\n             <div>\n-              <p className=\"text-2xl font-bold\">₹{stats.overdueAmount.toLocaleString()}</p>\n+              <p className=\"text-2xl font-bold\">\n+                ₹{stats.overdueAmount.toLocaleString()}\n+              </p>\n               <p className=\"text-sm text-gray-600\">Overdue Amount</p>\n             </div>\n           </div>\n         </div>\n@@ -784,23 +931,27 @@\n           <div className=\"flex items-center gap-4\">\n             <label className=\"flex items-center gap-2\">\n               <input\n                 type=\"checkbox\"\n-                checked={selectedStudents.length === dueFeesData?.data?.length && dueFeesData?.data?.length > 0}\n+                checked={\n+                  selectedStudents.length === dueFeesData?.data?.length &&\n+                  dueFeesData?.data?.length > 0\n+                }\n                 onChange={selectAllStudents}\n                 className=\"rounded\"\n               />\n               <span className=\"text-sm font-medium\">Select All</span>\n             </label>\n             <span className=\"text-sm text-gray-500\">\n-              {selectedStudents.length} of {dueFeesData?.data?.length || 0} selected\n+              {selectedStudents.length} of {dueFeesData?.data?.length || 0}{' '}\n+              selected\n             </span>\n           </div>\n           <div className=\"flex items-center gap-4\">\n             <span className=\"text-sm font-medium\">Sort by:</span>\n             <select\n               value={sortBy}\n-              onChange={(e) => setSortBy(e.target.value)}\n+              onChange={e => setSortBy(e.target.value)}\n               className=\"border rounded px-3 py-1 text-sm\"\n             >\n               <option value=\"totalDue\">Total Due Amount</option>\n               <option value=\"overdueAmount\">Overdue Amount</option>\n@@ -808,9 +959,9 @@\n               <option value=\"className\">Class</option>\n             </select>\n             <select\n               value={sortOrder}\n-              onChange={(e) => setSortOrder(e.target.value)}\n+              onChange={e => setSortOrder(e.target.value)}\n               className=\"border rounded px-3 py-1 text-sm\"\n             >\n               <option value=\"desc\">Descending</option>\n               <option value=\"asc\">Ascending</option>\n@@ -823,11 +974,14 @@\n       <div className=\"space-y-4\">\n         {dueFeesData?.data?.length === 0 ? (\n           <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n             <CheckCircle className=\"w-12 h-12 mx-auto mb-4 text-green-300\" />\n-            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Due Fees Found</h3>\n+            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n+              No Due Fees Found\n+            </h3>\n             <p className=\"text-gray-500\">\n-              No students have pending fee payments matching your search criteria.\n+              No students have pending fee payments matching your search\n+              criteria.\n             </p>\n           </div>\n         ) : (\n           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n@@ -835,9 +989,12 @@\n               <div key={student.id} className=\"relative\">\n                 <label className=\"absolute top-4 left-4 z-10\">\n                   <input\n                     type=\"checkbox\"\n-                    checked={selectedStudents.find(s => s.id === student.id) !== undefined}\n+                    checked={\n+                      selectedStudents.find(s => s.id === student.id) !==\n+                      undefined\n+                    }\n                     onChange={() => toggleStudentSelection(student)}\n                     className=\"rounded\"\n                   />\n                 </label>\n@@ -867,8 +1024,8 @@\n         onClose={() => setShowBulkReminderDialog(false)}\n         onSendReminders={handleBulkReminders}\n       />\n     </div>\n-  );\n-};\n+  )\n+}\n\\ No newline at end of file\n \n-export default SearchDueFees;\n+export default SearchDueFees\n"
                }
            ],
            "date": 1755987434758,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { \n  Search,\n  Filter,\n  Calendar,\n  Download,\n  Eye,\n  AlertTriangle,\n  Clock,\n  DollarSign,\n  User,\n  Users,\n  FileText,\n  Mail,\n  Phone,\n  Printer,\n  RefreshCw,\n  CheckCircle,\n  XCircle\n} from 'lucide-react';\nimport Input from '../../components/ui/Input';\nimport Dialog from '../../components/ui/Dialog';\nimport LoadingSkeleton from '../../components/ui/LoadingSkeleton';\nimport { feesApi } from '../../lib/api/fees';\nimport { printToPDF } from '../../lib/print';\n\nconst DueFeesFilters = ({ filters, onFiltersChange }) => {\n  const { data: classesData } = useQuery({\n    queryKey: ['classes', 'all'],\n    queryFn: () => feesApi.getClasses()\n  });\n\n  const { data: feeGroupsData } = useQuery({\n    queryKey: ['fee-groups', 'active'],\n    queryFn: () => feesApi.getActiveFeeGroups()\n  });\n\n  const overdueOptions = [\n    { value: 'all', label: 'All Dues' },\n    { value: 'overdue', label: 'Overdue Only' },\n    { value: 'due_today', label: 'Due Today' },\n    { value: 'upcoming', label: 'Upcoming' }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow p-6\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h3 className=\"font-medium\">Search Filters</h3>\n        <button\n          onClick={() => onFiltersChange({\n            searchTerm: '',\n            classId: '',\n            feeGroupId: '',\n            overdueFilter: 'all',\n            dueDateFrom: '',\n            dueDateTo: '',\n            amountFrom: '',\n            amountTo: ''\n          })}\n          className=\"text-sm text-blue-600 hover:text-blue-700\"\n        >\n          Clear All\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {/* Search Term */}\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search by name, roll number...\"\n            value={filters.searchTerm}\n            onChange={(e) => onFiltersChange({ ...filters, searchTerm: e.target.value })}\n            className=\"pl-10 pr-4 py-2 border rounded-lg w-full\"\n          />\n        </div>\n\n        {/* Class Filter */}\n        <select\n          value={filters.classId}\n          onChange={(e) => onFiltersChange({ ...filters, classId: e.target.value })}\n          className=\"border rounded-lg px-3 py-2\"\n        >\n          <option value=\"\">All Classes</option>\n          {Array.isArray(classesData?.data) && classesData.data.map(cls => (\n            <option key={cls.id} value={cls.id}>\n              {cls.name}\n            </option>\n          ))}\n        </select>\n\n        {/* Fee Group Filter */}\n        <select\n          value={filters.feeGroupId}\n          onChange={(e) => onFiltersChange({ ...filters, feeGroupId: e.target.value })}\n          className=\"border rounded-lg px-3 py-2\"\n        >\n          <option value=\"\">All Fee Groups</option>\n          {feeGroupsData?.data?.map(group => (\n            <option key={group.id} value={group.id}>\n              {group.name}\n            </option>\n          ))}\n        </select>\n\n        {/* Overdue Filter */}\n        <select\n          value={filters.overdueFilter}\n          onChange={(e) => onFiltersChange({ ...filters, overdueFilter: e.target.value })}\n          className=\"border rounded-lg px-3 py-2\"\n        >\n          {Array.isArray(overdueOptions) && overdueOptions.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n\n        {/* Due Date Range */}\n        <Input\n          label=\"Due From\"\n          type=\"date\"\n          value={filters.dueDateFrom}\n          onChange={(e) => onFiltersChange({ ...filters, dueDateFrom: e.target.value })}\n        />\n\n        <Input\n          label=\"Due To\"\n          type=\"date\"\n          value={filters.dueDateTo}\n          onChange={(e) => onFiltersChange({ ...filters, dueDateTo: e.target.value })}\n        />\n\n        {/* Amount Range */}\n        <Input\n          label=\"Min Amount\"\n          type=\"number\"\n          value={filters.amountFrom}\n          onChange={(e) => onFiltersChange({ ...filters, amountFrom: e.target.value })}\n          placeholder=\"0\"\n        />\n\n        <Input\n          label=\"Max Amount\"\n          type=\"number\"\n          value={filters.amountTo}\n          onChange={(e) => onFiltersChange({ ...filters, amountTo: e.target.value })}\n          placeholder=\"No limit\"\n        />\n      </div>\n    </div>\n  );\n};\n\nconst DueFeesCard = ({ student, onViewDetails, onSendReminder, onCollectFees }) => {\n  const totalDue = student.dueFees?.reduce((sum, fee) => sum + fee.dueAmount, 0) || 0;\n  const overdueAmount = student.dueFees?.reduce((sum, fee) => \n    sum + (fee.isOverdue ? fee.dueAmount : 0), 0) || 0;\n  const overdueCount = student.dueFees?.filter(fee => fee.isOverdue).length || 0;\n\n  const getUrgencyColor = () => {\n    if (overdueAmount > 0) return 'border-red-500 bg-red-50';\n    if (student.dueFees?.some(fee => fee.isDueToday)) return 'border-yellow-500 bg-yellow-50';\n    return 'border-gray-200 bg-white';\n  };\n\n  const getUrgencyIcon = () => {\n    if (overdueAmount > 0) return <AlertTriangle className=\"w-5 h-5 text-red-600\" />;\n    if (student.dueFees?.some(fee => fee.isDueToday)) return <Clock className=\"w-5 h-5 text-yellow-600\" />;\n    return <Calendar className=\"w-5 h-5 text-blue-600\" />;\n  };\n\n  return (\n    <div className={`border rounded-lg p-6 hover:shadow-md transition-shadow ${getUrgencyColor()}`}>\n      <div className=\"flex justify-between items-start mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n            <User className=\"w-5 h-5 text-blue-600\" />\n          </div>\n          <div>\n            <h3 className=\"font-semibold\">{student.name}</h3>\n            <p className=\"text-sm text-gray-600\">\n              {student.className} - {student.section} | Roll: {student.rollNumber}\n            </p>\n            <p className=\"text-sm text-gray-500\">\n              Admission: {student.admissionNumber}\n            </p>\n          </div>\n        </div>\n        <div className=\"text-right\">\n          <div className=\"flex items-center gap-1 mb-1\">\n            {getUrgencyIcon()}\n          </div>\n          <div className=\"text-xl font-bold text-red-600\">\n            ₹{totalDue.toLocaleString()}\n          </div>\n          <div className=\"text-sm text-gray-500\">Total Due</div>\n          {overdueAmount > 0 && (\n            <div className=\"text-sm text-red-600 font-medium\">\n              ₹{overdueAmount.toLocaleString()} Overdue\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4 mb-4 text-sm\">\n        <div>\n          <span className=\"text-gray-500\">Father's Name:</span>\n          <div className=\"font-medium\">{student.fatherName}</div>\n        </div>\n        <div>\n          <span className=\"text-gray-500\">Contact:</span>\n          <div className=\"font-medium\">{student.contactNumber}</div>\n        </div>\n        <div>\n          <span className=\"text-gray-500\">Pending Fees:</span>\n          <div className=\"font-medium\">{student.dueFees?.length || 0} items</div>\n        </div>\n        <div>\n          <span className=\"text-gray-500\">Last Payment:</span>\n          <div className=\"font-medium\">\n            {student.lastPaymentDate ? new Date(student.lastPaymentDate).toLocaleDateString() : 'Never'}\n          </div>\n        </div>\n      </div>\n\n      {student.dueFees && student.dueFees.length > 0 && (\n        <div className=\"border-t pt-3 mb-4\">\n          <div className=\"text-sm text-gray-600 mb-2\">Due Fees:</div>\n          <div className=\"space-y-1\">\n            {student.dueFees.slice(0, 3).map((fee, index) => (\n              <div key={index} className=\"flex justify-between items-center text-sm\">\n                <span className={fee.isOverdue ? 'text-red-600' : fee.isDueToday ? 'text-yellow-600' : ''}>\n                  {fee.feeTypeName} - {fee.installmentName}\n                </span>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"font-medium\">₹{fee.dueAmount.toLocaleString()}</span>\n                  {fee.isOverdue && <AlertTriangle className=\"w-3 h-3 text-red-500\" />}\n                  {fee.isDueToday && <Clock className=\"w-3 h-3 text-yellow-500\" />}\n                </div>\n              </div>\n            ))}\n            {student.dueFees.length > 3 && (\n              <div className=\"text-sm text-gray-500\">\n                +{student.dueFees.length - 3} more fees\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {overdueCount > 0 && (\n        <div className=\"bg-red-100 border border-red-200 rounded p-2 mb-4\">\n          <div className=\"flex items-center gap-2 text-red-700 text-sm\">\n            <AlertTriangle className=\"w-4 h-4\" />\n            <span className=\"font-medium\">{overdueCount} overdue payment(s)</span>\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex justify-between items-center\">\n        <div className=\"text-xs text-gray-500\">\n          Last updated: {new Date(student.updatedAt).toLocaleDateString()}\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => onViewDetails(student)}\n            className=\"p-1 text-gray-400 hover:text-blue-600\"\n            title=\"View Details\"\n          >\n            <Eye className=\"w-4 h-4\" />\n          </button>\n          <button\n            onClick={() => onSendReminder(student)}\n            className=\"p-1 text-gray-400 hover:text-yellow-600\"\n            title=\"Send Reminder\"\n          >\n            <Mail className=\"w-4 h-4\" />\n          </button>\n          <button\n            onClick={() => onCollectFees(student)}\n            className=\"p-1 text-gray-400 hover:text-green-600\"\n            title=\"Collect Fees\"\n          >\n            <DollarSign className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst StudentDueDetailsDialog = ({ student, open, onClose }) => {\n  if (!student) return null;\n\n  const totalDue = student.dueFees?.reduce((sum, fee) => sum + fee.dueAmount, 0) || 0;\n  const overdueAmount = student.dueFees?.reduce((sum, fee) => \n    sum + (fee.isOverdue ? fee.dueAmount : 0), 0) || 0;\n\n  const getStatusColor = (fee) => {\n    if (fee.isOverdue) return 'text-red-600 bg-red-100';\n    if (fee.isDueToday) return 'text-yellow-600 bg-yellow-100';\n    return 'text-blue-600 bg-blue-100';\n  };\n\n  const getStatusText = (fee) => {\n    if (fee.isOverdue) return 'Overdue';\n    if (fee.isDueToday) return 'Due Today';\n    return 'Upcoming';\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} title={`Due Fees - ${student.name}`} size=\"xl\">\n      <div className=\"space-y-6\">\n        {/* Student Information */}\n        <div className=\"bg-gray-50 rounded-lg p-4\">\n          <h3 className=\"font-medium mb-3\">Student Information</h3>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-500\">Name:</span>\n              <div className=\"font-medium\">{student.name}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Roll Number:</span>\n              <div className=\"font-medium\">{student.rollNumber}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Class:</span>\n              <div className=\"font-medium\">{student.className} - {student.section}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Admission Number:</span>\n              <div className=\"font-medium\">{student.admissionNumber}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Father's Name:</span>\n              <div className=\"font-medium\">{student.fatherName}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Contact Number:</span>\n              <div className=\"font-medium\">{student.contactNumber}</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Due Summary */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"bg-red-50 rounded-lg p-4 text-center\">\n            <div className=\"text-2xl font-bold text-red-600\">₹{totalDue.toLocaleString()}</div>\n            <div className=\"text-sm text-gray-600\">Total Due</div>\n          </div>\n          <div className=\"bg-yellow-50 rounded-lg p-4 text-center\">\n            <div className=\"text-2xl font-bold text-yellow-600\">₹{overdueAmount.toLocaleString()}</div>\n            <div className=\"text-sm text-gray-600\">Overdue Amount</div>\n          </div>\n          <div className=\"bg-blue-50 rounded-lg p-4 text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">{student.dueFees?.length || 0}</div>\n            <div className=\"text-sm text-gray-600\">Pending Items</div>\n          </div>\n        </div>\n\n        {/* Due Fees Table */}\n        <div>\n          <h3 className=\"font-medium mb-3\">Due Fees Details</h3>\n          <div className=\"bg-white border rounded-lg overflow-hidden\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"text-left py-3 px-4\">Fee Type</th>\n                  <th className=\"text-left py-3 px-4\">Due Date</th>\n                  <th className=\"text-right py-3 px-4\">Amount</th>\n                  <th className=\"text-right py-3 px-4\">Late Fee</th>\n                  <th className=\"text-right py-3 px-4\">Total Due</th>\n                  <th className=\"text-center py-3 px-4\">Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {student.dueFees?.map((fee, index) => (\n                  <tr key={index} className=\"border-b hover:bg-gray-50\">\n                    <td className=\"py-3 px-4\">\n                      <div className=\"font-medium\">{fee.feeTypeName}</div>\n                      <div className=\"text-sm text-gray-500\">{fee.installmentName}</div>\n                    </td>\n                    <td className=\"py-3 px-4\">\n                      <div className=\"flex items-center gap-2\">\n                        <Calendar className=\"w-4 h-4 text-gray-400\" />\n                        {new Date(fee.dueDate).toLocaleDateString()}\n                      </div>\n                    </td>\n                    <td className=\"py-3 px-4 text-right\">₹{fee.amount.toLocaleString()}</td>\n                    <td className=\"py-3 px-4 text-right\">\n                      {fee.lateFee > 0 ? `₹${fee.lateFee.toLocaleString()}` : '-'}\n                    </td>\n                    <td className=\"py-3 px-4 text-right font-medium\">\n                      ₹{fee.dueAmount.toLocaleString()}\n                    </td>\n                    <td className=\"py-3 px-4 text-center\">\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(fee)}`}>\n                        {getStatusText(fee)}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n              <tfoot className=\"bg-gray-50\">\n                <tr>\n                  <td colSpan=\"4\" className=\"py-3 px-4 font-bold text-right\">Total Due Amount:</td>\n                  <td className=\"py-3 px-4 text-right font-bold text-lg\">₹{totalDue.toLocaleString()}</td>\n                  <td></td>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </div>\n\n        {/* Payment History */}\n        {student.paymentHistory && student.paymentHistory.length > 0 && (\n          <div>\n            <h3 className=\"font-medium mb-3\">Recent Payment History</h3>\n            <div className=\"bg-white border rounded-lg overflow-hidden\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"text-left py-2 px-4\">Date</th>\n                    <th className=\"text-left py-2 px-4\">Receipt No</th>\n                    <th className=\"text-left py-2 px-4\">Fee Type</th>\n                    <th className=\"text-right py-2 px-4\">Amount</th>\n                    <th className=\"text-left py-2 px-4\">Mode</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {student.paymentHistory.slice(0, 5).map((payment, index) => (\n                    <tr key={index} className=\"border-b text-sm\">\n                      <td className=\"py-2 px-4\">{new Date(payment.date).toLocaleDateString()}</td>\n                      <td className=\"py-2 px-4\">{payment.receiptNumber}</td>\n                      <td className=\"py-2 px-4\">{payment.feeType}</td>\n                      <td className=\"py-2 px-4 text-right\">₹{payment.amount.toLocaleString()}</td>\n                      <td className=\"py-2 px-4 capitalize\">{payment.mode.replace('_', ' ')}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n\n        {/* Actions */}\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 border rounded-lg hover:bg-gray-50\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nconst BulkReminderDialog = ({ selectedStudents, open, onClose, onSendReminders }) => {\n  const [reminderType, setReminderType] = useState('sms');\n  const [customMessage, setCustomMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n\n  const defaultMessages = {\n    sms: `Dear Parent, your ward has pending fee payment of ₹{amount}. Due date: {dueDate}. Please pay at the earliest. - School Management`,\n    email: `Dear Parent,\\n\\nThis is to remind you that your ward {studentName} (Roll: {rollNumber}) has pending fee payments.\\n\\nTotal Due Amount: ₹{amount}\\nDue Date: {dueDate}\\n\\nPlease make the payment at the earliest to avoid late fees.\\n\\nThank you,\\nSchool Management`\n  };\n\n  const handleSendReminders = async () => {\n    setIsSending(true);\n    try {\n      await onSendReminders({\n        studentIds: selectedStudents.map(s => s.id),\n        reminderType,\n        message: customMessage || defaultMessages[reminderType]\n      });\n      onClose();\n    } catch (error) {\n      console.error('Error sending reminders:', error);\n      alert('Error sending reminders. Please try again.');\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} title=\"Send Bulk Reminders\" size=\"lg\">\n      <div className=\"space-y-6\">\n        <div className=\"bg-blue-50 rounded-lg p-4\">\n          <h3 className=\"font-medium mb-2\">Selected Students</h3>\n          <p className=\"text-sm text-gray-600\">\n            Sending reminders to {selectedStudents.length} students with total due amount of ₹\n            {Array.isArray(selectedStudents) ? selectedStudents.reduce((sum, student) => \n              sum + (student.dueFees?.reduce((feeSum, fee) => feeSum + fee.dueAmount, 0) || 0), 0\n            ).toLocaleString() : '0'}\n          </p>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium mb-2\">Reminder Type</label>\n          <div className=\"flex gap-4\">\n            <label className=\"flex items-center gap-2\">\n              <input\n                type=\"radio\"\n                value=\"sms\"\n                checked={reminderType === 'sms'}\n                onChange={(e) => setReminderType(e.target.value)}\n                className=\"rounded\"\n              />\n              <span>SMS</span>\n            </label>\n            <label className=\"flex items-center gap-2\">\n              <input\n                type=\"radio\"\n                value=\"email\"\n                checked={reminderType === 'email'}\n                onChange={(e) => setReminderType(e.target.value)}\n                className=\"rounded\"\n              />\n              <span>Email</span>\n            </label>\n          </div>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium mb-2\">Message Template</label>\n          <textarea\n            value={customMessage || defaultMessages[reminderType]}\n            onChange={(e) => setCustomMessage(e.target.value)}\n            rows={6}\n            className=\"w-full border rounded-lg px-3 py-2\"\n            placeholder=\"Enter custom message or use default template\"\n          />\n          <div className=\"text-xs text-gray-500 mt-1\">\n            Available placeholders: {'{studentName}'}, {'{rollNumber}'}, {'{amount}'}, {'{dueDate}'}\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 border rounded-lg hover:bg-gray-50\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSendReminders}\n            disabled={isSending}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2\"\n          >\n            {isSending ? (\n              <RefreshCw className=\"w-4 h-4 animate-spin\" />\n            ) : (\n              <Mail className=\"w-4 h-4\" />\n            )}\n            {isSending ? 'Sending...' : `Send ${selectedStudents.length} Reminders`}\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nconst SearchDueFees = () => {\n  const [filters, setFilters] = useState({\n    searchTerm: '',\n    classId: '',\n    feeGroupId: '',\n    overdueFilter: 'all',\n    dueDateFrom: '',\n    dueDateTo: '',\n    amountFrom: '',\n    amountTo: ''\n  });\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [showDetailsDialog, setShowDetailsDialog] = useState(false);\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [showBulkReminderDialog, setShowBulkReminderDialog] = useState(false);\n  const [sortBy, setSortBy] = useState('totalDue');\n  const [sortOrder, setSortOrder] = useState('desc');\n\n  const { data: dueFeesData, isLoading, refetch } = useQuery({\n    queryKey: ['due-fees', 'search', filters, sortBy, sortOrder],\n    queryFn: () => feesApi.searchDueFees({ ...filters, sortBy, sortOrder })\n  });\n\n  const handleViewDetails = (student) => {\n    setSelectedStudent(student);\n    setShowDetailsDialog(true);\n  };\n\n  const handleSendReminder = async (student) => {\n    try {\n      await feesApi.sendFeeReminder(student.id);\n      alert('Reminder sent successfully!');\n    } catch (error) {\n      console.error('Error sending reminder:', error);\n      alert('Error sending reminder. Please try again.');\n    }\n  };\n\n  const handleCollectFees = (student) => {\n    // Navigate to collect fees page with student pre-selected\n    window.location.href = `/fees/collect?studentId=${student.id}`;\n  };\n\n  const handleBulkReminders = async (reminderData) => {\n    try {\n      await feesApi.sendBulkReminders(reminderData);\n      alert('Bulk reminders sent successfully!');\n      setSelectedStudents([]);\n    } catch (error) {\n      console.error('Error sending bulk reminders:', error);\n      throw error;\n    }\n  };\n\n  const handleExportData = async () => {\n    try {\n      const exportData = dueFeesData?.data || [];\n      const csvContent = generateCSVContent(exportData);\n      const blob = new Blob([csvContent], { type: 'text/csv' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `due-fees-${new Date().toISOString().split('T')[0]}.csv`;\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Export error:', error);\n      alert('Error exporting data. Please try again.');\n    }\n  };\n\n  const generateCSVContent = (data) => {\n    const headers = [\n      'Student Name',\n      'Roll Number',\n      'Class',\n      'Father Name',\n      'Contact Number',\n      'Total Due',\n      'Overdue Amount',\n      'Pending Items',\n      'Last Payment Date'\n    ];\n\n    const rows = data.map(student => [\n      student.name,\n      student.rollNumber,\n      `${student.className} - ${student.section}`,\n      student.fatherName,\n      student.contactNumber,\n      student.dueFees?.reduce((sum, fee) => sum + fee.dueAmount, 0) || 0,\n      student.dueFees?.reduce((sum, fee) => sum + (fee.isOverdue ? fee.dueAmount : 0), 0) || 0,\n      student.dueFees?.length || 0,\n      student.lastPaymentDate ? new Date(student.lastPaymentDate).toLocaleDateString() : 'Never'\n    ]);\n\n    return [headers, ...rows].map(row => row.join(',')).join('\\n');\n  };\n\n  const toggleStudentSelection = (student) => {\n    setSelectedStudents(prev => {\n      const isSelected = prev.find(s => s.id === student.id);\n      if (isSelected) {\n        return prev.filter(s => s.id !== student.id);\n      } else {\n        return [...prev, student];\n      }\n    });\n  };\n\n  const selectAllStudents = () => {\n    if (selectedStudents.length === dueFeesData?.data?.length) {\n      setSelectedStudents([]);\n    } else {\n      setSelectedStudents(dueFeesData?.data || []);\n    }\n  };\n\n  const getStatistics = () => {\n    const students = dueFeesData?.data || [];\n    const totalDue = Array.isArray(students) ? students.reduce((sum, student) => \n      sum + (student.dueFees?.reduce((feeSum, fee) => feeSum + fee.dueAmount, 0) || 0), 0) : 0;\n    const overdueAmount = Array.isArray(students) ? students.reduce((sum, student) => \n      sum + (student.dueFees?.reduce((feeSum, fee) => feeSum + (fee.isOverdue ? fee.dueAmount : 0), 0) || 0), 0) : 0;\n    const overdueStudents = students.filter(student => \n      student.dueFees?.some(fee => fee.isOverdue)).length;\n\n    return {\n      totalStudents: students.length,\n      totalDue,\n      overdueAmount,\n      overdueStudents\n    };\n  };\n\n  const stats = getStatistics();\n\n  if (isLoading) return <LoadingSkeleton />;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">Search Due Fees</h1>\n        <div className=\"flex gap-2\">\n          {selectedStudents.length > 0 && (\n            <button\n              onClick={() => setShowBulkReminderDialog(true)}\n              className=\"bg-yellow-600 text-white px-4 py-2 rounded-lg hover:bg-yellow-700 flex items-center gap-2\"\n            >\n              <Mail className=\"w-4 h-4\" />\n              Send Reminders ({selectedStudents.length})\n            </button>\n          )}\n          <button\n            onClick={() => refetch()}\n            className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\"\n          >\n            <RefreshCw className=\"w-4 h-4\" />\n            Refresh\n          </button>\n          <button\n            onClick={handleExportData}\n            className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center gap-2\"\n          >\n            <Download className=\"w-4 h-4\" />\n            Export CSV\n          </button>\n        </div>\n      </div>\n\n      {/* Statistics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Users className=\"w-8 h-8 text-blue-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">{stats.totalStudents}</p>\n              <p className=\"text-sm text-gray-600\">Students with Dues</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <DollarSign className=\"w-8 h-8 text-red-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">₹{stats.totalDue.toLocaleString()}</p>\n              <p className=\"text-sm text-gray-600\">Total Due Amount</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <AlertTriangle className=\"w-8 h-8 text-yellow-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">₹{stats.overdueAmount.toLocaleString()}</p>\n              <p className=\"text-sm text-gray-600\">Overdue Amount</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Clock className=\"w-8 h-8 text-red-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">{stats.overdueStudents}</p>\n              <p className=\"text-sm text-gray-600\">Overdue Students</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <DueFeesFilters filters={filters} onFiltersChange={setFilters} />\n\n      {/* Sort and Selection Options */}\n      <div className=\"bg-white rounded-lg shadow p-4\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center gap-4\">\n            <label className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={selectedStudents.length === dueFeesData?.data?.length && dueFeesData?.data?.length > 0}\n                onChange={selectAllStudents}\n                className=\"rounded\"\n              />\n              <span className=\"text-sm font-medium\">Select All</span>\n            </label>\n            <span className=\"text-sm text-gray-500\">\n              {selectedStudents.length} of {dueFeesData?.data?.length || 0} selected\n            </span>\n          </div>\n          <div className=\"flex items-center gap-4\">\n            <span className=\"text-sm font-medium\">Sort by:</span>\n            <select\n              value={sortBy}\n              onChange={(e) => setSortBy(e.target.value)}\n              className=\"border rounded px-3 py-1 text-sm\"\n            >\n              <option value=\"totalDue\">Total Due Amount</option>\n              <option value=\"overdueAmount\">Overdue Amount</option>\n              <option value=\"studentName\">Student Name</option>\n              <option value=\"className\">Class</option>\n            </select>\n            <select\n              value={sortOrder}\n              onChange={(e) => setSortOrder(e.target.value)}\n              className=\"border rounded px-3 py-1 text-sm\"\n            >\n              <option value=\"desc\">Descending</option>\n              <option value=\"asc\">Ascending</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Due Fees List */}\n      <div className=\"space-y-4\">\n        {dueFeesData?.data?.length === 0 ? (\n          <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n            <CheckCircle className=\"w-12 h-12 mx-auto mb-4 text-green-300\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Due Fees Found</h3>\n            <p className=\"text-gray-500\">\n              No students have pending fee payments matching your search criteria.\n            </p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {dueFeesData?.data?.map(student => (\n              <div key={student.id} className=\"relative\">\n                <label className=\"absolute top-4 left-4 z-10\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedStudents.find(s => s.id === student.id) !== undefined}\n                    onChange={() => toggleStudentSelection(student)}\n                    className=\"rounded\"\n                  />\n                </label>\n                <DueFeesCard\n                  student={student}\n                  onViewDetails={handleViewDetails}\n                  onSendReminder={handleSendReminder}\n                  onCollectFees={handleCollectFees}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Student Due Details Dialog */}\n      <StudentDueDetailsDialog\n        student={selectedStudent}\n        open={showDetailsDialog}\n        onClose={() => setShowDetailsDialog(false)}\n      />\n\n      {/* Bulk Reminder Dialog */}\n      <BulkReminderDialog\n        selectedStudents={selectedStudents}\n        open={showBulkReminderDialog}\n        onClose={() => setShowBulkReminderDialog(false)}\n        onSendReminders={handleBulkReminders}\n      />\n    </div>\n  );\n};\n\nexport default SearchDueFees;"
        }
    ]
}