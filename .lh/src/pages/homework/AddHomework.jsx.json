{
    "sourceFile": "src/pages/homework/AddHomework.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1755985212071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755986163505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useState } from 'react'\n+import { useState } from 'react'\n import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'\n import { homeworkApi } from '../../lib/api/homework'\n import Button from '../../components/Button'\n \n"
                },
                {
                    "date": 1755986649571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useState } from 'react'\n-import { useState } from 'react'\n import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'\n import { homeworkApi } from '../../lib/api/homework'\n import Button from '../../components/Button'\n \n"
                },
                {
                    "date": 1755991756173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n       alert('Homework assigned successfully!')\n     },\n     onError: error => {\n       alert(`Failed to assign homework: ${error.message}`)\n-    }\n+    },\n   })\n \n   const resetForm = () => {\n     setFormData({\n@@ -68,9 +68,9 @@\n \n   const handleSubmit = e => {\n     e.preventDefault()\n     const submitData = new FormData()\n-    \n+\n     Object.keys(formData).forEach(key => {\n       if (key === 'attachments') {\n         formData.attachments.forEach(file => {\n           submitData.append('attachments', file)\n@@ -80,22 +80,22 @@\n       }\n     })\n \n     addHomeworkMutation.mutate(submitData)\n-  };\n+  }\n \n   const handleFileChange = e => {\n     const files = Array.from(e.target.files)\n     setFormData(prev => ({ ...prev, attachments: files }))\n-  };\n+  }\n \n   const handleChange = e => {\n     const { name, value, type, checked } = e.target\n     setFormData(prev => ({\n       ...prev,\n       [name]: type === 'checkbox' ? checked : value,\n     }))\n-  };\n+  }\n \n   const getPriorityColor = priority => {\n     switch (priority) {\n       case 'high':\n@@ -460,8 +460,9 @@\n                   <div className=\"font-medium text-sm mb-1\">Description:</div>\n                   <div className=\"text-sm text-gray-700\">\n                     {formData.description}\n                   </div>\n+                </div>\n \n                 {formData.instructions && (\n                   <div className=\"mb-3\">\n                     <div className=\"font-medium text-sm mb-1\">\n@@ -508,7 +509,7 @@\n         </form>\n       </div>\n     </div>\n   )\n-};\n+}\n \n\\ No newline at end of file\n-export default AddHomework\n+export default AddHomework\n"
                }
            ],
            "date": 1755985212071,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react'\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'\nimport { homeworkApi } from '../../lib/api/homework'\nimport Button from '../../components/Button'\n\nconst AddHomework = () => {\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    subject: '',\n    class: '',\n    section: '',\n    assignedDate: new Date().toISOString().split('T')[0],\n    dueDate: '',\n    priority: 'medium',\n    type: 'assignment',\n    attachments: [],\n    instructions: '',\n    maxMarks: '',\n    submissionType: 'file',\n    allowLateSubmission: true,\n    notifyParents: true,\n  })\n\n  const queryClient = useQueryClient()\n\n  const { data: subjects = [] } = useQuery({\n    queryKey: ['subjects'],\n    queryFn: homeworkApi.getSubjects,\n  })\n\n  const { data: classes = [] } = useQuery({\n    queryKey: ['classes'],\n    queryFn: homeworkApi.getClasses,\n  })\n\n  const addHomeworkMutation = useMutation({\n    mutationFn: homeworkApi.addHomework,\n    onSuccess: () => {\n      queryClient.invalidateQueries(['homework'])\n      resetForm()\n      alert('Homework assigned successfully!')\n    },\n    onError: error => {\n      alert(`Failed to assign homework: ${error.message}`)\n    }\n  })\n\n  const resetForm = () => {\n    setFormData({\n      title: '',\n      description: '',\n      subject: '',\n      class: '',\n      section: '',\n      assignedDate: new Date().toISOString().split('T')[0],\n      dueDate: '',\n      priority: 'medium',\n      type: 'assignment',\n      attachments: [],\n      instructions: '',\n      maxMarks: '',\n      submissionType: 'file',\n      allowLateSubmission: true,\n      notifyParents: true,\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    const submitData = new FormData()\n    \n    Object.keys(formData).forEach(key => {\n      if (key === 'attachments') {\n        formData.attachments.forEach(file => {\n          submitData.append('attachments', file)\n        })\n      } else {\n        submitData.append(key, formData[key])\n      }\n    })\n\n    addHomeworkMutation.mutate(submitData)\n  };\n\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files)\n    setFormData(prev => ({ ...prev, attachments: files }))\n  };\n\n  const handleChange = e => {\n    const { name, value, type, checked } = e.target\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value,\n    }))\n  };\n\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'high':\n        return 'border-red-300 bg-red-50'\n      case 'medium':\n        return 'border-yellow-300 bg-yellow-50'\n      case 'low':\n        return 'border-green-300 bg-green-50'\n      default:\n        return 'border-gray-300 bg-gray-50'\n    }\n  }\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"flex items-center gap-3 mb-6\">\n          <span className=\"text-3xl\">📚</span>\n          <h2 className=\"text-2xl font-bold\">Add Homework Assignment</h2>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Basic Information */}\n          <div\n            className={`p-4 rounded-md border-2 ${getPriorityColor(formData.priority)}`}\n          >\n            <h3 className=\"text-lg font-semibold mb-4\">Assignment Details</h3>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium mb-2\">\n                  Assignment Title *\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  value={formData.title}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                  required\n                  placeholder=\"Enter assignment title\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Subject *\n                </label>\n                <select\n                  name=\"subject\"\n                  value={formData.subject}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                  required\n                >\n                  <option value=\"\">Select Subject</option>\n                  {Array.isArray(subjects) &&\n                    subjects.map(subject => (\n                      <option key={subject.id} value={subject.id}>\n                        {subject.name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Class *\n                </label>\n                <select\n                  name=\"class\"\n                  value={formData.class}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                  required\n                >\n                  <option value=\"\">Select Class</option>\n                  {Array.isArray(classes) &&\n                    classes.map(cls => (\n                      <option key={cls.id} value={cls.id}>\n                        {cls.name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Section\n                </label>\n                <select\n                  name=\"section\"\n                  value={formData.section}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                >\n                  <option value=\"\">All Sections</option>\n                  <option value=\"A\">Section A</option>\n                  <option value=\"B\">Section B</option>\n                  <option value=\"C\">Section C</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Assignment Type\n                </label>\n                <select\n                  name=\"type\"\n                  value={formData.type}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                >\n                  <option value=\"assignment\">Assignment</option>\n                  <option value=\"project\">Project</option>\n                  <option value=\"reading\">Reading</option>\n                  <option value=\"practice\">Practice</option>\n                  <option value=\"research\">Research</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Priority\n                </label>\n                <select\n                  name=\"priority\"\n                  value={formData.priority}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                >\n                  <option value=\"low\">Low Priority</option>\n                  <option value=\"medium\">Medium Priority</option>\n                  <option value=\"high\">High Priority</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Assigned Date\n                </label>\n                <input\n                  type=\"date\"\n                  name=\"assignedDate\"\n                  value={formData.assignedDate}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Due Date *\n                </label>\n                <input\n                  type=\"date\"\n                  name=\"dueDate\"\n                  value={formData.dueDate}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Maximum Marks\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"maxMarks\"\n                  value={formData.maxMarks}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                  min=\"0\"\n                  placeholder=\"Enter max marks\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Description and Instructions */}\n          <div className=\"bg-gray-50 p-4 rounded-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">\n              Description & Instructions\n            </h3>\n\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Description *\n                </label>\n                <textarea\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                  rows=\"3\"\n                  required\n                  placeholder=\"Brief description of the assignment\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Detailed Instructions\n                </label>\n                <textarea\n                  name=\"instructions\"\n                  value={formData.instructions}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                  rows=\"5\"\n                  placeholder=\"Detailed instructions for students on how to complete the assignment\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Submission Settings */}\n          <div className=\"bg-blue-50 p-4 rounded-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Submission Settings</h3>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Submission Type\n                </label>\n                <select\n                  name=\"submissionType\"\n                  value={formData.submissionType}\n                  onChange={handleChange}\n                  className=\"w-full p-2 border rounded-md\"\n                >\n                  <option value=\"file\">File Upload</option>\n                  <option value=\"text\">Text Submission</option>\n                  <option value=\"both\">File + Text</option>\n                  <option value=\"offline\">Offline Submission</option>\n                </select>\n              </div>\n\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"allowLateSubmission\"\n                    name=\"allowLateSubmission\"\n                    checked={formData.allowLateSubmission}\n                    onChange={handleChange}\n                    className=\"mr-2\"\n                  />\n                  <label\n                    htmlFor=\"allowLateSubmission\"\n                    className=\"text-sm font-medium\"\n                  >\n                    Allow Late Submission\n                  </label>\n                </div>\n\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"notifyParents\"\n                    name=\"notifyParents\"\n                    checked={formData.notifyParents}\n                    onChange={handleChange}\n                    className=\"mr-2\"\n                  />\n                  <label\n                    htmlFor=\"notifyParents\"\n                    className=\"text-sm font-medium\"\n                  >\n                    Notify Parents\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Attachments */}\n          <div className=\"bg-green-50 p-4 rounded-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Attachments</h3>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Upload Files (Optional)\n              </label>\n              <input\n                type=\"file\"\n                onChange={handleFileChange}\n                className=\"w-full p-2 border rounded-md\"\n                multiple\n                accept=\".pdf,.doc,.docx,.ppt,.pptx,.jpg,.jpeg,.png,.txt\"\n              />\n              <div className=\"text-xs text-gray-600 mt-1\">\n                Supported formats: PDF, DOC, DOCX, PPT, PPTX, JPG, PNG, TXT\n              </div>\n\n              {formData.attachments.length > 0 && (\n                <div className=\"mt-3\">\n                  <div className=\"text-sm font-medium mb-2\">\n                    Selected Files:\n                  </div>\n                  <div className=\"space-y-1\">\n                    {Array.isArray(formData.attachments) &&\n                      formData.attachments.map((file, index) => (\n                        <div\n                          key={index}\n                          className=\"flex items-center gap-2 text-sm bg-white p-2 rounded border\"\n                        >\n                          <span>📎</span>\n                          <span>{file.name}</span>\n                          <span className=\"text-gray-500\">\n                            ({(file.size / 1024 / 1024).toFixed(2)} MB)\n                          </span>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Preview */}\n          {formData.title && (\n            <div className=\"bg-gray-100 p-4 rounded-md\">\n              <h3 className=\"text-lg font-semibold mb-4\">Assignment Preview</h3>\n              <div className=\"bg-white p-4 rounded border\">\n                <div className=\"flex justify-between items-start mb-3\">\n                  <h4 className=\"text-xl font-bold\">{formData.title}</h4>\n                  <span\n                    className={`px-3 py-1 rounded text-sm ${\n                      formData.priority === 'high'\n                        ? 'bg-red-100 text-red-800'\n                        : formData.priority === 'medium'\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-green-100 text-green-800'\n                    }`}\n                  >\n                    {formData.priority.toUpperCase()} PRIORITY\n                  </span>\n                </div>\n\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm mb-3\">\n                  <div>\n                    <span className=\"font-medium\">Subject:</span>{' '}\n                    {formData.subject}\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Class:</span> {formData.class}\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Due:</span> {formData.dueDate}\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Max Marks:</span>{' '}\n                    {formData.maxMarks || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"mb-3\">\n                  <div className=\"font-medium text-sm mb-1\">Description:</div>\n                  <div className=\"text-sm text-gray-700\">\n                    {formData.description}\n                  </div>\n\n                {formData.instructions && (\n                  <div className=\"mb-3\">\n                    <div className=\"font-medium text-sm mb-1\">\n                      Instructions:\n                    </div>\n                    <div className=\"text-sm text-gray-700 whitespace-pre-wrap\">\n                      {formData.instructions}\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"flex gap-4 text-xs text-gray-600\">\n                  <span>📁 Submission: {formData.submissionType}</span>\n                  {formData.allowLateSubmission && (\n                    <span>⏰ Late submission allowed</span>\n                  )}\n                  {formData.notifyParents && (\n                    <span>📧 Parents will be notified</span>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Submit Buttons */}\n          <div className=\"flex gap-4\">\n            <Button\n              type=\"submit\"\n              disabled={addHomeworkMutation.isPending}\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700\"\n            >\n              {addHomeworkMutation.isPending\n                ? 'Assigning...'\n                : 'Assign Homework'}\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={resetForm}\n              className=\"bg-gray-500 text-white px-6 py-2 rounded-md hover:bg-gray-600\"\n            >\n              Reset Form\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n};\n\nexport default AddHomework"
        }
    ]
}