{
    "sourceFile": "src/pages/settings/Preferences.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1756042595698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1756042595698,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react'\nimport { Settings, Bell, Eye, Globe, Moon, Sun, Monitor, Save, Palette } from 'lucide-react'\nimport Button from '../../components/Button'\n\nconst Preferences = () => {\n  const [preferences, setPreferences] = useState({\n    theme: 'light',\n    language: 'en',\n    notifications: {\n      email: true,\n      push: true,\n      sms: false\n    },\n    dashboard: {\n      showStats: true,\n      showRecentActivity: true,\n      defaultView: 'grid'\n    },\n    privacy: {\n      profileVisibility: 'public',\n      showEmail: false,\n      showPhone: false\n    }\n  })\n\n  const handleSave = () => {\n    alert('Preferences saved successfully!')\n  }\n\n  const handleReset = () => {\n    setPreferences({\n      theme: 'light',\n      language: 'en',\n      notifications: { email: true, push: true, sms: false },\n      dashboard: { showStats: true, showRecentActivity: true, defaultView: 'grid' },\n      privacy: { profileVisibility: 'public', showEmail: false, showPhone: false }\n    })\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-3\">\n          <Settings className=\"h-8 w-8 text-blue-600\" />\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">Preferences</h1>\n            <p className=\"text-gray-600\">Customize your experience</p>\n          </div>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button onClick={handleReset} className=\"bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300\">\n            Reset\n          </Button>\n          <Button onClick={handleSave} className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\">\n            <Save className=\"h-4 w-4 mr-2\" />\n            Save Changes\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Appearance */}\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Palette className=\"h-5 w-5 text-blue-600\" />\n            <h3 className=\"text-lg font-semibold\">Appearance</h3>\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Theme</label>\n              <div className=\"grid grid-cols-3 gap-2\">\n                {[\n                  { value: 'light', label: 'Light', icon: Sun },\n                  { value: 'dark', label: 'Dark', icon: Moon },\n                  { value: 'system', label: 'System', icon: Monitor }\n                ].map(({ value, label, icon: Icon }) => (\n                  <button\n                    key={value}\n                    onClick={() => setPreferences({...preferences, theme: value})}\n                    className={`p-3 border rounded-lg flex flex-col items-center gap-2 ${\n                      preferences.theme === value ? 'border-blue-500 bg-blue-50' : 'border-gray-200'\n                    }`}\n                  >\n                    <Icon className=\"h-5 w-5\" />\n                    <span className=\"text-sm\">{label}</span>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Language</label>\n              <select\n                value={preferences.language}\n                onChange={(e) => setPreferences({...preferences, language: e.target.value})}\n                className=\"w-full p-2 border rounded-md\"\n              >\n                <option value=\"en\">English</option>\n                <option value=\"es\">Spanish</option>\n                <option value=\"fr\">French</option>\n                <option value=\"de\">German</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Notifications */}\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Bell className=\"h-5 w-5 text-blue-600\" />\n            <h3 className=\"text-lg font-semibold\">Notifications</h3>\n          </div>\n          \n          <div className=\"space-y-4\">\n            {Object.entries(preferences.notifications).map(([key, value]) => (\n              <div key={key} className=\"flex items-center justify-between\">\n                <span className=\"text-sm font-medium capitalize\">{key} Notifications</span>\n                <label className=\"relative inline-flex items-center cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={value}\n                    onChange={(e) => setPreferences({\n                      ...preferences,\n                      notifications: { ...preferences.notifications, [key]: e.target.checked }\n                    })}\n                    className=\"sr-only peer\"\n                  />\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Dashboard */}\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Monitor className=\"h-5 w-5 text-blue-600\" />\n            <h3 className=\"text-lg font-semibold\">Dashboard</h3>\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Default View</label>\n              <select\n                value={preferences.dashboard.defaultView}\n                onChange={(e) => setPreferences({\n                  ...preferences,\n                  dashboard: { ...preferences.dashboard, defaultView: e.target.value }\n                })}\n                className=\"w-full p-2 border rounded-md\"\n              >\n                <option value=\"grid\">Grid View</option>\n                <option value=\"list\">List View</option>\n                <option value=\"compact\">Compact View</option>\n              </select>\n            </div>\n\n            {['showStats', 'showRecentActivity'].map(key => (\n              <div key={key} className=\"flex items-center justify-between\">\n                <span className=\"text-sm font-medium\">\n                  {key === 'showStats' ? 'Show Statistics' : 'Show Recent Activity'}\n                </span>\n                <label className=\"relative inline-flex items-center cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={preferences.dashboard[key]}\n                    onChange={(e) => setPreferences({\n                      ...preferences,\n                      dashboard: { ...preferences.dashboard, [key]: e.target.checked }\n                    })}\n                    className=\"sr-only peer\"\n                  />\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Privacy */}\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Eye className=\"h-5 w-5 text-blue-600\" />\n            <h3 className=\"text-lg font-semibold\">Privacy</h3>\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Profile Visibility</label>\n              <select\n                value={preferences.privacy.profileVisibility}\n                onChange={(e) => setPreferences({\n                  ...preferences,\n                  privacy: { ...preferences.privacy, profileVisibility: e.target.value }\n                })}\n                className=\"w-full p-2 border rounded-md\"\n              >\n                <option value=\"public\">Public</option>\n                <option value=\"private\">Private</option>\n                <option value=\"friends\">Friends Only</option>\n              </select>\n            </div>\n\n            {['showEmail', 'showPhone'].map(key => (\n              <div key={key} className=\"flex items-center justify-between\">\n                <span className=\"text-sm font-medium\">\n                  {key === 'showEmail' ? 'Show Email' : 'Show Phone Number'}\n                </span>\n                <label className=\"relative inline-flex items-center cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={preferences.privacy[key]}\n                    onChange={(e) => setPreferences({\n                      ...preferences,\n                      privacy: { ...preferences.privacy, [key]: e.target.checked }\n                    })}\n                    className=\"sr-only peer\"\n                  />\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Preferences"
        }
    ]
}