{
    "sourceFile": "src/pages/frontoffice/AdmissionEnquiry.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1755994275309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755994925721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useState } from 'react';\n-import React from 'react';\n import { useForm, Controller } from 'react-hook-form';\n import { zodResolver } from '@hookform/resolvers/zod';\n import { z } from 'zod';\n import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\n@@ -30,9 +29,9 @@\n     Download,\n     GraduationCap\n } from 'lucide-react';\n import Input from '../../components/ui/Input';\n-import Dialog from '../../components/ui/Dialog';\n+import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '../../components/ui/Dialog';\n import Table from '../../components/ui/Table';\n import LoadingSkeleton from '../../components/ui/LoadingSkeleton';\n import ErrorState from '../../components/ui/ErrorState';\n import EmptyState from '../../components/ui/EmptyState';\n"
                },
                {
                    "date": 1755995169573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     GraduationCap\n } from 'lucide-react';\n import Input from '../../components/ui/Input';\n import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '../../components/ui/Dialog';\n-import Table from '../../components/ui/Table';\n+import { Table } from '../../components/ui/Table';\n import LoadingSkeleton from '../../components/ui/LoadingSkeleton';\n import ErrorState from '../../components/ui/ErrorState';\n import EmptyState from '../../components/ui/EmptyState';\n import Dropdown from '../../components/ui/Dropdown';\n"
                },
                {
                    "date": 1755995542204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n import { Table } from '../../components/ui/Table';\n import LoadingSkeleton from '../../components/ui/LoadingSkeleton';\n import ErrorState from '../../components/ui/ErrorState';\n import EmptyState from '../../components/ui/EmptyState';\n-import Dropdown from '../../components/ui/Dropdown';\n+import { Dropdown } from '../../components/ui/Dropdown';\n import { admissionEnquiryApi } from '../../lib/api/admissionEnquiry';\n import { staffApi } from '../../lib/api/staff';\n import { classesApi } from '../../lib/api/classes';\n \n"
                }
            ],
            "date": 1755994275309,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport {\n    Plus,\n    Search,\n    Filter,\n    MoreHorizontal,\n    Edit,\n    Eye,\n    Phone,\n    Mail,\n    Calendar,\n    User,\n    Clock,\n    AlertTriangle,\n    CheckCircle,\n    ArrowRight,\n    Bell,\n    Users,\n    Target,\n    TrendingUp,\n    MessageSquare,\n    FileText,\n    Download,\n    GraduationCap\n} from 'lucide-react';\nimport Input from '../../components/ui/Input';\nimport Dialog from '../../components/ui/Dialog';\nimport Table from '../../components/ui/Table';\nimport LoadingSkeleton from '../../components/ui/LoadingSkeleton';\nimport ErrorState from '../../components/ui/ErrorState';\nimport EmptyState from '../../components/ui/EmptyState';\nimport Dropdown from '../../components/ui/Dropdown';\nimport { admissionEnquiryApi } from '../../lib/api/admissionEnquiry';\nimport { staffApi } from '../../lib/api/staff';\nimport { classesApi } from '../../lib/api/classes';\n\n// Validation Schema\nconst enquirySchema = z.object({\n    studentName: z.string().min(1, 'Student name is required'),\n    parentName: z.string().min(1, 'Parent name is required'),\n    parentMobile: z.string().min(10, 'Valid mobile number is required'),\n    parentEmail: z.string().email('Valid email is required').optional().or(z.literal('')),\n    classInterestedIn: z.string().min(1, 'Class is required'),\n    enquiryDate: z.string().min(1, 'Enquiry date is required'),\n    source: z.enum(['walk_in', 'phone', 'email', 'website', 'referral', 'advertisement'], {\n        required_error: 'Source is required'\n    }),\n    priority: z.enum(['low', 'medium', 'high', 'urgent'], {\n        required_error: 'Priority is required'\n    }),\n    assignedCounselorId: z.string().optional(),\n    notes: z.string().optional(),\n    followUpDate: z.string().optional(),\n    status: z.enum(['new', 'contacted', 'interested', 'visit_scheduled', 'visited', 'application_submitted', 'admitted', 'rejected', 'lost'], {\n        required_error: 'Status is required'\n    })\n});\n\nconst ENQUIRY_STAGES = [\n    { id: 'new', name: 'New Enquiries', color: 'bg-gray-100', textColor: 'text-gray-800' },\n    { id: 'contacted', name: 'Contacted', color: 'bg-blue-100', textColor: 'text-blue-800' },\n    { id: 'interested', name: 'Interested', color: 'bg-yellow-100', textColor: 'text-yellow-800' },\n    { id: 'visit_scheduled', name: 'Visit Scheduled', color: 'bg-purple-100', textColor: 'text-purple-800' },\n    { id: 'visited', name: 'Visited', color: 'bg-orange-100', textColor: 'text-orange-800' },\n    { id: 'application_submitted', name: 'Application Submitted', color: 'bg-indigo-100', textColor: 'text-indigo-800' },\n    { id: 'admitted', name: 'Admitted', color: 'bg-green-100', textColor: 'text-green-800' },\n    { id: 'rejected', name: 'Rejected', color: 'bg-red-100', textColor: 'text-red-800' },\n    { id: 'lost', name: 'Lost', color: 'bg-gray-200', textColor: 'text-gray-600' }\n];\n\nconst EnquiryCard = ({ enquiry, onEdit, onViewDetails }) => {\n    const [{ isDragging }, drag] = useDrag({\n        type: 'enquiry',\n        item: { id: enquiry.id, currentStatus: enquiry.status },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    const getPriorityColor = (priority) => {\n        switch (priority) {\n            case 'urgent': return 'border-l-red-500 bg-red-50';\n            case 'high': return 'border-l-orange-500 bg-orange-50';\n            case 'medium': return 'border-l-yellow-500 bg-yellow-50';\n            default: return 'border-l-gray-500 bg-gray-50';\n        }\n    };\n\n    const isOverdue = enquiry.followUpDate && new Date(enquiry.followUpDate) < new Date();\n\n    return (\n        <div\n            ref={drag}\n            className={`bg-white border-l-4 rounded-lg shadow-sm p-4 mb-3 cursor-move ${getPriorityColor(enquiry.priority)\n                } ${isDragging ? 'opacity-50' : ''}`}\n        >\n            <div className=\"flex justify-between items-start mb-2\">\n                <div>\n                    <h4 className=\"font-medium text-gray-900\">{enquiry.studentName}</h4>\n                    <p className=\"text-sm text-gray-600\">{enquiry.parentName}</p>\n                </div>\n                <div className=\"flex gap-1\">\n                    {isOverdue && (\n                        <AlertTriangle className=\"w-4 h-4 text-red-500\" title=\"Follow-up overdue\" />\n                    )}\n                    <Dropdown\n                        trigger={<MoreHorizontal className=\"w-4 h-4 text-gray-400\" />}\n                        items={[\n                            {\n                                label: 'View Details',\n                                icon: Eye,\n                                onClick: () => onViewDetails(enquiry)\n                            },\n                            {\n                                label: 'Edit',\n                                icon: Edit,\n                                onClick: () => onEdit(enquiry)\n                            },\n                            {\n                                label: 'Call',\n                                icon: Phone,\n                                onClick: () => window.open(`tel:${enquiry.parentMobile}`)\n                            },\n                            {\n                                label: 'Email',\n                                icon: Mail,\n                                onClick: () => window.open(`mailto:${enquiry.parentEmail}`)\n                            }\n                        ]}\n                    />\n                </div>\n            </div>\n\n            <div className=\"space-y-2 text-sm\">\n                <div className=\"flex items-center gap-2\">\n                    <GraduationCap className=\"w-4 h-4 text-gray-400\" />\n                    <span>{enquiry.classInterestedIn}</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                    <Phone className=\"w-4 h-4 text-gray-400\" />\n                    <span>{enquiry.parentMobile}</span>\n                </div>\n                {enquiry.assignedCounselor && (\n                    <div className=\"flex items-center gap-2\">\n                        <User className=\"w-4 h-4 text-gray-400\" />\n                        <span>{enquiry.assignedCounselor.name}</span>\n                    </div>\n                )}\n                {enquiry.followUpDate && (\n                    <div className={`flex items-center gap-2 ${isOverdue ? 'text-red-600' : 'text-gray-600'}`}>\n                        <Calendar className=\"w-4 h-4\" />\n                        <span>Follow-up: {new Date(enquiry.followUpDate).toLocaleDateString()}</span>\n                    </div>\n                )}\n            </div>\n\n            <div className=\"flex justify-between items-center mt-3\">\n                <span className={`px-2 py-1 rounded-full text-xs ${enquiry.priority === 'urgent' ? 'bg-red-100 text-red-800' :\n                    enquiry.priority === 'high' ? 'bg-orange-100 text-orange-800' :\n                        enquiry.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                            'bg-gray-100 text-gray-800'\n                    }`}>\n                    {enquiry.priority?.toUpperCase()}\n                </span>\n                <span className=\"text-xs text-gray-500\">\n                    {new Date(enquiry.enquiryDate).toLocaleDateString()}\n                </span>\n            </div>\n        </div>\n    );\n};\n\nconst KanbanColumn = ({ stage, enquiries, onDrop, onEdit, onViewDetails }) => {\n    const [{ isOver }, drop] = useDrop({\n        accept: 'enquiry',\n        drop: (item) => onDrop(item.id, stage.id),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n        }),\n    });\n\n    return (\n        <div\n            ref={drop}\n            className={`flex-1 min-w-80 ${isOver ? 'bg-blue-50' : 'bg-gray-50'} rounded-lg p-4`}\n        >\n            <div className=\"flex justify-between items-center mb-4\">\n                <div className=\"flex items-center gap-2\">\n                    <h3 className=\"font-medium text-gray-900\">{stage.name}</h3>\n                    <span className=\"bg-gray-200 text-gray-700 text-xs px-2 py-1 rounded-full\">\n                        {enquiries.length}\n                    </span>\n                </div>\n            </div>\n\n            <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n                {Array.isArray(enquiries) && enquiries.map(enquiry => (\n                    <EnquiryCard\n                        key={enquiry.id}\n                        enquiry={enquiry}\n                        onEdit={onEdit}\n                        onViewDetails={onViewDetails}\n                    />\n                ))}\n                {enquiries.length === 0 && (\n                    <div className=\"text-center py-8 text-gray-500\">\n                        <div className=\"w-12 h-12 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-2\">\n                            <Users className=\"w-6 h-6 text-gray-400\" />\n                        </div>\n                        <p className=\"text-sm\">No enquiries</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};"
        }
    ]
}