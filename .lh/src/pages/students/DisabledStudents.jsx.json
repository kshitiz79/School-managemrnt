{
    "sourceFile": "src/pages/students/DisabledStudents.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1755985893080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755986649617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1423 @@\n+import React, { useState } from 'react'\n+import { useForm, Controller } from 'react-hook-form'\n+import { zodResolver } from '@hookform/resolvers/zod'\n+import { z } from 'zod'\n+import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\n+import {\n+  Plus,\n+  Search,\n+  Filter,\n+  MoreHorizontal,\n+  Edit,\n+  Eye,\n+  FileText,\n+  Heart,\n+  Brain,\n+  Wheelchair,\n+  AlertTriangle,\n+  CheckCircle,\n+  Clock,\n+  User,\n+  Calendar,\n+  Download,\n+  Upload,\n+  Save,\n+  History,\n+} from 'lucide-react'\n+import Table from '../../components/ui/Table'\n+import Input from '../../components/ui/Input'\n+import Dialog from '../../components/ui/Dialog'\n+import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n+import ErrorState from '../../components/ui/ErrorState'\n+import EmptyState from '../../components/ui/EmptyState'\n+import Pagination from '../../components/ui/Pagination'\n+import Dropdown from '../../components/ui/Dropdown'\n+import { disabledStudentsApi } from '../../lib/api/disabledStudents'\n+import { studentsApi } from '../../lib/api/students'\n+import { auditLogApi } from '../../lib/api/auditLog'\n+\n+// Validation Schema\n+const disabilityRecordSchema = z.object({\n+  studentId: z.string().min(1, 'Student is required'),\n+  disabilityType: z.enum(\n+    ['physical', 'intellectual', 'sensory', 'multiple', 'other'],\n+    {\n+      required_error: 'Disability type is required',\n+    }\n+  ),\n+  disabilityCategory: z.string().min(1, 'Category is required'),\n+  severityLevel: z.enum(['mild', 'moderate', 'severe', 'profound'], {\n+    required_error: 'Severity level is required',\n+  }),\n+  diagnosisDate: z.string().min(1, 'Diagnosis date is required'),\n+  diagnostician: z.string().min(1, 'Diagnostician is required'),\n+  medicalNotes: z.string().optional(),\n+\n+  // IEP Information\n+  hasIEP: z.boolean().default(false),\n+  iepStartDate: z.string().optional(),\n+  iepEndDate: z.string().optional(),\n+  iepGoals: z.string().optional(),\n+  accommodations: z.string().optional(),\n+  modifications: z.string().optional(),\n+\n+  // Support Services\n+  speechTherapy: z.boolean().default(false),\n+  occupationalTherapy: z.boolean().default(false),\n+  physicalTherapy: z.boolean().default(false),\n+  counseling: z.boolean().default(false),\n+  assistiveTechnology: z.boolean().default(false),\n+\n+  // Additional Information\n+  emergencyProcedures: z.string().optional(),\n+  medicationRequired: z.boolean().default(false),\n+  medicationDetails: z.string().optional(),\n+  parentConsent: z.boolean().default(false),\n+  confidentialityLevel: z.enum(['public', 'restricted', 'confidential'], {\n+    required_error: 'Confidentiality level is required',\n+  }),\n+\n+  isActive: z.boolean().default(true),\n+})\n+\n+const DisabilityStatusBadge = ({ type, severity }) => {\n+  const getTypeColor = type => {\n+    switch (type) {\n+      case 'physical':\n+        return 'bg-blue-100 text-blue-800'\n+      case 'intellectual':\n+        return 'bg-purple-100 text-purple-800'\n+      case 'sensory':\n+        return 'bg-green-100 text-green-800'\n+      case 'multiple':\n+        return 'bg-orange-100 text-orange-800'\n+      default:\n+        return 'bg-gray-100 text-gray-800'\n+    }\n+  }\n+\n+  const getSeverityColor = severity => {\n+    switch (severity) {\n+      case 'mild':\n+        return 'bg-yellow-100 text-yellow-800'\n+      case 'moderate':\n+        return 'bg-orange-100 text-orange-800'\n+      case 'severe':\n+        return 'bg-red-100 text-red-800'\n+      case 'profound':\n+        return 'bg-red-200 text-red-900'\n+      default:\n+        return 'bg-gray-100 text-gray-800'\n+    }\n+  }\n+\n+  return (\n+    <div className=\"flex flex-col gap-1\">\n+      <span className={`px-2 py-1 rounded-full text-xs ${getTypeColor(type)}`}>\n+        {type?.charAt(0).toUpperCase() + type?.slice(1)}\n+      </span>\n+      <span\n+        className={`px-2 py-1 rounded-full text-xs ${getSeverityColor(severity)}`}\n+      >\n+        {severity?.charAt(0).toUpperCase() + severity?.slice(1)}\n+      </span>\n+    </div>\n+  )\n+};\n+\n+const IEPStatusIndicator = ({ hasIEP, startDate, endDate }) => {\n+  if (!hasIEP) {\n+    return <span className=\"text-gray-500 text-sm\">No IEP</span>\n+  }\n+\n+  const now = new Date()\n+  const start = new Date(startDate)\n+  const end = new Date(endDate)\n+  \n+  const isActive = now >= start && now <= end\n+  const isExpired = now > end\n+\n+  return (\n+    <div className=\"flex items-center gap-2\">\n+      {isActive ? (\n+        <CheckCircle className=\"w-4 h-4 text-green-600\" />\n+      ) : isExpired ? (\n+        <AlertTriangle className=\"w-4 h-4 text-red-600\" />\n+      ) : (\n+        <Clock className=\"w-4 h-4 text-yellow-600\" />\n+      )}\n+      <span\n+        className={`text-sm ${\n+          isActive\n+            ? 'text-green-600'\n+            : isExpired\n+              ? 'text-red-600'\n+              : 'text-yellow-600'\n+        }`}\n+      >\n+        {isActive ? 'Active' : isExpired ? 'Expired' : 'Pending'}\n+      </span>\n+    </div>\n+  )\n+};\n+\n+const StudentDetailsDrawer = ({ student, isOpen, onClose }) => {\n+  const [activeTab, setActiveTab] = useState('overview')\n+\n+  if (!student) return null\n+\n+  const tabs = [\n+    { id: 'overview', label: 'Overview', icon: Eye },\n+    { id: 'medical', label: 'Medical', icon: Heart },\n+    { id: 'iep', label: 'IEP', icon: Brain },\n+    { id: 'services', label: 'Services', icon: Wheelchair },\n+    { id: 'history', label: 'History', icon: History },\n+  ];\n+\n+  return (\n+    <Dialog\n+      open={isOpen}\n+      onClose={onClose}\n+      title={`${student.name} - Disability Profile`}\n+      size=\"xl\"\n+    >\n+      <div className=\"space-y-6\">\n+        {/* Student Header */}\n+        <div className=\"flex items-center gap-4 p-4 bg-gray-50 rounded-lg\">\n+          <div className=\"w-16 h-16 rounded-full overflow-hidden bg-gray-200\">\n+            {student.photo ? (\n+              <img\n+                src={student.photo}\n+                alt={student.name}\n+                className=\"w-full h-full object-cover\"\n+              />\n+            ) : (\n+              <div className=\"w-full h-full flex items-center justify-center\">\n+                <User className=\"w-8 h-8 text-gray-400\" />\n+              </div>\n+            )}\n+          </div>\n+          <div>\n+            <h3 className=\"text-xl font-semibold\">{student.name}</h3>\n+            <p className=\"text-gray-600\">\n+              Roll No: {student.rollNumber} | Class: {student.class?.name} -{' '}\n+              {student.section?.name}\n+            </p>\n+            <div className=\"flex gap-2 mt-2\">\n+              <DisabilityStatusBadge\n+                type={student.disabilityType}\n+                severity={student.severityLevel}\n+              />\n+              {student.hasIEP && (\n+                <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">\n+                  IEP Active\n+                </span>\n+              )}\n+            </div>\n+          </div>\n+        </div>\n+\n+        {/* Tab Navigation */}\n+        <div className=\"border-b\">\n+          <nav className=\"flex space-x-8\">\n+            {Array.isArray(tabs) &&\n+              tabs.map(tab => (\n+                <button\n+                  key={tab.id}\n+                  onClick={() => setActiveTab(tab.id)}\n+                  className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2 ${\n+                    activeTab === tab.id\n+                      ? 'border-blue-500 text-blue-600'\n+                      : 'border-transparent text-gray-500 hover:text-gray-700'\n+                  }`}\n+                >\n+                  <tab.icon className=\"w-4 h-4\" />\n+                  {tab.label}\n+                </button>\n+              ))}\n+          </nav>\n+        </div>\n+\n+        {/* Tab Content */}\n+        <div className=\"min-h-96\">\n+          {activeTab === 'overview' && (\n+            <div className=\"space-y-6\">\n+              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n+                <div>\n+                  <h4 className=\"font-medium mb-3\">Disability Information</h4>\n+                  <div className=\"space-y-2 text-sm\">\n+                    <div className=\"flex justify-between\">\n+                      <span className=\"text-gray-600\">Type:</span>\n+                      <span className=\"capitalize\">\n+                        {student.disabilityType}\n+                      </span>\n+                    </div>\n+                    <div className=\"flex justify-between\">\n+                      <span className=\"text-gray-600\">Category:</span>\n+                      <span>{student.disabilityCategory}</span>\n+                    </div>\n+                    <div className=\"flex justify-between\">\n+                      <span className=\"text-gray-600\">Severity:</span>\n+                      <span className=\"capitalize\">\n+                        {student.severityLevel}\n+                      </span>\n+                    </div>\n+                    <div className=\"flex justify-between\">\n+                      <span className=\"text-gray-600\">Diagnosis Date:</span>\n+                      <span>\n+                        {new Date(student.diagnosisDate).toLocaleDateString()}\n+                      </span>\n+                    </div>\n+                    <div className=\"flex justify-between\">\n+                      <span className=\"text-gray-600\">Diagnostician:</span>\n+                      <span>{student.diagnostician}</span>\n+                    </div>\n+                  </div>\n+                </div>\n+                <div>\n+                  <h4 className=\"font-medium mb-3\">Support Services</h4>\n+                  <div className=\"space-y-2 text-sm\">\n+                    {[\n+                      { key: 'speechTherapy', label: 'Speech Therapy' },\n+                      {\n+                        key: 'occupationalTherapy',\n+                        label: 'Occupational Therapy',\n+                      },\n+                      { key: 'physicalTherapy', label: 'Physical Therapy' },\n+                      { key: 'counseling', label: 'Counseling' },\n+                      {\n+                        key: 'assistiveTechnology',\n+                        label: 'Assistive Technology',\n+                      },\n+                    ].map(service => (\n+                      <div key={service.key} className=\"flex justify-between\">\n+                        <span className=\"text-gray-600\">{service.label}:</span>\n+                        <span\n+                          className={\n+                            student[service.key]\n+                              ? 'text-green-600'\n+                              : 'text-gray-400'\n+                          }\n+                        >\n+                          {student[service.key] ? 'Yes' : 'No'}\n+                        </span>\n+                      </div>\n+                    ))}\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          )}\n+\n+          {activeTab === 'medical' && (\n+            <div className=\"space-y-4\">\n+              <div>\n+                <h4 className=\"font-medium mb-2\">Medical Notes</h4>\n+                <div className=\"bg-gray-50 p-4 rounded-lg\">\n+                  <p className=\"text-sm text-gray-700\">\n+                    {student.medicalNotes || 'No medical notes available'}\n+                  </p>\n+                </div>\n+              </div>\n+\n+              {student.medicationRequired && (\n+                <div>\n+                  <h4 className=\"font-medium mb-2\">Medication Details</h4>\n+                  <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200\">\n+                    <p className=\"text-sm text-yellow-800\">\n+                      {student.medicationDetails ||\n+                        'Medication required - details not specified'}\n+                    </p>\n+                  </div>\n+                </div>\n+              )}\n+\n+              {student.emergencyProcedures && (\n+                <div>\n+                  <h4 className=\"font-medium mb-2\">Emergency Procedures</h4>\n+                  <div className=\"bg-red-50 p-4 rounded-lg border border-red-200\">\n+                    <p className=\"text-sm text-red-800\">\n+                      {student.emergencyProcedures}\n+                    </p>\n+                  </div>\n+                </div>\n+              )}\n+            </div>\n+          )}\n+\n+          {activeTab === 'iep' && (\n+            <div className=\"space-y-4\">\n+              {student.hasIEP ? (\n+                <>\n+                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n+                    <div>\n+                      <h4 className=\"font-medium mb-2\">IEP Period</h4>\n+                      <div className=\"text-sm space-y-1\">\n+                        <p>\n+                          <span className=\"text-gray-600\">Start Date:</span>{' '}\n+                          {new Date(student.iepStartDate).toLocaleDateString()}\n+                        </p>\n+                        <p>\n+                          <span className=\"text-gray-600\">End Date:</span>{' '}\n+                          {new Date(student.iepEndDate).toLocaleDateString()}\n+                        </p>\n+                        <IEPStatusIndicator\n+                          hasIEP={student.hasIEP}\n+                          startDate={student.iepStartDate}\n+                          endDate={student.iepEndDate}\n+                        />\n+                      </div>\n+                    </div>\n+                  </div>\n+\n+                  <div>\n+                    <h4 className=\"font-medium mb-2\">IEP Goals</h4>\n+                    <div className=\"bg-blue-50 p-4 rounded-lg\">\n+                      <p className=\"text-sm text-blue-800\">\n+                        {student.iepGoals || 'No IEP goals specified'}\n+                      </p>\n+                    </div>\n+                  </div>\n+\n+                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n+                    <div>\n+                      <h4 className=\"font-medium mb-2\">Accommodations</h4>\n+                      <div className=\"bg-green-50 p-4 rounded-lg\">\n+                        <p className=\"text-sm text-green-800\">\n+                          {student.accommodations ||\n+                            'No accommodations specified'}\n+                        </p>\n+                      </div>\n+                    </div>\n+                    <div>\n+                      <h4 className=\"font-medium mb-2\">Modifications</h4>\n+                      <div className=\"bg-purple-50 p-4 rounded-lg\">\n+                        <p className=\"text-sm text-purple-800\">\n+                          {student.modifications ||\n+                            'No modifications specified'}\n+                        </p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </>\n+              ) : (\n+                <div className=\"text-center py-8\">\n+                  <Brain className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n+                  <p className=\"text-gray-500\">\n+                    No IEP on file for this student\n+                  </p>\n+                </div>\n+              )}\n+            </div>\n+          )}\n+\n+          {activeTab === 'services' && (\n+            <div className=\"space-y-4\">\n+              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n+                {[\n+                  { key: 'speechTherapy', label: 'Speech Therapy', icon: '🗣️' },\n+                  {\n+                    key: 'occupationalTherapy',\n+                    label: 'Occupational Therapy',\n+                    icon: '🖐️',\n+                  },\n+                  {\n+                    key: 'physicalTherapy',\n+                    label: 'Physical Therapy',\n+                    icon: '🏃',\n+                  },\n+                  { key: 'counseling', label: 'Counseling', icon: '💭' },\n+                  {\n+                    key: 'assistiveTechnology',\n+                    label: 'Assistive Technology',\n+                    icon: '💻',\n+                  },\n+                ].map(service => (\n+                  <div\n+                    key={service.key}\n+                    className={`p-4 rounded-lg border-2 ${\n+                      student[service.key]\n+                        ? 'border-green-200 bg-green-50'\n+                        : 'border-gray-200 bg-gray-50'\n+                    }`}\n+                  >\n+                    <div className=\"flex items-center gap-3\">\n+                      <span className=\"text-2xl\">{service.icon}</span>\n+                      <div>\n+                        <h5 className=\"font-medium\">{service.label}</h5>\n+                        <p\n+                          className={`text-sm ${\n+                            student[service.key]\n+                              ? 'text-green-600'\n+                              : 'text-gray-500'\n+                          }`}\n+                        >\n+                          {student[service.key] ? 'Active' : 'Not Required'}\n+                        </p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                ))}\n+              </div>\n+            </div>\n+          )}\n+\n+          {activeTab === 'history' && (\n+            <AuditLogViewer\n+              entityType=\"disabled_student\"\n+              entityId={student.id}\n+            />\n+          )}\n+        </div>\n+\n+        <div className=\"flex justify-end gap-2 pt-4 border-t\">\n+          <button\n+            onClick={onClose}\n+            className=\"border px-4 py-2 rounded-lg hover:bg-gray-50\"\n+          >\n+            Close\n+          </button>\n+          <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\">\n+            <Edit className=\"w-4 h-4\" />\n+            Edit Profile\n+          </button>\n+        </div>\n+      </div>\n+    </Dialog>\n+  )\n+};\n+\n+const AuditLogViewer = ({ entityType, entityId }) => {\n+  const { data: auditLogs, isLoading } = useQuery({\n+    queryKey: ['auditLog', entityType, entityId],\n+    queryFn: () => auditLogApi.getEntityLogs(entityType, entityId),\n+  })\n+\n+  if (isLoading) return <LoadingSkeleton />\n+\n+  return (\n+    <div className=\"space-y-4\">\n+      {auditLogs?.data?.length > 0 ? (\n+        <div className=\"space-y-3\">\n+          {Array.isArray(auditLogs.data) &&\n+            auditLogs.data.map((log, index) => (\n+              <div key={index} className=\"border rounded-lg p-4\">\n+                <div className=\"flex justify-between items-start mb-2\">\n+                  <div>\n+                    <p className=\"font-medium\">{log.action}</p>\n+                    <p className=\"text-sm text-gray-600\">\n+                      By {log.performedBy} on{' '}\n+                      {new Date(log.timestamp).toLocaleString()}\n+                    </p>\n+                  </div>\n+                  <span\n+                    className={`px-2 py-1 rounded-full text-xs ${\n+                      log.severity === 'high'\n+                        ? 'bg-red-100 text-red-800'\n+                        : log.severity === 'medium'\n+                          ? 'bg-yellow-100 text-yellow-800'\n+                          : 'bg-green-100 text-green-800'\n+                    }`}\n+                  >\n+                    {log.severity}\n+                  </span>\n+                </div>\n+                {log.details && (\n+                  <div className=\"text-sm text-gray-700 bg-gray-50 p-2 rounded\">\n+                    {log.details}\n+                  </div>\n+                )}\n+              </div>\n+            ))}\n+        </div>\n+      ) : (\n+        <div className=\"text-center py-8 text-gray-500\">\n+          <History className=\"w-12 h-12 mx-auto mb-2 text-gray-300\" />\n+          <p>No audit logs available</p>\n+        </div>\n+      )}\n+    </div>\n+  )\n+};\n+\n+const DisabledStudents = () => {\n+  const [searchTerm, setSearchTerm] = useState('')\n+  const [disabilityTypeFilter, setDisabilityTypeFilter] = useState('')\n+  const [severityFilter, setSeverityFilter] = useState('')\n+  const [iepFilter, setIepFilter] = useState('')\n+  const [currentPage, setCurrentPage] = useState(1)\n+  const [pageSize] = useState(10)\n+  const [showCreateDialog, setShowCreateDialog] = useState(false)\n+  const [showEditDialog, setShowEditDialog] = useState(false)\n+  const [selectedStudent, setSelectedStudent] = useState(null)\n+  const [showDetailsDrawer, setShowDetailsDrawer] = useState(false)\n+\n+  const queryClient = useQueryClient()\n+\n+  const {\n+    control,\n+    handleSubmit,\n+    reset,\n+    watch,\n+    formState: { errors },\n+  } = useForm({\n+    resolver: zodResolver(disabilityRecordSchema),\n+    mode: 'onChange',\n+    defaultValues: {\n+      hasIEP: false,\n+      medicationRequired: false,\n+      parentConsent: false,\n+      confidentialityLevel: 'restricted',\n+      isActive: true,\n+    }\n+  })\n+\n+  const hasIEP = watch('hasIEP')\n+  const medicationRequired = watch('medicationRequired')\n+\n+  const {\n+    data: disabledStudentsData,\n+    isLoading,\n+    error,\n+  } = useQuery({\n+    queryKey: [\n+      'disabledStudents',\n+      {\n+        page: currentPage,\n+        pageSize,\n+        search: searchTerm,\n+        disabilityType: disabilityTypeFilter,\n+        severity: severityFilter,\n+        hasIEP: iepFilter,\n+      },\n+    ],\n+    queryFn: () =>\n+      disabledStudentsApi.getAll({\n+        page: currentPage,\n+        pageSize,\n+        search: searchTerm,\n+        disabilityType: disabilityTypeFilter,\n+        severity: severityFilter,\n+        hasIEP: iepFilter,\n+      }),\n+  })\n+\n+  const { data: studentsData } = useQuery({\n+    queryKey: ['students', 'available'],\n+    queryFn: () => studentsApi.getAvailableForDisability(),\n+  })\n+\n+  const createMutation = useMutation({\n+    mutationFn: disabledStudentsApi.create,\n+    onSuccess: () => {\n+      queryClient.invalidateQueries(['disabledStudents'])\n+      setShowCreateDialog(false)\n+      reset()\n+      // Log audit entry\n+      auditLogApi.log({\n+        action: 'CREATE_DISABILITY_RECORD',\n+        entityType: 'disabled_student',\n+        severity: 'medium',\n+        details: 'New disability record created',\n+      })\n+    },\n+  })\n+\n+  const updateMutation = useMutation({\n+    mutationFn: ({ id, data }) => disabledStudentsApi.update(id, data),\n+    onSuccess: () => {\n+      queryClient.invalidateQueries(['disabledStudents'])\n+      setShowEditDialog(false)\n+      reset()\n+      // Log audit entry\n+      auditLogApi.log({\n+        action: 'UPDATE_DISABILITY_RECORD',\n+        entityType: 'disabled_student',\n+        entityId: selectedStudent?.id,\n+        severity: 'medium',\n+        details: 'Disability record updated',\n+      })\n+    },\n+  })\n+\n+  const handleEdit = student => {\n+    setSelectedStudent(student)\n+    reset({\n+      studentId: student.studentId,\n+      disabilityType: student.disabilityType,\n+      disabilityCategory: student.disabilityCategory,\n+      severityLevel: student.severityLevel,\n+      diagnosisDate: student.diagnosisDate?.split('T')[0],\n+      diagnostician: student.diagnostician,\n+      medicalNotes: student.medicalNotes || '',\n+      hasIEP: student.hasIEP,\n+      iepStartDate: student.iepStartDate?.split('T')[0] || '',\n+      iepEndDate: student.iepEndDate?.split('T')[0] || '',\n+      iepGoals: student.iepGoals || '',\n+      accommodations: student.accommodations || '',\n+      modifications: student.modifications || '',\n+      speechTherapy: student.speechTherapy,\n+      occupationalTherapy: student.occupationalTherapy,\n+      physicalTherapy: student.physicalTherapy,\n+      counseling: student.counseling,\n+      assistiveTechnology: student.assistiveTechnology,\n+      emergencyProcedures: student.emergencyProcedures || '',\n+      medicationRequired: student.medicationRequired,\n+      medicationDetails: student.medicationDetails || '',\n+      parentConsent: student.parentConsent,\n+      confidentialityLevel: student.confidentialityLevel,\n+      isActive: student.isActive,\n+    })\n+    setShowEditDialog(true)\n+  };\n+\n+  const handleViewDetails = student => {\n+    setSelectedStudent(student)\n+    setShowDetailsDrawer(true)\n+  };\n+\n+  const onSubmit = data => {\n+    if (selectedStudent) {\n+      updateMutation.mutate({ id: selectedStudent.id, data })\n+    } else {\n+      createMutation.mutate(data)\n+    }\n+  }\n+\n+  const columns = [\n+    {\n+      key: 'student',\n+      header: 'Student',\n+      render: item => (\n+        <div className=\"flex items-center gap-3\">\n+          <div className=\"w-10 h-10 rounded-full overflow-hidden bg-gray-200\">\n+            {item.student?.photo ? (\n+              <img\n+                src={item.student.photo}\n+                alt={item.student.name}\n+                className=\"w-full h-full object-cover\"\n+              />\n+            ) : (\n+              <div className=\"w-full h-full flex items-center justify-center\">\n+                <User className=\"w-5 h-5 text-gray-400\" />\n+              </div>\n+            )}\n+          </div>\n+          <div>\n+            <p className=\"font-medium\">{item.student?.name}</p>\n+            <p className=\"text-sm text-gray-500\">\n+              {item.student?.rollNumber} | {item.student?.class?.name}-\n+              {item.student?.section?.name}\n+            </p>\n+          </div>\n+        </div>\n+      ),\n+    },\n+    {\n+      key: 'disability',\n+      header: 'Disability',\n+      render: item => (\n+        <DisabilityStatusBadge\n+          type={item.disabilityType}\n+          severity={item.severityLevel}\n+        />\n+      ),\n+    },\n+    { key: 'disabilityCategory', header: 'Category' },\n+    {\n+      key: 'iep',\n+      header: 'IEP Status',\n+      render: item => (\n+        <IEPStatusIndicator\n+          hasIEP={item.hasIEP}\n+          startDate={item.iepStartDate}\n+          endDate={item.iepEndDate}\n+        />\n+      ),\n+    },\n+    {\n+      key: 'services',\n+      header: 'Services',\n+      render: item => {\n+        const services = [\n+          item.speechTherapy && 'Speech',\n+          item.occupationalTherapy && 'OT',\n+          item.physicalTherapy && 'PT',\n+          item.counseling && 'Counseling',\n+          item.assistiveTechnology && 'AT',\n+        ].filter(Boolean)\n+        \n+        return (\n+          <div className=\"text-sm\">\n+            {services.length > 0 ? services.join(', ') : 'None'}\n+          </div>\n+        )\n+      }\n+    },\n+    {\n+      key: 'confidentiality',\n+      header: 'Access Level',\n+      render: item => (\n+        <span\n+          className={`px-2 py-1 rounded-full text-xs ${\n+            item.confidentialityLevel === 'public'\n+              ? 'bg-green-100 text-green-800'\n+              : item.confidentialityLevel === 'restricted'\n+                ? 'bg-yellow-100 text-yellow-800'\n+                : 'bg-red-100 text-red-800'\n+          }`}\n+        >\n+          {item.confidentialityLevel?.charAt(0).toUpperCase() +\n+            item.confidentialityLevel?.slice(1)}\n+        </span>\n+      ),\n+    },\n+    {\n+      key: 'actions',\n+      header: 'Actions',\n+      render: item => (\n+        <Dropdown\n+          trigger={<MoreHorizontal className=\"w-4 h-4\" />}\n+          items={[\n+            {\n+              label: 'View Details',\n+              icon: Eye,\n+              onClick: () => handleViewDetails(item),\n+            },\n+            {\n+              label: 'Edit Record',\n+              icon: Edit,\n+              onClick: () => handleEdit(item),\n+            },\n+            {\n+              label: 'Medical Notes',\n+              icon: Heart,\n+              onClick: () => console.log('View medical notes for', item.id),\n+            },\n+            {\n+              label: 'IEP Document',\n+              icon: FileText,\n+              onClick: () => console.log('View IEP for', item.id),\n+              disabled: !item.hasIEP,\n+            }\n+          ]}\n+        />\n+      ),\n+    }\n+  ]\n+\n+  if (isLoading) return <LoadingSkeleton />\n+  if (error)\n+    return <ErrorState message=\"Failed to load disabled students data\" />\n+\n+  return (\n+    <div className=\"space-y-6\">\n+      <div className=\"flex justify-between items-center\">\n+        <h1 className=\"text-2xl font-bold\">Students with Disabilities</h1>\n+        <div className=\"flex gap-2\">\n+          <button className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n+            <Download className=\"w-4 h-4\" />\n+            Export Report\n+          </button>\n+          <button\n+            onClick={() => {\n+              reset()\n+              setSelectedStudent(null)\n+              setShowCreateDialog(true)\n+            }}\n+            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center gap-2 hover:bg-blue-700\"\n+          >\n+            <Plus className=\"w-4 h-4\" />\n+            Add Record\n+          </button>\n+        </div>\n+      </div>\n+\n+      {/* Statistics Cards */}\n+      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n+        <div className=\"bg-white p-4 rounded-lg shadow\">\n+          <div className=\"flex items-center gap-3\">\n+            <Wheelchair className=\"w-8 h-8 text-blue-600\" />\n+            <div>\n+              <p className=\"text-2xl font-bold\">\n+                {disabledStudentsData?.total || 0}\n+              </p>\n+              <p className=\"text-sm text-gray-600\">Total Students</p>\n+            </div>\n+          </div>\n+        </div>\n+        <div className=\"bg-white p-4 rounded-lg shadow\">\n+          <div className=\"flex items-center gap-3\">\n+            <Brain className=\"w-8 h-8 text-purple-600\" />\n+            <div>\n+              <p className=\"text-2xl font-bold\">\n+                {disabledStudentsData?.data?.filter(s => s.hasIEP).length || 0}\n+              </p>\n+              <p className=\"text-sm text-gray-600\">Active IEPs</p>\n+            </div>\n+          </div>\n+        </div>\n+        <div className=\"bg-white p-4 rounded-lg shadow\">\n+          <div className=\"flex items-center gap-3\">\n+            <Heart className=\"w-8 h-8 text-red-600\" />\n+            <div>\n+              <p className=\"text-2xl font-bold\">\n+                {disabledStudentsData?.data?.filter(s => s.medicationRequired)\n+                  .length || 0}\n+              </p>\n+              <p className=\"text-sm text-gray-600\">Require Medication</p>\n+            </div>\n+          </div>\n+        </div>\n+        <div className=\"bg-white p-4 rounded-lg shadow\">\n+          <div className=\"flex items-center gap-3\">\n+            <AlertTriangle className=\"w-8 h-8 text-yellow-600\" />\n+            <div>\n+              <p className=\"text-2xl font-bold\">\n+                {disabledStudentsData?.data?.filter(s => s.emergencyProcedures)\n+                  .length || 0}\n+              </p>\n+              <p className=\"text-sm text-gray-600\">Emergency Protocols</p>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Filters */}\n+      <div className=\"bg-white rounded-lg shadow p-6\">\n+        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n+          <div className=\"md:col-span-2\">\n+            <Input\n+              placeholder=\"Search students...\"\n+              value={searchTerm}\n+              onChange={e => setSearchTerm(e.target.value)}\n+              icon={Search}\n+            />\n+          </div>\n+          <div>\n+            <select\n+              value={disabilityTypeFilter}\n+              onChange={e => setDisabilityTypeFilter(e.target.value)}\n+              className=\"w-full border rounded-lg px-3 py-2\"\n+            >\n+              <option value=\"\">All Types</option>\n+              <option value=\"physical\">Physical</option>\n+              <option value=\"intellectual\">Intellectual</option>\n+              <option value=\"sensory\">Sensory</option>\n+              <option value=\"multiple\">Multiple</option>\n+              <option value=\"other\">Other</option>\n+            </select>\n+          </div>\n+          <div>\n+            <select\n+              value={severityFilter}\n+              onChange={e => setSeverityFilter(e.target.value)}\n+              className=\"w-full border rounded-lg px-3 py-2\"\n+            >\n+              <option value=\"\">All Severities</option>\n+              <option value=\"mild\">Mild</option>\n+              <option value=\"moderate\">Moderate</option>\n+              <option value=\"severe\">Severe</option>\n+              <option value=\"profound\">Profound</option>\n+            </select>\n+          </div>\n+          <div>\n+            <select\n+              value={iepFilter}\n+              onChange={e => setIepFilter(e.target.value)}\n+              className=\"w-full border rounded-lg px-3 py-2\"\n+            >\n+              <option value=\"\">All IEP Status</option>\n+              <option value=\"true\">Has IEP</option>\n+              <option value=\"false\">No IEP</option>\n+            </select>\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Students Table */}\n+      <div className=\"bg-white rounded-lg shadow\">\n+        {disabledStudentsData?.data?.length === 0 ? (\n+          <EmptyState\n+            title=\"No disability records found\"\n+            description=\"No students match your current filters\"\n+            action={{\n+              label: 'Add Record',\n+              onClick: () => setShowCreateDialog(true),\n+            }}\n+          />\n+        ) : (\n+          <>\n+            <Table data={disabledStudentsData?.data || []} columns={columns} />\n+            <div className=\"p-6 border-t\">\n+              <Pagination\n+                currentPage={currentPage}\n+                totalPages={Math.ceil(\n+                  (disabledStudentsData?.total || 0) / pageSize\n+                )}\n+                onPageChange={setCurrentPage}\n+              />\n+            </div>\n+          </>\n+        )}\n+      </div>\n+\n+      {/* Create/Edit Dialog */}\n+      <Dialog\n+        open={showCreateDialog || showEditDialog}\n+        onClose={() => {\n+          setShowCreateDialog(false)\n+          setShowEditDialog(false)\n+          reset()\n+          setSelectedStudent(null)\n+        }}\n+        title={\n+          selectedStudent ? 'Edit Disability Record' : 'Add Disability Record'\n+        }\n+        size=\"xl\"\n+      >\n+        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n+          {/* Student Selection */}\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n+            <Controller\n+              name=\"studentId\"\n+              control={control}\n+              render={({ field }) => (\n+                <div>\n+                  <label className=\"block text-sm font-medium mb-1\">\n+                    Student *\n+                  </label>\n+                  <select\n+                    {...field}\n+                    disabled={!!selectedStudent}\n+                    className={`w-full border rounded-lg px-3 py-2 ${\n+                      errors.studentId ? 'border-red-500' : ''\n+                    } ${selectedStudent ? 'bg-gray-100' : ''}`}\n+                  >\n+                    <option value=\"\">Select Student</option>\n+                    {Array.isArray(studentsData?.data) &&\n+                      studentsData.data.map(student => (\n+                        <option key={student.id} value={student.id}>\n+                          {student.name} - {student.rollNumber}\n+                        </option>\n+                      ))}\n+                  </select>\n+                  {errors.studentId && (\n+                    <p className=\"text-red-500 text-sm mt-1\">\n+                      {errors.studentId.message}\n+                    </p>\n+                  )}\n+                </div>\n+              )}\n+            />\n+            <Controller\n+              name=\"confidentialityLevel\"\n+              control={control}\n+              render={({ field }) => (\n+                <div>\n+                  <label className=\"block text-sm font-medium mb-1\">\n+                    Confidentiality Level *\n+                  </label>\n+                  <select\n+                    {...field}\n+                    className={`w-full border rounded-lg px-3 py-2 ${\n+                      errors.confidentialityLevel ? 'border-red-500' : ''\n+                    }`}\n+                  >\n+                    <option value=\"public\">Public</option>\n+                    <option value=\"restricted\">Restricted</option>\n+                    <option value=\"confidential\">Confidential</option>\n+                  </select>\n+                  {errors.confidentialityLevel && (\n+                    <p className=\"text-red-500 text-sm mt-1\">\n+                      {errors.confidentialityLevel.message}\n+                    </p>\n+                  )}\n+                </div>\n+              )}\n+            />\n+          </div>\n+\n+          {/* Disability Information */}\n+          <div className=\"space-y-4\">\n+            <h3 className=\"text-lg font-medium border-b pb-2\">\n+              Disability Information\n+            </h3>\n+            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n+              <Controller\n+                name=\"disabilityType\"\n+                control={control}\n+                render={({ field }) => (\n+                  <div>\n+                    <label className=\"block text-sm font-medium mb-1\">\n+                      Disability Type *\n+                    </label>\n+                    <select\n+                      {...field}\n+                      className={`w-full border rounded-lg px-3 py-2 ${\n+                        errors.disabilityType ? 'border-red-500' : ''\n+                      }`}\n+                    >\n+                      <option value=\"\">Select Type</option>\n+                      <option value=\"physical\">Physical</option>\n+                      <option value=\"intellectual\">Intellectual</option>\n+                      <option value=\"sensory\">Sensory</option>\n+                      <option value=\"multiple\">Multiple</option>\n+                      <option value=\"other\">Other</option>\n+                    </select>\n+                    {errors.disabilityType && (\n+                      <p className=\"text-red-500 text-sm mt-1\">\n+                        {errors.disabilityType.message}\n+                      </p>\n+                    )}\n+                  </div>\n+                )}\n+              />\n+              <Controller\n+                name=\"severityLevel\"\n+                control={control}\n+                render={({ field }) => (\n+                  <div>\n+                    <label className=\"block text-sm font-medium mb-1\">\n+                      Severity Level *\n+                    </label>\n+                    <select\n+                      {...field}\n+                      className={`w-full border rounded-lg px-3 py-2 ${\n+                        errors.severityLevel ? 'border-red-500' : ''\n+                      }`}\n+                    >\n+                      <option value=\"\">Select Severity</option>\n+                      <option value=\"mild\">Mild</option>\n+                      <option value=\"moderate\">Moderate</option>\n+                      <option value=\"severe\">Severe</option>\n+                      <option value=\"profound\">Profound</option>\n+                    </select>\n+                    {errors.severityLevel && (\n+                      <p className=\"text-red-500 text-sm mt-1\">\n+                        {errors.severityLevel.message}\n+                      </p>\n+                    )}\n+                  </div>\n+                )}\n+              />\n+            </div>\n+\n+            <Controller\n+              name=\"disabilityCategory\"\n+              control={control}\n+              render={({ field }) => (\n+                <Input\n+                  label=\"Disability Category *\"\n+                  {...field}\n+                  error={errors.disabilityCategory?.message}\n+                  placeholder=\"e.g., Autism Spectrum Disorder, Cerebral Palsy, etc.\"\n+                />\n+              )}\n+            />\n+\n+            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n+              <Controller\n+                name=\"diagnosisDate\"\n+                control={control}\n+                render={({ field }) => (\n+                  <Input\n+                    label=\"Diagnosis Date *\"\n+                    type=\"date\"\n+                    {...field}\n+                    error={errors.diagnosisDate?.message}\n+                  />\n+                )}\n+              />\n+              <Controller\n+                name=\"diagnostician\"\n+                control={control}\n+                render={({ field }) => (\n+                  <Input\n+                    label=\"Diagnostician *\"\n+                    {...field}\n+                    error={errors.diagnostician?.message}\n+                    placeholder=\"Doctor/Professional who made the diagnosis\"\n+                  />\n+                )}\n+              />\n+            </div>\n+\n+            <Controller\n+              name=\"medicalNotes\"\n+              control={control}\n+              render={({ field }) => (\n+                <Input\n+                  label=\"Medical Notes\"\n+                  multiline\n+                  rows={3}\n+                  {...field}\n+                  error={errors.medicalNotes?.message}\n+                  placeholder=\"Additional medical information, conditions, etc.\"\n+                />\n+              )}\n+            />\n+          </div>\n+\n+          {/* IEP Information */}\n+          <div className=\"space-y-4\">\n+            <h3 className=\"text-lg font-medium border-b pb-2\">\n+              IEP Information\n+            </h3>\n+            <Controller\n+              name=\"hasIEP\"\n+              control={control}\n+              render={({ field }) => (\n+                <label className=\"flex items-center gap-2\">\n+                  <input\n+                    type=\"checkbox\"\n+                    checked={field.value}\n+                    onChange={field.onChange}\n+                  />\n+                  <span>Student has an Individual Education Plan (IEP)</span>\n+                </label>\n+              )}\n+            />\n+\n+            {hasIEP && (\n+              <>\n+                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n+                  <Controller\n+                    name=\"iepStartDate\"\n+                    control={control}\n+                    render={({ field }) => (\n+                      <Input\n+                        label=\"IEP Start Date\"\n+                        type=\"date\"\n+                        {...field}\n+                        error={errors.iepStartDate?.message}\n+                      />\n+                    )}\n+                  />\n+                  <Controller\n+                    name=\"iepEndDate\"\n+                    control={control}\n+                    render={({ field }) => (\n+                      <Input\n+                        label=\"IEP End Date\"\n+                        type=\"date\"\n+                        {...field}\n+                        error={errors.iepEndDate?.message}\n+                      />\n+                    )}\n+                  />\n+                </div>\n+\n+                <Controller\n+                  name=\"iepGoals\"\n+                  control={control}\n+                  render={({ field }) => (\n+                    <Input\n+                      label=\"IEP Goals\"\n+                      multiline\n+                      rows={3}\n+                      {...field}\n+                      error={errors.iepGoals?.message}\n+                      placeholder=\"List the main goals of the IEP\"\n+                    />\n+                  )}\n+                />\n+\n+                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n+                  <Controller\n+                    name=\"accommodations\"\n+                    control={control}\n+                    render={({ field }) => (\n+                      <Input\n+                        label=\"Accommodations\"\n+                        multiline\n+                        rows={3}\n+                        {...field}\n+                        error={errors.accommodations?.message}\n+                        placeholder=\"List accommodations (e.g., extra time, quiet room)\"\n+                      />\n+                    )}\n+                  />\n+                  <Controller\n+                    name=\"modifications\"\n+                    control={control}\n+                    render={({ field }) => (\n+                      <Input\n+                        label=\"Modifications\"\n+                        multiline\n+                        rows={3}\n+                        {...field}\n+                        error={errors.modifications?.message}\n+                        placeholder=\"List curriculum modifications\"\n+                      />\n+                    )}\n+                  />\n+                </div>\n+              </>\n+            )}\n+          </div>\n+\n+          {/* Support Services */}\n+          <div className=\"space-y-4\">\n+            <h3 className=\"text-lg font-medium border-b pb-2\">\n+              Support Services\n+            </h3>\n+            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n+              {[\n+                { key: 'speechTherapy', label: 'Speech Therapy' },\n+                { key: 'occupationalTherapy', label: 'Occupational Therapy' },\n+                { key: 'physicalTherapy', label: 'Physical Therapy' },\n+                { key: 'counseling', label: 'Counseling Services' },\n+                { key: 'assistiveTechnology', label: 'Assistive Technology' },\n+              ].map(service => (\n+                <Controller\n+                  key={service.key}\n+                  name={service.key}\n+                  control={control}\n+                  render={({ field }) => (\n+                    <label className=\"flex items-center gap-2\">\n+                      <input\n+                        type=\"checkbox\"\n+                        checked={field.value}\n+                        onChange={field.onChange}\n+                      />\n+                      <span>{service.label}</span>\n+                    </label>\n+                  )}\n+                />\n+              ))}\n+            </div>\n+          </div>\n+\n+          {/* Emergency and Medication */}\n+          <div className=\"space-y-4\">\n+            <h3 className=\"text-lg font-medium border-b pb-2\">\n+              Emergency & Medication\n+\n+            <Controller\n+              name=\"emergencyProcedures\"\n+              control={control}\n+              render={({ field }) => (\n+                <Input\n+                  label=\"Emergency Procedures\"\n+                  multiline\n+                  rows={3}\n+                  {...field}\n+                  error={errors.emergencyProcedures?.message}\n+                  placeholder=\"Special procedures in case of emergency\"\n+                />\n+              )}\n+            />\n+\n+            <Controller\n+              name=\"medicationRequired\"\n+              control={control}\n+              render={({ field }) => (\n+                <label className=\"flex items-center gap-2\">\n+                  <input\n+                    type=\"checkbox\"\n+                    checked={field.value}\n+                    onChange={field.onChange}\n+                  />\n+                  <span>Student requires medication during school hours</span>\n+                </label>\n+              )}\n+            />\n+\n+            {medicationRequired && (\n+              <Controller\n+                name=\"medicationDetails\"\n+                control={control}\n+                render={({ field }) => (\n+                  <Input\n+                    label=\"Medication Details\"\n+                    multiline\n+                    rows={3}\n+                    {...field}\n+                    error={errors.medicationDetails?.message}\n+                    placeholder=\"Medication name, dosage, timing, administration instructions\"\n+                  />\n+                )}\n+              />\n+            )}\n+          </div>\n+\n+          {/* Consent */}\n+          <div className=\"space-y-4\">\n+            <Controller\n+              name=\"parentConsent\"\n+              control={control}\n+              render={({ field }) => (\n+                <label className=\"flex items-center gap-2\">\n+                  <input\n+                    type=\"checkbox\"\n+                    checked={field.value}\n+                    onChange={field.onChange}\n+                  />\n+                  <span>\n+                    Parent/Guardian consent obtained for sharing disability\n+                    information\n+                  </span>\n+                </label>\n+              )}\n+            />\n+\n+            <Controller\n+              name=\"isActive\"\n+              control={control}\n+              render={({ field }) => (\n+                <label className=\"flex items-center gap-2\">\n+                  <input\n+                    type=\"checkbox\"\n+                    checked={field.value}\n+                    onChange={field.onChange}\n+                  />\n+                  <span>Record is active</span>\n+                </label>\n+              )}\n+            />\n+          </div>\n+\n+          <div className=\"flex gap-2 pt-4\">\n+            <button\n+              type=\"submit\"\n+              disabled={createMutation.isPending || updateMutation.isPending}\n+              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2\"\n+            >\n+              <Save className=\"w-4 h-4\" />\n+              {createMutation.isPending || updateMutation.isPending\n+                ? 'Saving...'\n+                : selectedStudent\n+                  ? 'Update Record'\n+                  : 'Create Record'}\n+            </button>\n+            <button\n+              type=\"button\"\n+              onClick={() => {\n+                setShowCreateDialog(false)\n+                setShowEditDialog(false)\n+                reset()\n+                setSelectedStudent(null)\n+              }}\n+              className=\"border px-6 py-2 rounded-lg hover:bg-gray-50\"\n+            >\n+              Cancel\n+            </button>\n+          </div>\n+        </form>\n+      </Dialog>\n+\n+      {/* Student Details Drawer */}\n+      <StudentDetailsDrawer\n+        student={selectedStudent}\n+        isOpen={showDetailsDrawer}\n+        onClose={() => {\n+          setShowDetailsDrawer(false)\n+          setSelectedStudent(null)\n+        }}\n+      />\n+    </div>\n+  )\n+};\n+\n+export default DisabledStudents\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755992188110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1292,1434 +1292,11 @@\n           {/* Emergency and Medication */}\n           <div className=\"space-y-4\">\n             <h3 className=\"text-lg font-medium border-b pb-2\">\n               Emergency & Medication\n-\n-            <Controller\n-              name=\"emergencyProcedures\"\n-              control={control}\n-              render={({ field }) => (\n-                <Input\n-                  label=\"Emergency Procedures\"\n-                  multiline\n-                  rows={3}\n-                  {...field}\n-                  error={errors.emergencyProcedures?.message}\n-                  placeholder=\"Special procedures in case of emergency\"\n-                />\n-              )}\n-            />\n-\n-            <Controller\n-              name=\"medicationRequired\"\n-              control={control}\n-              render={({ field }) => (\n-                <label className=\"flex items-center gap-2\">\n-                  <input\n-                    type=\"checkbox\"\n-                    checked={field.value}\n-                    onChange={field.onChange}\n-                  />\n-                  <span>Student requires medication during school hours</span>\n-                </label>\n-              )}\n-            />\n-\n-            {medicationRequired && (\n-              <Controller\n-                name=\"medicationDetails\"\n-                control={control}\n-                render={({ field }) => (\n-                  <Input\n-                    label=\"Medication Details\"\n-                    multiline\n-                    rows={3}\n-                    {...field}\n-                    error={errors.medicationDetails?.message}\n-                    placeholder=\"Medication name, dosage, timing, administration instructions\"\n-                  />\n-                )}\n-              />\n-            )}\n-          </div>\n-\n-          {/* Consent */}\n-          <div className=\"space-y-4\">\n-            <Controller\n-              name=\"parentConsent\"\n-              control={control}\n-              render={({ field }) => (\n-                <label className=\"flex items-center gap-2\">\n-                  <input\n-                    type=\"checkbox\"\n-                    checked={field.value}\n-                    onChange={field.onChange}\n-                  />\n-                  <span>\n-                    Parent/Guardian consent obtained for sharing disability\n-                    information\n-                  </span>\n-                </label>\n-              )}\n-            />\n-\n-            <Controller\n-              name=\"isActive\"\n-              control={control}\n-              render={({ field }) => (\n-                <label className=\"flex items-center gap-2\">\n-                  <input\n-                    type=\"checkbox\"\n-                    checked={field.value}\n-                    onChange={field.onChange}\n-                  />\n-                  <span>Record is active</span>\n-                </label>\n-              )}\n-            />\n-          </div>\n-\n-          <div className=\"flex gap-2 pt-4\">\n-            <button\n-              type=\"submit\"\n-              disabled={createMutation.isPending || updateMutation.isPending}\n-              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2\"\n-            >\n-              <Save className=\"w-4 h-4\" />\n-              {createMutation.isPending || updateMutation.isPending\n-                ? 'Saving...'\n-                : selectedStudent\n-                  ? 'Update Record'\n-                  : 'Create Record'}\n-            </button>\n-            <button\n-              type=\"button\"\n-              onClick={() => {\n-                setShowCreateDialog(false)\n-                setShowEditDialog(false)\n-                reset()\n-                setSelectedStudent(null)\n-              }}\n-              className=\"border px-6 py-2 rounded-lg hover:bg-gray-50\"\n-            >\n-              Cancel\n-            </button>\n-          </div>\n-        </form>\n-      </Dialog>\n-\n-      {/* Student Details Drawer */}\n-      <StudentDetailsDrawer\n-        student={selectedStudent}\n-        isOpen={showDetailsDrawer}\n-        onClose={() => {\n-          setShowDetailsDrawer(false)\n-          setSelectedStudent(null)\n-        }}\n-      />\n-    </div>\n-  )\n-};\n-\n-export default DisabledStudents\n-import React, { useState } from 'react'\n-import { useState } from 'react'\n-import { useForm, Controller } from 'react-hook-form'\n-import { zodResolver } from '@hookform/resolvers/zod'\n-import { z } from 'zod'\n-import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\n-import {\n-  Plus,\n-  Search,\n-  Filter,\n-  MoreHorizontal,\n-  Edit,\n-  Eye,\n-  FileText,\n-  Heart,\n-  Brain,\n-  Wheelchair,\n-  AlertTriangle,\n-  CheckCircle,\n-  Clock,\n-  User,\n-  Calendar,\n-  Download,\n-  Upload,\n-  Save,\n-  History,\n-} from 'lucide-react'\n-import Table from '../../components/ui/Table'\n-import Input from '../../components/ui/Input'\n-import Dialog from '../../components/ui/Dialog'\n-import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n-import ErrorState from '../../components/ui/ErrorState'\n-import EmptyState from '../../components/ui/EmptyState'\n-import Pagination from '../../components/ui/Pagination'\n-import Dropdown from '../../components/ui/Dropdown'\n-import { disabledStudentsApi } from '../../lib/api/disabledStudents'\n-import { studentsApi } from '../../lib/api/students'\n-import { auditLogApi } from '../../lib/api/auditLog'\n-\n-// Validation Schema\n-const disabilityRecordSchema = z.object({\n-  studentId: z.string().min(1, 'Student is required'),\n-  disabilityType: z.enum(\n-    ['physical', 'intellectual', 'sensory', 'multiple', 'other'],\n-    {\n-      required_error: 'Disability type is required',\n-    }\n-  ),\n-  disabilityCategory: z.string().min(1, 'Category is required'),\n-  severityLevel: z.enum(['mild', 'moderate', 'severe', 'profound'], {\n-    required_error: 'Severity level is required',\n-  }),\n-  diagnosisDate: z.string().min(1, 'Diagnosis date is required'),\n-  diagnostician: z.string().min(1, 'Diagnostician is required'),\n-  medicalNotes: z.string().optional(),\n-\n-  // IEP Information\n-  hasIEP: z.boolean().default(false),\n-  iepStartDate: z.string().optional(),\n-  iepEndDate: z.string().optional(),\n-  iepGoals: z.string().optional(),\n-  accommodations: z.string().optional(),\n-  modifications: z.string().optional(),\n-\n-  // Support Services\n-  speechTherapy: z.boolean().default(false),\n-  occupationalTherapy: z.boolean().default(false),\n-  physicalTherapy: z.boolean().default(false),\n-  counseling: z.boolean().default(false),\n-  assistiveTechnology: z.boolean().default(false),\n-\n-  // Additional Information\n-  emergencyProcedures: z.string().optional(),\n-  medicationRequired: z.boolean().default(false),\n-  medicationDetails: z.string().optional(),\n-  parentConsent: z.boolean().default(false),\n-  confidentialityLevel: z.enum(['public', 'restricted', 'confidential'], {\n-    required_error: 'Confidentiality level is required',\n-  }),\n-\n-  isActive: z.boolean().default(true),\n-})\n-\n-const DisabilityStatusBadge = ({ type, severity }) => {\n-  const getTypeColor = type => {\n-    switch (type) {\n-      case 'physical':\n-        return 'bg-blue-100 text-blue-800'\n-      case 'intellectual':\n-        return 'bg-purple-100 text-purple-800'\n-      case 'sensory':\n-        return 'bg-green-100 text-green-800'\n-      case 'multiple':\n-        return 'bg-orange-100 text-orange-800'\n-      default:\n-        return 'bg-gray-100 text-gray-800'\n-    }\n-  }\n-\n-  const getSeverityColor = severity => {\n-    switch (severity) {\n-      case 'mild':\n-        return 'bg-yellow-100 text-yellow-800'\n-      case 'moderate':\n-        return 'bg-orange-100 text-orange-800'\n-      case 'severe':\n-        return 'bg-red-100 text-red-800'\n-      case 'profound':\n-        return 'bg-red-200 text-red-900'\n-      default:\n-        return 'bg-gray-100 text-gray-800'\n-    }\n-  }\n-\n-  return (\n-    <div className=\"flex flex-col gap-1\">\n-      <span className={`px-2 py-1 rounded-full text-xs ${getTypeColor(type)}`}>\n-        {type?.charAt(0).toUpperCase() + type?.slice(1)}\n-      </span>\n-      <span\n-        className={`px-2 py-1 rounded-full text-xs ${getSeverityColor(severity)}`}\n-      >\n-        {severity?.charAt(0).toUpperCase() + severity?.slice(1)}\n-      </span>\n-    </div>\n-  )\n-};\n-\n-const IEPStatusIndicator = ({ hasIEP, startDate, endDate }) => {\n-  if (!hasIEP) {\n-    return <span className=\"text-gray-500 text-sm\">No IEP</span>\n-  }\n-\n-  const now = new Date()\n-  const start = new Date(startDate)\n-  const end = new Date(endDate)\n-  \n-  const isActive = now >= start && now <= end\n-  const isExpired = now > end\n-\n-  return (\n-    <div className=\"flex items-center gap-2\">\n-      {isActive ? (\n-        <CheckCircle className=\"w-4 h-4 text-green-600\" />\n-      ) : isExpired ? (\n-        <AlertTriangle className=\"w-4 h-4 text-red-600\" />\n-      ) : (\n-        <Clock className=\"w-4 h-4 text-yellow-600\" />\n-      )}\n-      <span\n-        className={`text-sm ${\n-          isActive\n-            ? 'text-green-600'\n-            : isExpired\n-              ? 'text-red-600'\n-              : 'text-yellow-600'\n-        }`}\n-      >\n-        {isActive ? 'Active' : isExpired ? 'Expired' : 'Pending'}\n-      </span>\n-    </div>\n-  )\n-};\n-\n-const StudentDetailsDrawer = ({ student, isOpen, onClose }) => {\n-  const [activeTab, setActiveTab] = useState('overview')\n-\n-  if (!student) return null\n-\n-  const tabs = [\n-    { id: 'overview', label: 'Overview', icon: Eye },\n-    { id: 'medical', label: 'Medical', icon: Heart },\n-    { id: 'iep', label: 'IEP', icon: Brain },\n-    { id: 'services', label: 'Services', icon: Wheelchair },\n-    { id: 'history', label: 'History', icon: History },\n-  ];\n-\n-  return (\n-    <Dialog\n-      open={isOpen}\n-      onClose={onClose}\n-      title={`${student.name} - Disability Profile`}\n-      size=\"xl\"\n-    >\n-      <div className=\"space-y-6\">\n-        {/* Student Header */}\n-        <div className=\"flex items-center gap-4 p-4 bg-gray-50 rounded-lg\">\n-          <div className=\"w-16 h-16 rounded-full overflow-hidden bg-gray-200\">\n-            {student.photo ? (\n-              <img\n-                src={student.photo}\n-                alt={student.name}\n-                className=\"w-full h-full object-cover\"\n-              />\n-            ) : (\n-              <div className=\"w-full h-full flex items-center justify-center\">\n-                <User className=\"w-8 h-8 text-gray-400\" />\n-              </div>\n-            )}\n-          </div>\n-          <div>\n-            <h3 className=\"text-xl font-semibold\">{student.name}</h3>\n-            <p className=\"text-gray-600\">\n-              Roll No: {student.rollNumber} | Class: {student.class?.name} -{' '}\n-              {student.section?.name}\n-            </p>\n-            <div className=\"flex gap-2 mt-2\">\n-              <DisabilityStatusBadge\n-                type={student.disabilityType}\n-                severity={student.severityLevel}\n-              />\n-              {student.hasIEP && (\n-                <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">\n-                  IEP Active\n-                </span>\n-              )}\n-            </div>\n-          </div>\n-        </div>\n-\n-        {/* Tab Navigation */}\n-        <div className=\"border-b\">\n-          <nav className=\"flex space-x-8\">\n-            {Array.isArray(tabs) &&\n-              tabs.map(tab => (\n-                <button\n-                  key={tab.id}\n-                  onClick={() => setActiveTab(tab.id)}\n-                  className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2 ${\n-                    activeTab === tab.id\n-                      ? 'border-blue-500 text-blue-600'\n-                      : 'border-transparent text-gray-500 hover:text-gray-700'\n-                  }`}\n-                >\n-                  <tab.icon className=\"w-4 h-4\" />\n-                  {tab.label}\n-                </button>\n-              ))}\n-          </nav>\n-        </div>\n-\n-        {/* Tab Content */}\n-        <div className=\"min-h-96\">\n-          {activeTab === 'overview' && (\n-            <div className=\"space-y-6\">\n-              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n-                <div>\n-                  <h4 className=\"font-medium mb-3\">Disability Information</h4>\n-                  <div className=\"space-y-2 text-sm\">\n-                    <div className=\"flex justify-between\">\n-                      <span className=\"text-gray-600\">Type:</span>\n-                      <span className=\"capitalize\">\n-                        {student.disabilityType}\n-                      </span>\n-                    </div>\n-                    <div className=\"flex justify-between\">\n-                      <span className=\"text-gray-600\">Category:</span>\n-                      <span>{student.disabilityCategory}</span>\n-                    </div>\n-                    <div className=\"flex justify-between\">\n-                      <span className=\"text-gray-600\">Severity:</span>\n-                      <span className=\"capitalize\">\n-                        {student.severityLevel}\n-                      </span>\n-                    </div>\n-                    <div className=\"flex justify-between\">\n-                      <span className=\"text-gray-600\">Diagnosis Date:</span>\n-                      <span>\n-                        {new Date(student.diagnosisDate).toLocaleDateString()}\n-                      </span>\n-                    </div>\n-                    <div className=\"flex justify-between\">\n-                      <span className=\"text-gray-600\">Diagnostician:</span>\n-                      <span>{student.diagnostician}</span>\n-                    </div>\n-                  </div>\n-                </div>\n-                <div>\n-                  <h4 className=\"font-medium mb-3\">Support Services</h4>\n-                  <div className=\"space-y-2 text-sm\">\n-                    {[\n-                      { key: 'speechTherapy', label: 'Speech Therapy' },\n-                      {\n-                        key: 'occupationalTherapy',\n-                        label: 'Occupational Therapy',\n-                      },\n-                      { key: 'physicalTherapy', label: 'Physical Therapy' },\n-                      { key: 'counseling', label: 'Counseling' },\n-                      {\n-                        key: 'assistiveTechnology',\n-                        label: 'Assistive Technology',\n-                      },\n-                    ].map(service => (\n-                      <div key={service.key} className=\"flex justify-between\">\n-                        <span className=\"text-gray-600\">{service.label}:</span>\n-                        <span\n-                          className={\n-                            student[service.key]\n-                              ? 'text-green-600'\n-                              : 'text-gray-400'\n-                          }\n-                        >\n-                          {student[service.key] ? 'Yes' : 'No'}\n-                        </span>\n-                      </div>\n-                    ))}\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          )}\n-\n-          {activeTab === 'medical' && (\n-            <div className=\"space-y-4\">\n-              <div>\n-                <h4 className=\"font-medium mb-2\">Medical Notes</h4>\n-                <div className=\"bg-gray-50 p-4 rounded-lg\">\n-                  <p className=\"text-sm text-gray-700\">\n-                    {student.medicalNotes || 'No medical notes available'}\n-                  </p>\n-                </div>\n-              </div>\n-\n-              {student.medicationRequired && (\n-                <div>\n-                  <h4 className=\"font-medium mb-2\">Medication Details</h4>\n-                  <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200\">\n-                    <p className=\"text-sm text-yellow-800\">\n-                      {student.medicationDetails ||\n-                        'Medication required - details not specified'}\n-                    </p>\n-                  </div>\n-                </div>\n-              )}\n-\n-              {student.emergencyProcedures && (\n-                <div>\n-                  <h4 className=\"font-medium mb-2\">Emergency Procedures</h4>\n-                  <div className=\"bg-red-50 p-4 rounded-lg border border-red-200\">\n-                    <p className=\"text-sm text-red-800\">\n-                      {student.emergencyProcedures}\n-                    </p>\n-                  </div>\n-                </div>\n-              )}\n-            </div>\n-          )}\n-\n-          {activeTab === 'iep' && (\n-            <div className=\"space-y-4\">\n-              {student.hasIEP ? (\n-                <>\n-                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n-                    <div>\n-                      <h4 className=\"font-medium mb-2\">IEP Period</h4>\n-                      <div className=\"text-sm space-y-1\">\n-                        <p>\n-                          <span className=\"text-gray-600\">Start Date:</span>{' '}\n-                          {new Date(student.iepStartDate).toLocaleDateString()}\n-                        </p>\n-                        <p>\n-                          <span className=\"text-gray-600\">End Date:</span>{' '}\n-                          {new Date(student.iepEndDate).toLocaleDateString()}\n-                        </p>\n-                        <IEPStatusIndicator\n-                          hasIEP={student.hasIEP}\n-                          startDate={student.iepStartDate}\n-                          endDate={student.iepEndDate}\n-                        />\n-                      </div>\n-                    </div>\n-                  </div>\n-\n-                  <div>\n-                    <h4 className=\"font-medium mb-2\">IEP Goals</h4>\n-                    <div className=\"bg-blue-50 p-4 rounded-lg\">\n-                      <p className=\"text-sm text-blue-800\">\n-                        {student.iepGoals || 'No IEP goals specified'}\n-                      </p>\n-                    </div>\n-                  </div>\n-\n-                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n-                    <div>\n-                      <h4 className=\"font-medium mb-2\">Accommodations</h4>\n-                      <div className=\"bg-green-50 p-4 rounded-lg\">\n-                        <p className=\"text-sm text-green-800\">\n-                          {student.accommodations ||\n-                            'No accommodations specified'}\n-                        </p>\n-                      </div>\n-                    </div>\n-                    <div>\n-                      <h4 className=\"font-medium mb-2\">Modifications</h4>\n-                      <div className=\"bg-purple-50 p-4 rounded-lg\">\n-                        <p className=\"text-sm text-purple-800\">\n-                          {student.modifications ||\n-                            'No modifications specified'}\n-                        </p>\n-                      </div>\n-                    </div>\n-                  </div>\n-                </>\n-              ) : (\n-                <div className=\"text-center py-8\">\n-                  <Brain className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n-                  <p className=\"text-gray-500\">\n-                    No IEP on file for this student\n-                  </p>\n-                </div>\n-              )}\n-            </div>\n-          )}\n-\n-          {activeTab === 'services' && (\n-            <div className=\"space-y-4\">\n-              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n-                {[\n-                  { key: 'speechTherapy', label: 'Speech Therapy', icon: '🗣️' },\n-                  {\n-                    key: 'occupationalTherapy',\n-                    label: 'Occupational Therapy',\n-                    icon: '🖐️',\n-                  },\n-                  {\n-                    key: 'physicalTherapy',\n-                    label: 'Physical Therapy',\n-                    icon: '🏃',\n-                  },\n-                  { key: 'counseling', label: 'Counseling', icon: '💭' },\n-                  {\n-                    key: 'assistiveTechnology',\n-                    label: 'Assistive Technology',\n-                    icon: '💻',\n-                  },\n-                ].map(service => (\n-                  <div\n-                    key={service.key}\n-                    className={`p-4 rounded-lg border-2 ${\n-                      student[service.key]\n-                        ? 'border-green-200 bg-green-50'\n-                        : 'border-gray-200 bg-gray-50'\n-                    }`}\n-                  >\n-                    <div className=\"flex items-center gap-3\">\n-                      <span className=\"text-2xl\">{service.icon}</span>\n-                      <div>\n-                        <h5 className=\"font-medium\">{service.label}</h5>\n-                        <p\n-                          className={`text-sm ${\n-                            student[service.key]\n-                              ? 'text-green-600'\n-                              : 'text-gray-500'\n-                          }`}\n-                        >\n-                          {student[service.key] ? 'Active' : 'Not Required'}\n-                        </p>\n-                      </div>\n-                    </div>\n-                  </div>\n-                ))}\n-              </div>\n-            </div>\n-          )}\n-\n-          {activeTab === 'history' && (\n-            <AuditLogViewer\n-              entityType=\"disabled_student\"\n-              entityId={student.id}\n-            />\n-          )}\n-        </div>\n-\n-        <div className=\"flex justify-end gap-2 pt-4 border-t\">\n-          <button\n-            onClick={onClose}\n-            className=\"border px-4 py-2 rounded-lg hover:bg-gray-50\"\n-          >\n-            Close\n-          </button>\n-          <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\">\n-            <Edit className=\"w-4 h-4\" />\n-            Edit Profile\n-          </button>\n-        </div>\n-      </div>\n-    </Dialog>\n-  )\n-};\n-\n-const AuditLogViewer = ({ entityType, entityId }) => {\n-  const { data: auditLogs, isLoading } = useQuery({\n-    queryKey: ['auditLog', entityType, entityId],\n-    queryFn: () => auditLogApi.getEntityLogs(entityType, entityId),\n-  })\n-\n-  if (isLoading) return <LoadingSkeleton />\n-\n-  return (\n-    <div className=\"space-y-4\">\n-      {auditLogs?.data?.length > 0 ? (\n-        <div className=\"space-y-3\">\n-          {Array.isArray(auditLogs.data) &&\n-            auditLogs.data.map((log, index) => (\n-              <div key={index} className=\"border rounded-lg p-4\">\n-                <div className=\"flex justify-between items-start mb-2\">\n-                  <div>\n-                    <p className=\"font-medium\">{log.action}</p>\n-                    <p className=\"text-sm text-gray-600\">\n-                      By {log.performedBy} on{' '}\n-                      {new Date(log.timestamp).toLocaleString()}\n-                    </p>\n-                  </div>\n-                  <span\n-                    className={`px-2 py-1 rounded-full text-xs ${\n-                      log.severity === 'high'\n-                        ? 'bg-red-100 text-red-800'\n-                        : log.severity === 'medium'\n-                          ? 'bg-yellow-100 text-yellow-800'\n-                          : 'bg-green-100 text-green-800'\n-                    }`}\n-                  >\n-                    {log.severity}\n-                  </span>\n-                </div>\n-                {log.details && (\n-                  <div className=\"text-sm text-gray-700 bg-gray-50 p-2 rounded\">\n-                    {log.details}\n-                  </div>\n-                )}\n-              </div>\n-            ))}\n-        </div>\n-      ) : (\n-        <div className=\"text-center py-8 text-gray-500\">\n-          <History className=\"w-12 h-12 mx-auto mb-2 text-gray-300\" />\n-          <p>No audit logs available</p>\n-        </div>\n-      )}\n-    </div>\n-  )\n-};\n-\n-const DisabledStudents = () => {\n-  const [searchTerm, setSearchTerm] = useState('')\n-  const [disabilityTypeFilter, setDisabilityTypeFilter] = useState('')\n-  const [severityFilter, setSeverityFilter] = useState('')\n-  const [iepFilter, setIepFilter] = useState('')\n-  const [currentPage, setCurrentPage] = useState(1)\n-  const [pageSize] = useState(10)\n-  const [showCreateDialog, setShowCreateDialog] = useState(false)\n-  const [showEditDialog, setShowEditDialog] = useState(false)\n-  const [selectedStudent, setSelectedStudent] = useState(null)\n-  const [showDetailsDrawer, setShowDetailsDrawer] = useState(false)\n-\n-  const queryClient = useQueryClient()\n-\n-  const {\n-    control,\n-    handleSubmit,\n-    reset,\n-    watch,\n-    formState: { errors },\n-  } = useForm({\n-    resolver: zodResolver(disabilityRecordSchema),\n-    mode: 'onChange',\n-    defaultValues: {\n-      hasIEP: false,\n-      medicationRequired: false,\n-      parentConsent: false,\n-      confidentialityLevel: 'restricted',\n-      isActive: true,\n-    }\n-  })\n-\n-  const hasIEP = watch('hasIEP')\n-  const medicationRequired = watch('medicationRequired')\n-\n-  const {\n-    data: disabledStudentsData,\n-    isLoading,\n-    error,\n-  } = useQuery({\n-    queryKey: [\n-      'disabledStudents',\n-      {\n-        page: currentPage,\n-        pageSize,\n-        search: searchTerm,\n-        disabilityType: disabilityTypeFilter,\n-        severity: severityFilter,\n-        hasIEP: iepFilter,\n-      },\n-    ],\n-    queryFn: () =>\n-      disabledStudentsApi.getAll({\n-        page: currentPage,\n-        pageSize,\n-        search: searchTerm,\n-        disabilityType: disabilityTypeFilter,\n-        severity: severityFilter,\n-        hasIEP: iepFilter,\n-      }),\n-  })\n-\n-  const { data: studentsData } = useQuery({\n-    queryKey: ['students', 'available'],\n-    queryFn: () => studentsApi.getAvailableForDisability(),\n-  })\n-\n-  const createMutation = useMutation({\n-    mutationFn: disabledStudentsApi.create,\n-    onSuccess: () => {\n-      queryClient.invalidateQueries(['disabledStudents'])\n-      setShowCreateDialog(false)\n-      reset()\n-      // Log audit entry\n-      auditLogApi.log({\n-        action: 'CREATE_DISABILITY_RECORD',\n-        entityType: 'disabled_student',\n-        severity: 'medium',\n-        details: 'New disability record created',\n-      })\n-    },\n-  })\n-\n-  const updateMutation = useMutation({\n-    mutationFn: ({ id, data }) => disabledStudentsApi.update(id, data),\n-    onSuccess: () => {\n-      queryClient.invalidateQueries(['disabledStudents'])\n-      setShowEditDialog(false)\n-      reset()\n-      // Log audit entry\n-      auditLogApi.log({\n-        action: 'UPDATE_DISABILITY_RECORD',\n-        entityType: 'disabled_student',\n-        entityId: selectedStudent?.id,\n-        severity: 'medium',\n-        details: 'Disability record updated',\n-      })\n-    },\n-  })\n-\n-  const handleEdit = student => {\n-    setSelectedStudent(student)\n-    reset({\n-      studentId: student.studentId,\n-      disabilityType: student.disabilityType,\n-      disabilityCategory: student.disabilityCategory,\n-      severityLevel: student.severityLevel,\n-      diagnosisDate: student.diagnosisDate?.split('T')[0],\n-      diagnostician: student.diagnostician,\n-      medicalNotes: student.medicalNotes || '',\n-      hasIEP: student.hasIEP,\n-      iepStartDate: student.iepStartDate?.split('T')[0] || '',\n-      iepEndDate: student.iepEndDate?.split('T')[0] || '',\n-      iepGoals: student.iepGoals || '',\n-      accommodations: student.accommodations || '',\n-      modifications: student.modifications || '',\n-      speechTherapy: student.speechTherapy,\n-      occupationalTherapy: student.occupationalTherapy,\n-      physicalTherapy: student.physicalTherapy,\n-      counseling: student.counseling,\n-      assistiveTechnology: student.assistiveTechnology,\n-      emergencyProcedures: student.emergencyProcedures || '',\n-      medicationRequired: student.medicationRequired,\n-      medicationDetails: student.medicationDetails || '',\n-      parentConsent: student.parentConsent,\n-      confidentialityLevel: student.confidentialityLevel,\n-      isActive: student.isActive,\n-    })\n-    setShowEditDialog(true)\n-  };\n-\n-  const handleViewDetails = student => {\n-    setSelectedStudent(student)\n-    setShowDetailsDrawer(true)\n-  };\n-\n-  const onSubmit = data => {\n-    if (selectedStudent) {\n-      updateMutation.mutate({ id: selectedStudent.id, data })\n-    } else {\n-      createMutation.mutate(data)\n-    }\n-  }\n-\n-  const columns = [\n-    {\n-      key: 'student',\n-      header: 'Student',\n-      render: item => (\n-        <div className=\"flex items-center gap-3\">\n-          <div className=\"w-10 h-10 rounded-full overflow-hidden bg-gray-200\">\n-            {item.student?.photo ? (\n-              <img\n-                src={item.student.photo}\n-                alt={item.student.name}\n-                className=\"w-full h-full object-cover\"\n-              />\n-            ) : (\n-              <div className=\"w-full h-full flex items-center justify-center\">\n-                <User className=\"w-5 h-5 text-gray-400\" />\n-              </div>\n-            )}\n-          </div>\n-          <div>\n-            <p className=\"font-medium\">{item.student?.name}</p>\n-            <p className=\"text-sm text-gray-500\">\n-              {item.student?.rollNumber} | {item.student?.class?.name}-\n-              {item.student?.section?.name}\n-            </p>\n-          </div>\n-        </div>\n-      ),\n-    },\n-    {\n-      key: 'disability',\n-      header: 'Disability',\n-      render: item => (\n-        <DisabilityStatusBadge\n-          type={item.disabilityType}\n-          severity={item.severityLevel}\n-        />\n-      ),\n-    },\n-    { key: 'disabilityCategory', header: 'Category' },\n-    {\n-      key: 'iep',\n-      header: 'IEP Status',\n-      render: item => (\n-        <IEPStatusIndicator\n-          hasIEP={item.hasIEP}\n-          startDate={item.iepStartDate}\n-          endDate={item.iepEndDate}\n-        />\n-      ),\n-    },\n-    {\n-      key: 'services',\n-      header: 'Services',\n-      render: item => {\n-        const services = [\n-          item.speechTherapy && 'Speech',\n-          item.occupationalTherapy && 'OT',\n-          item.physicalTherapy && 'PT',\n-          item.counseling && 'Counseling',\n-          item.assistiveTechnology && 'AT',\n-        ].filter(Boolean)\n-        \n-        return (\n-          <div className=\"text-sm\">\n-            {services.length > 0 ? services.join(', ') : 'None'}\n-          </div>\n-        )\n-      }\n-    },\n-    {\n-      key: 'confidentiality',\n-      header: 'Access Level',\n-      render: item => (\n-        <span\n-          className={`px-2 py-1 rounded-full text-xs ${\n-            item.confidentialityLevel === 'public'\n-              ? 'bg-green-100 text-green-800'\n-              : item.confidentialityLevel === 'restricted'\n-                ? 'bg-yellow-100 text-yellow-800'\n-                : 'bg-red-100 text-red-800'\n-          }`}\n-        >\n-          {item.confidentialityLevel?.charAt(0).toUpperCase() +\n-            item.confidentialityLevel?.slice(1)}\n-        </span>\n-      ),\n-    },\n-    {\n-      key: 'actions',\n-      header: 'Actions',\n-      render: item => (\n-        <Dropdown\n-          trigger={<MoreHorizontal className=\"w-4 h-4\" />}\n-          items={[\n-            {\n-              label: 'View Details',\n-              icon: Eye,\n-              onClick: () => handleViewDetails(item),\n-            },\n-            {\n-              label: 'Edit Record',\n-              icon: Edit,\n-              onClick: () => handleEdit(item),\n-            },\n-            {\n-              label: 'Medical Notes',\n-              icon: Heart,\n-              onClick: () => console.log('View medical notes for', item.id),\n-            },\n-            {\n-              label: 'IEP Document',\n-              icon: FileText,\n-              onClick: () => console.log('View IEP for', item.id),\n-              disabled: !item.hasIEP,\n-            }\n-          ]}\n-        />\n-      ),\n-    }\n-  ]\n-\n-  if (isLoading) return <LoadingSkeleton />\n-  if (error)\n-    return <ErrorState message=\"Failed to load disabled students data\" />\n-\n-  return (\n-    <div className=\"space-y-6\">\n-      <div className=\"flex justify-between items-center\">\n-        <h1 className=\"text-2xl font-bold\">Students with Disabilities</h1>\n-        <div className=\"flex gap-2\">\n-          <button className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n-            <Download className=\"w-4 h-4\" />\n-            Export Report\n-          </button>\n-          <button\n-            onClick={() => {\n-              reset()\n-              setSelectedStudent(null)\n-              setShowCreateDialog(true)\n-            }}\n-            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center gap-2 hover:bg-blue-700\"\n-          >\n-            <Plus className=\"w-4 h-4\" />\n-            Add Record\n-          </button>\n-        </div>\n-      </div>\n-\n-      {/* Statistics Cards */}\n-      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n-        <div className=\"bg-white p-4 rounded-lg shadow\">\n-          <div className=\"flex items-center gap-3\">\n-            <Wheelchair className=\"w-8 h-8 text-blue-600\" />\n-            <div>\n-              <p className=\"text-2xl font-bold\">\n-                {disabledStudentsData?.total || 0}\n-              </p>\n-              <p className=\"text-sm text-gray-600\">Total Students</p>\n-            </div>\n-          </div>\n-        </div>\n-        <div className=\"bg-white p-4 rounded-lg shadow\">\n-          <div className=\"flex items-center gap-3\">\n-            <Brain className=\"w-8 h-8 text-purple-600\" />\n-            <div>\n-              <p className=\"text-2xl font-bold\">\n-                {disabledStudentsData?.data?.filter(s => s.hasIEP).length || 0}\n-              </p>\n-              <p className=\"text-sm text-gray-600\">Active IEPs</p>\n-            </div>\n-          </div>\n-        </div>\n-        <div className=\"bg-white p-4 rounded-lg shadow\">\n-          <div className=\"flex items-center gap-3\">\n-            <Heart className=\"w-8 h-8 text-red-600\" />\n-            <div>\n-              <p className=\"text-2xl font-bold\">\n-                {disabledStudentsData?.data?.filter(s => s.medicationRequired)\n-                  .length || 0}\n-              </p>\n-              <p className=\"text-sm text-gray-600\">Require Medication</p>\n-            </div>\n-          </div>\n-        </div>\n-        <div className=\"bg-white p-4 rounded-lg shadow\">\n-          <div className=\"flex items-center gap-3\">\n-            <AlertTriangle className=\"w-8 h-8 text-yellow-600\" />\n-            <div>\n-              <p className=\"text-2xl font-bold\">\n-                {disabledStudentsData?.data?.filter(s => s.emergencyProcedures)\n-                  .length || 0}\n-              </p>\n-              <p className=\"text-sm text-gray-600\">Emergency Protocols</p>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Filters */}\n-      <div className=\"bg-white rounded-lg shadow p-6\">\n-        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n-          <div className=\"md:col-span-2\">\n-            <Input\n-              placeholder=\"Search students...\"\n-              value={searchTerm}\n-              onChange={e => setSearchTerm(e.target.value)}\n-              icon={Search}\n-            />\n-          </div>\n-          <div>\n-            <select\n-              value={disabilityTypeFilter}\n-              onChange={e => setDisabilityTypeFilter(e.target.value)}\n-              className=\"w-full border rounded-lg px-3 py-2\"\n-            >\n-              <option value=\"\">All Types</option>\n-              <option value=\"physical\">Physical</option>\n-              <option value=\"intellectual\">Intellectual</option>\n-              <option value=\"sensory\">Sensory</option>\n-              <option value=\"multiple\">Multiple</option>\n-              <option value=\"other\">Other</option>\n-            </select>\n-          </div>\n-          <div>\n-            <select\n-              value={severityFilter}\n-              onChange={e => setSeverityFilter(e.target.value)}\n-              className=\"w-full border rounded-lg px-3 py-2\"\n-            >\n-              <option value=\"\">All Severities</option>\n-              <option value=\"mild\">Mild</option>\n-              <option value=\"moderate\">Moderate</option>\n-              <option value=\"severe\">Severe</option>\n-              <option value=\"profound\">Profound</option>\n-            </select>\n-          </div>\n-          <div>\n-            <select\n-              value={iepFilter}\n-              onChange={e => setIepFilter(e.target.value)}\n-              className=\"w-full border rounded-lg px-3 py-2\"\n-            >\n-              <option value=\"\">All IEP Status</option>\n-              <option value=\"true\">Has IEP</option>\n-              <option value=\"false\">No IEP</option>\n-            </select>\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Students Table */}\n-      <div className=\"bg-white rounded-lg shadow\">\n-        {disabledStudentsData?.data?.length === 0 ? (\n-          <EmptyState\n-            title=\"No disability records found\"\n-            description=\"No students match your current filters\"\n-            action={{\n-              label: 'Add Record',\n-              onClick: () => setShowCreateDialog(true),\n-            }}\n-          />\n-        ) : (\n-          <>\n-            <Table data={disabledStudentsData?.data || []} columns={columns} />\n-            <div className=\"p-6 border-t\">\n-              <Pagination\n-                currentPage={currentPage}\n-                totalPages={Math.ceil(\n-                  (disabledStudentsData?.total || 0) / pageSize\n-                )}\n-                onPageChange={setCurrentPage}\n-              />\n-            </div>\n-          </>\n-        )}\n-      </div>\n-\n-      {/* Create/Edit Dialog */}\n-      <Dialog\n-        open={showCreateDialog || showEditDialog}\n-        onClose={() => {\n-          setShowCreateDialog(false)\n-          setShowEditDialog(false)\n-          reset()\n-          setSelectedStudent(null)\n-        }}\n-        title={\n-          selectedStudent ? 'Edit Disability Record' : 'Add Disability Record'\n-        }\n-        size=\"xl\"\n-      >\n-        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n-          {/* Student Selection */}\n-          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n-            <Controller\n-              name=\"studentId\"\n-              control={control}\n-              render={({ field }) => (\n-                <div>\n-                  <label className=\"block text-sm font-medium mb-1\">\n-                    Student *\n-                  </label>\n-                  <select\n-                    {...field}\n-                    disabled={!!selectedStudent}\n-                    className={`w-full border rounded-lg px-3 py-2 ${\n-                      errors.studentId ? 'border-red-500' : ''\n-                    } ${selectedStudent ? 'bg-gray-100' : ''}`}\n-                  >\n-                    <option value=\"\">Select Student</option>\n-                    {Array.isArray(studentsData?.data) &&\n-                      studentsData.data.map(student => (\n-                        <option key={student.id} value={student.id}>\n-                          {student.name} - {student.rollNumber}\n-                        </option>\n-                      ))}\n-                  </select>\n-                  {errors.studentId && (\n-                    <p className=\"text-red-500 text-sm mt-1\">\n-                      {errors.studentId.message}\n-                    </p>\n-                  )}\n-                </div>\n-              )}\n-            />\n-            <Controller\n-              name=\"confidentialityLevel\"\n-              control={control}\n-              render={({ field }) => (\n-                <div>\n-                  <label className=\"block text-sm font-medium mb-1\">\n-                    Confidentiality Level *\n-                  </label>\n-                  <select\n-                    {...field}\n-                    className={`w-full border rounded-lg px-3 py-2 ${\n-                      errors.confidentialityLevel ? 'border-red-500' : ''\n-                    }`}\n-                  >\n-                    <option value=\"public\">Public</option>\n-                    <option value=\"restricted\">Restricted</option>\n-                    <option value=\"confidential\">Confidential</option>\n-                  </select>\n-                  {errors.confidentialityLevel && (\n-                    <p className=\"text-red-500 text-sm mt-1\">\n-                      {errors.confidentialityLevel.message}\n-                    </p>\n-                  )}\n-                </div>\n-              )}\n-            />\n-          </div>\n-\n-          {/* Disability Information */}\n-          <div className=\"space-y-4\">\n-            <h3 className=\"text-lg font-medium border-b pb-2\">\n-              Disability Information\n             </h3>\n-            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n-              <Controller\n-                name=\"disabilityType\"\n-                control={control}\n-                render={({ field }) => (\n-                  <div>\n-                    <label className=\"block text-sm font-medium mb-1\">\n-                      Disability Type *\n-                    </label>\n-                    <select\n-                      {...field}\n-                      className={`w-full border rounded-lg px-3 py-2 ${\n-                        errors.disabilityType ? 'border-red-500' : ''\n-                      }`}\n-                    >\n-                      <option value=\"\">Select Type</option>\n-                      <option value=\"physical\">Physical</option>\n-                      <option value=\"intellectual\">Intellectual</option>\n-                      <option value=\"sensory\">Sensory</option>\n-                      <option value=\"multiple\">Multiple</option>\n-                      <option value=\"other\">Other</option>\n-                    </select>\n-                    {errors.disabilityType && (\n-                      <p className=\"text-red-500 text-sm mt-1\">\n-                        {errors.disabilityType.message}\n-                      </p>\n-                    )}\n-                  </div>\n-                )}\n-              />\n-              <Controller\n-                name=\"severityLevel\"\n-                control={control}\n-                render={({ field }) => (\n-                  <div>\n-                    <label className=\"block text-sm font-medium mb-1\">\n-                      Severity Level *\n-                    </label>\n-                    <select\n-                      {...field}\n-                      className={`w-full border rounded-lg px-3 py-2 ${\n-                        errors.severityLevel ? 'border-red-500' : ''\n-                      }`}\n-                    >\n-                      <option value=\"\">Select Severity</option>\n-                      <option value=\"mild\">Mild</option>\n-                      <option value=\"moderate\">Moderate</option>\n-                      <option value=\"severe\">Severe</option>\n-                      <option value=\"profound\">Profound</option>\n-                    </select>\n-                    {errors.severityLevel && (\n-                      <p className=\"text-red-500 text-sm mt-1\">\n-                        {errors.severityLevel.message}\n-                      </p>\n-                    )}\n-                  </div>\n-                )}\n-              />\n-            </div>\n \n             <Controller\n-              name=\"disabilityCategory\"\n-              control={control}\n-              render={({ field }) => (\n-                <Input\n-                  label=\"Disability Category *\"\n-                  {...field}\n-                  error={errors.disabilityCategory?.message}\n-                  placeholder=\"e.g., Autism Spectrum Disorder, Cerebral Palsy, etc.\"\n-                />\n-              )}\n-            />\n-\n-            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n-              <Controller\n-                name=\"diagnosisDate\"\n-                control={control}\n-                render={({ field }) => (\n-                  <Input\n-                    label=\"Diagnosis Date *\"\n-                    type=\"date\"\n-                    {...field}\n-                    error={errors.diagnosisDate?.message}\n-                  />\n-                )}\n-              />\n-              <Controller\n-                name=\"diagnostician\"\n-                control={control}\n-                render={({ field }) => (\n-                  <Input\n-                    label=\"Diagnostician *\"\n-                    {...field}\n-                    error={errors.diagnostician?.message}\n-                    placeholder=\"Doctor/Professional who made the diagnosis\"\n-                  />\n-                )}\n-              />\n-            </div>\n-\n-            <Controller\n-              name=\"medicalNotes\"\n-              control={control}\n-              render={({ field }) => (\n-                <Input\n-                  label=\"Medical Notes\"\n-                  multiline\n-                  rows={3}\n-                  {...field}\n-                  error={errors.medicalNotes?.message}\n-                  placeholder=\"Additional medical information, conditions, etc.\"\n-                />\n-              )}\n-            />\n-          </div>\n-\n-          {/* IEP Information */}\n-          <div className=\"space-y-4\">\n-            <h3 className=\"text-lg font-medium border-b pb-2\">\n-              IEP Information\n-            </h3>\n-            <Controller\n-              name=\"hasIEP\"\n-              control={control}\n-              render={({ field }) => (\n-                <label className=\"flex items-center gap-2\">\n-                  <input\n-                    type=\"checkbox\"\n-                    checked={field.value}\n-                    onChange={field.onChange}\n-                  />\n-                  <span>Student has an Individual Education Plan (IEP)</span>\n-                </label>\n-              )}\n-            />\n-\n-            {hasIEP && (\n-              <>\n-                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n-                  <Controller\n-                    name=\"iepStartDate\"\n-                    control={control}\n-                    render={({ field }) => (\n-                      <Input\n-                        label=\"IEP Start Date\"\n-                        type=\"date\"\n-                        {...field}\n-                        error={errors.iepStartDate?.message}\n-                      />\n-                    )}\n-                  />\n-                  <Controller\n-                    name=\"iepEndDate\"\n-                    control={control}\n-                    render={({ field }) => (\n-                      <Input\n-                        label=\"IEP End Date\"\n-                        type=\"date\"\n-                        {...field}\n-                        error={errors.iepEndDate?.message}\n-                      />\n-                    )}\n-                  />\n-                </div>\n-\n-                <Controller\n-                  name=\"iepGoals\"\n-                  control={control}\n-                  render={({ field }) => (\n-                    <Input\n-                      label=\"IEP Goals\"\n-                      multiline\n-                      rows={3}\n-                      {...field}\n-                      error={errors.iepGoals?.message}\n-                      placeholder=\"List the main goals of the IEP\"\n-                    />\n-                  )}\n-                />\n-\n-                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n-                  <Controller\n-                    name=\"accommodations\"\n-                    control={control}\n-                    render={({ field }) => (\n-                      <Input\n-                        label=\"Accommodations\"\n-                        multiline\n-                        rows={3}\n-                        {...field}\n-                        error={errors.accommodations?.message}\n-                        placeholder=\"List accommodations (e.g., extra time, quiet room)\"\n-                      />\n-                    )}\n-                  />\n-                  <Controller\n-                    name=\"modifications\"\n-                    control={control}\n-                    render={({ field }) => (\n-                      <Input\n-                        label=\"Modifications\"\n-                        multiline\n-                        rows={3}\n-                        {...field}\n-                        error={errors.modifications?.message}\n-                        placeholder=\"List curriculum modifications\"\n-                      />\n-                    )}\n-                  />\n-                </div>\n-              </>\n-            )}\n-          </div>\n-\n-          {/* Support Services */}\n-          <div className=\"space-y-4\">\n-            <h3 className=\"text-lg font-medium border-b pb-2\">\n-              Support Services\n-            </h3>\n-            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n-              {[\n-                { key: 'speechTherapy', label: 'Speech Therapy' },\n-                { key: 'occupationalTherapy', label: 'Occupational Therapy' },\n-                { key: 'physicalTherapy', label: 'Physical Therapy' },\n-                { key: 'counseling', label: 'Counseling Services' },\n-                { key: 'assistiveTechnology', label: 'Assistive Technology' },\n-              ].map(service => (\n-                <Controller\n-                  key={service.key}\n-                  name={service.key}\n-                  control={control}\n-                  render={({ field }) => (\n-                    <label className=\"flex items-center gap-2\">\n-                      <input\n-                        type=\"checkbox\"\n-                        checked={field.value}\n-                        onChange={field.onChange}\n-                      />\n-                      <span>{service.label}</span>\n-                    </label>\n-                  )}\n-                />\n-              ))}\n-            </div>\n-          </div>\n-\n-          {/* Emergency and Medication */}\n-          <div className=\"space-y-4\">\n-            <h3 className=\"text-lg font-medium border-b pb-2\">\n-              Emergency & Medication\n-\n-            <Controller\n               name=\"emergencyProcedures\"\n               control={control}\n               render={({ field }) => (\n                 <Input\n"
                },
                {
                    "date": 1755994925620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   History,\n } from 'lucide-react'\n import Table from '../../components/ui/Table'\n import Input from '../../components/ui/Input'\n-import Dialog from '../../components/ui/Dialog'\n+import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '../../components/ui/Dialog'\n import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n import ErrorState from '../../components/ui/ErrorState'\n import EmptyState from '../../components/ui/EmptyState'\n import Pagination from '../../components/ui/Pagination'\n@@ -42,9 +42,9 @@\n   disabilityType: z.enum(\n     ['physical', 'intellectual', 'sensory', 'multiple', 'other'],\n     {\n       required_error: 'Disability type is required',\n-    }\n+    },\n   ),\n   disabilityCategory: z.string().min(1, 'Category is required'),\n   severityLevel: z.enum(['mild', 'moderate', 'severe', 'profound'], {\n     required_error: 'Severity level is required',\n@@ -122,9 +122,9 @@\n         {severity?.charAt(0).toUpperCase() + severity?.slice(1)}\n       </span>\n     </div>\n   )\n-};\n+}\n \n const IEPStatusIndicator = ({ hasIEP, startDate, endDate }) => {\n   if (!hasIEP) {\n     return <span className=\"text-gray-500 text-sm\">No IEP</span>\n@@ -132,9 +132,9 @@\n \n   const now = new Date()\n   const start = new Date(startDate)\n   const end = new Date(endDate)\n-  \n+\n   const isActive = now >= start && now <= end\n   const isExpired = now > end\n \n   return (\n@@ -158,9 +158,9 @@\n         {isActive ? 'Active' : isExpired ? 'Expired' : 'Pending'}\n       </span>\n     </div>\n   )\n-};\n+}\n \n const StudentDetailsDrawer = ({ student, isOpen, onClose }) => {\n   const [activeTab, setActiveTab] = useState('overview')\n \n@@ -171,9 +171,9 @@\n     { id: 'medical', label: 'Medical', icon: Heart },\n     { id: 'iep', label: 'IEP', icon: Brain },\n     { id: 'services', label: 'Services', icon: Wheelchair },\n     { id: 'history', label: 'History', icon: History },\n-  ];\n+  ]\n \n   return (\n     <Dialog\n       open={isOpen}\n@@ -484,9 +484,9 @@\n         </div>\n       </div>\n     </Dialog>\n   )\n-};\n+}\n \n const AuditLogViewer = ({ entityType, entityId }) => {\n   const { data: auditLogs, isLoading } = useQuery({\n     queryKey: ['auditLog', entityType, entityId],\n@@ -537,9 +537,9 @@\n         </div>\n       )}\n     </div>\n   )\n-};\n+}\n \n const DisabledStudents = () => {\n   const [searchTerm, setSearchTerm] = useState('')\n   const [disabilityTypeFilter, setDisabilityTypeFilter] = useState('')\n@@ -568,9 +568,9 @@\n       medicationRequired: false,\n       parentConsent: false,\n       confidentialityLevel: 'restricted',\n       isActive: true,\n-    }\n+    },\n   })\n \n   const hasIEP = watch('hasIEP')\n   const medicationRequired = watch('medicationRequired')\n@@ -668,14 +668,14 @@\n       confidentialityLevel: student.confidentialityLevel,\n       isActive: student.isActive,\n     })\n     setShowEditDialog(true)\n-  };\n+  }\n \n   const handleViewDetails = student => {\n     setSelectedStudent(student)\n     setShowDetailsDrawer(true)\n-  };\n+  }\n \n   const onSubmit = data => {\n     if (selectedStudent) {\n       updateMutation.mutate({ id: selectedStudent.id, data })\n@@ -745,15 +745,15 @@\n           item.physicalTherapy && 'PT',\n           item.counseling && 'Counseling',\n           item.assistiveTechnology && 'AT',\n         ].filter(Boolean)\n-        \n+\n         return (\n           <div className=\"text-sm\">\n             {services.length > 0 ? services.join(', ') : 'None'}\n           </div>\n         )\n-      }\n+      },\n     },\n     {\n       key: 'confidentiality',\n       header: 'Access Level',\n@@ -798,13 +798,13 @@\n               label: 'IEP Document',\n               icon: FileText,\n               onClick: () => console.log('View IEP for', item.id),\n               disabled: !item.hasIEP,\n-            }\n+            },\n           ]}\n         />\n       ),\n-    }\n+    },\n   ]\n \n   if (isLoading) return <LoadingSkeleton />\n   if (error)\n@@ -952,9 +952,9 @@\n             <div className=\"p-6 border-t\">\n               <Pagination\n                 currentPage={currentPage}\n                 totalPages={Math.ceil(\n-                  (disabledStudentsData?.total || 0) / pageSize\n+                  (disabledStudentsData?.total || 0) / pageSize,\n                 )}\n                 onPageChange={setCurrentPage}\n               />\n             </div>\n@@ -1418,7 +1418,7 @@\n         }}\n       />\n     </div>\n   )\n-};\n+}\n \n\\ No newline at end of file\n-export default DisabledStudents\n+export default DisabledStudents\n"
                },
                {
                    "date": 1755995169575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   Upload,\n   Save,\n   History,\n } from 'lucide-react'\n-import Table from '../../components/ui/Table'\n+import { Table } from '../../components/ui/Table'\n import Input from '../../components/ui/Input'\n import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '../../components/ui/Dialog'\n import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n import ErrorState from '../../components/ui/ErrorState'\n@@ -1420,5 +1420,5 @@\n     </div>\n   )\n }\n \n-export default DisabledStudents\n\\ No newline at end of file\n+export default DisabledStudents\n"
                },
                {
                    "date": 1756039640519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n import ErrorState from '../../components/ui/ErrorState'\n import EmptyState from '../../components/ui/EmptyState'\n import Pagination from '../../components/ui/Pagination'\n-import Dropdown from '../../components/ui/Dropdown'\n+import { Dropdown } from '../../components/ui/Dropdown'\n import { disabledStudentsApi } from '../../lib/api/disabledStudents'\n import { studentsApi } from '../../lib/api/students'\n import { auditLogApi } from '../../lib/api/auditLog'\n \n"
                },
                {
                    "date": 1756039659512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   Eye,\n   FileText,\n   Heart,\n   Brain,\n-  Wheelchair,\n+\n   AlertTriangle,\n   CheckCircle,\n   Clock,\n   User,\n@@ -169,9 +169,9 @@\n   const tabs = [\n     { id: 'overview', label: 'Overview', icon: Eye },\n     { id: 'medical', label: 'Medical', icon: Heart },\n     { id: 'iep', label: 'IEP', icon: Brain },\n-    { id: 'services', label: 'Services', icon: Wheelchair },\n+    { id: 'services', label: 'Services', icon: WheelEvent },\n     { id: 'history', label: 'History', icon: History },\n   ]\n \n   return (\n"
                },
                {
                    "date": 1756039677856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,9 +836,9 @@\n       {/* Statistics Cards */}\n       <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n         <div className=\"bg-white p-4 rounded-lg shadow\">\n           <div className=\"flex items-center gap-3\">\n-            <Wheelchair className=\"w-8 h-8 text-blue-600\" />\n+            <WheelEvent className=\"w-8 h-8 text-blue-600\" />\n             <div>\n               <p className=\"text-2xl font-bold\">\n                 {disabledStudentsData?.total || 0}\n               </p>\n"
                }
            ],
            "date": 1755985893080,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react'\nimport { useState } from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { z } from 'zod'\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\nimport {\n  Plus,\n  Search,\n  Filter,\n  MoreHorizontal,\n  Edit,\n  Eye,\n  FileText,\n  Heart,\n  Brain,\n  Wheelchair,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  User,\n  Calendar,\n  Download,\n  Upload,\n  Save,\n  History,\n} from 'lucide-react'\nimport Table from '../../components/ui/Table'\nimport Input from '../../components/ui/Input'\nimport Dialog from '../../components/ui/Dialog'\nimport LoadingSkeleton from '../../components/ui/LoadingSkeleton'\nimport ErrorState from '../../components/ui/ErrorState'\nimport EmptyState from '../../components/ui/EmptyState'\nimport Pagination from '../../components/ui/Pagination'\nimport Dropdown from '../../components/ui/Dropdown'\nimport { disabledStudentsApi } from '../../lib/api/disabledStudents'\nimport { studentsApi } from '../../lib/api/students'\nimport { auditLogApi } from '../../lib/api/auditLog'\n\n// Validation Schema\nconst disabilityRecordSchema = z.object({\n  studentId: z.string().min(1, 'Student is required'),\n  disabilityType: z.enum(\n    ['physical', 'intellectual', 'sensory', 'multiple', 'other'],\n    {\n      required_error: 'Disability type is required',\n    }\n  ),\n  disabilityCategory: z.string().min(1, 'Category is required'),\n  severityLevel: z.enum(['mild', 'moderate', 'severe', 'profound'], {\n    required_error: 'Severity level is required',\n  }),\n  diagnosisDate: z.string().min(1, 'Diagnosis date is required'),\n  diagnostician: z.string().min(1, 'Diagnostician is required'),\n  medicalNotes: z.string().optional(),\n\n  // IEP Information\n  hasIEP: z.boolean().default(false),\n  iepStartDate: z.string().optional(),\n  iepEndDate: z.string().optional(),\n  iepGoals: z.string().optional(),\n  accommodations: z.string().optional(),\n  modifications: z.string().optional(),\n\n  // Support Services\n  speechTherapy: z.boolean().default(false),\n  occupationalTherapy: z.boolean().default(false),\n  physicalTherapy: z.boolean().default(false),\n  counseling: z.boolean().default(false),\n  assistiveTechnology: z.boolean().default(false),\n\n  // Additional Information\n  emergencyProcedures: z.string().optional(),\n  medicationRequired: z.boolean().default(false),\n  medicationDetails: z.string().optional(),\n  parentConsent: z.boolean().default(false),\n  confidentialityLevel: z.enum(['public', 'restricted', 'confidential'], {\n    required_error: 'Confidentiality level is required',\n  }),\n\n  isActive: z.boolean().default(true),\n})\n\nconst DisabilityStatusBadge = ({ type, severity }) => {\n  const getTypeColor = type => {\n    switch (type) {\n      case 'physical':\n        return 'bg-blue-100 text-blue-800'\n      case 'intellectual':\n        return 'bg-purple-100 text-purple-800'\n      case 'sensory':\n        return 'bg-green-100 text-green-800'\n      case 'multiple':\n        return 'bg-orange-100 text-orange-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getSeverityColor = severity => {\n    switch (severity) {\n      case 'mild':\n        return 'bg-yellow-100 text-yellow-800'\n      case 'moderate':\n        return 'bg-orange-100 text-orange-800'\n      case 'severe':\n        return 'bg-red-100 text-red-800'\n      case 'profound':\n        return 'bg-red-200 text-red-900'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col gap-1\">\n      <span className={`px-2 py-1 rounded-full text-xs ${getTypeColor(type)}`}>\n        {type?.charAt(0).toUpperCase() + type?.slice(1)}\n      </span>\n      <span\n        className={`px-2 py-1 rounded-full text-xs ${getSeverityColor(severity)}`}\n      >\n        {severity?.charAt(0).toUpperCase() + severity?.slice(1)}\n      </span>\n    </div>\n  )\n};\n\nconst IEPStatusIndicator = ({ hasIEP, startDate, endDate }) => {\n  if (!hasIEP) {\n    return <span className=\"text-gray-500 text-sm\">No IEP</span>\n  }\n\n  const now = new Date()\n  const start = new Date(startDate)\n  const end = new Date(endDate)\n  \n  const isActive = now >= start && now <= end\n  const isExpired = now > end\n\n  return (\n    <div className=\"flex items-center gap-2\">\n      {isActive ? (\n        <CheckCircle className=\"w-4 h-4 text-green-600\" />\n      ) : isExpired ? (\n        <AlertTriangle className=\"w-4 h-4 text-red-600\" />\n      ) : (\n        <Clock className=\"w-4 h-4 text-yellow-600\" />\n      )}\n      <span\n        className={`text-sm ${\n          isActive\n            ? 'text-green-600'\n            : isExpired\n              ? 'text-red-600'\n              : 'text-yellow-600'\n        }`}\n      >\n        {isActive ? 'Active' : isExpired ? 'Expired' : 'Pending'}\n      </span>\n    </div>\n  )\n};\n\nconst StudentDetailsDrawer = ({ student, isOpen, onClose }) => {\n  const [activeTab, setActiveTab] = useState('overview')\n\n  if (!student) return null\n\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: Eye },\n    { id: 'medical', label: 'Medical', icon: Heart },\n    { id: 'iep', label: 'IEP', icon: Brain },\n    { id: 'services', label: 'Services', icon: Wheelchair },\n    { id: 'history', label: 'History', icon: History },\n  ];\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      title={`${student.name} - Disability Profile`}\n      size=\"xl\"\n    >\n      <div className=\"space-y-6\">\n        {/* Student Header */}\n        <div className=\"flex items-center gap-4 p-4 bg-gray-50 rounded-lg\">\n          <div className=\"w-16 h-16 rounded-full overflow-hidden bg-gray-200\">\n            {student.photo ? (\n              <img\n                src={student.photo}\n                alt={student.name}\n                className=\"w-full h-full object-cover\"\n              />\n            ) : (\n              <div className=\"w-full h-full flex items-center justify-center\">\n                <User className=\"w-8 h-8 text-gray-400\" />\n              </div>\n            )}\n          </div>\n          <div>\n            <h3 className=\"text-xl font-semibold\">{student.name}</h3>\n            <p className=\"text-gray-600\">\n              Roll No: {student.rollNumber} | Class: {student.class?.name} -{' '}\n              {student.section?.name}\n            </p>\n            <div className=\"flex gap-2 mt-2\">\n              <DisabilityStatusBadge\n                type={student.disabilityType}\n                severity={student.severityLevel}\n              />\n              {student.hasIEP && (\n                <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">\n                  IEP Active\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"border-b\">\n          <nav className=\"flex space-x-8\">\n            {Array.isArray(tabs) &&\n              tabs.map(tab => (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2 ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700'\n                  }`}\n                >\n                  <tab.icon className=\"w-4 h-4\" />\n                  {tab.label}\n                </button>\n              ))}\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        <div className=\"min-h-96\">\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <h4 className=\"font-medium mb-3\">Disability Information</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Type:</span>\n                      <span className=\"capitalize\">\n                        {student.disabilityType}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Category:</span>\n                      <span>{student.disabilityCategory}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Severity:</span>\n                      <span className=\"capitalize\">\n                        {student.severityLevel}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Diagnosis Date:</span>\n                      <span>\n                        {new Date(student.diagnosisDate).toLocaleDateString()}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Diagnostician:</span>\n                      <span>{student.diagnostician}</span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-3\">Support Services</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    {[\n                      { key: 'speechTherapy', label: 'Speech Therapy' },\n                      {\n                        key: 'occupationalTherapy',\n                        label: 'Occupational Therapy',\n                      },\n                      { key: 'physicalTherapy', label: 'Physical Therapy' },\n                      { key: 'counseling', label: 'Counseling' },\n                      {\n                        key: 'assistiveTechnology',\n                        label: 'Assistive Technology',\n                      },\n                    ].map(service => (\n                      <div key={service.key} className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">{service.label}:</span>\n                        <span\n                          className={\n                            student[service.key]\n                              ? 'text-green-600'\n                              : 'text-gray-400'\n                          }\n                        >\n                          {student[service.key] ? 'Yes' : 'No'}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'medical' && (\n            <div className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-medium mb-2\">Medical Notes</h4>\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <p className=\"text-sm text-gray-700\">\n                    {student.medicalNotes || 'No medical notes available'}\n                  </p>\n                </div>\n              </div>\n\n              {student.medicationRequired && (\n                <div>\n                  <h4 className=\"font-medium mb-2\">Medication Details</h4>\n                  <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200\">\n                    <p className=\"text-sm text-yellow-800\">\n                      {student.medicationDetails ||\n                        'Medication required - details not specified'}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {student.emergencyProcedures && (\n                <div>\n                  <h4 className=\"font-medium mb-2\">Emergency Procedures</h4>\n                  <div className=\"bg-red-50 p-4 rounded-lg border border-red-200\">\n                    <p className=\"text-sm text-red-800\">\n                      {student.emergencyProcedures}\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'iep' && (\n            <div className=\"space-y-4\">\n              {student.hasIEP ? (\n                <>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <h4 className=\"font-medium mb-2\">IEP Period</h4>\n                      <div className=\"text-sm space-y-1\">\n                        <p>\n                          <span className=\"text-gray-600\">Start Date:</span>{' '}\n                          {new Date(student.iepStartDate).toLocaleDateString()}\n                        </p>\n                        <p>\n                          <span className=\"text-gray-600\">End Date:</span>{' '}\n                          {new Date(student.iepEndDate).toLocaleDateString()}\n                        </p>\n                        <IEPStatusIndicator\n                          hasIEP={student.hasIEP}\n                          startDate={student.iepStartDate}\n                          endDate={student.iepEndDate}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-medium mb-2\">IEP Goals</h4>\n                    <div className=\"bg-blue-50 p-4 rounded-lg\">\n                      <p className=\"text-sm text-blue-800\">\n                        {student.iepGoals || 'No IEP goals specified'}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <h4 className=\"font-medium mb-2\">Accommodations</h4>\n                      <div className=\"bg-green-50 p-4 rounded-lg\">\n                        <p className=\"text-sm text-green-800\">\n                          {student.accommodations ||\n                            'No accommodations specified'}\n                        </p>\n                      </div>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium mb-2\">Modifications</h4>\n                      <div className=\"bg-purple-50 p-4 rounded-lg\">\n                        <p className=\"text-sm text-purple-800\">\n                          {student.modifications ||\n                            'No modifications specified'}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <Brain className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n                  <p className=\"text-gray-500\">\n                    No IEP on file for this student\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'services' && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {[\n                  { key: 'speechTherapy', label: 'Speech Therapy', icon: '🗣️' },\n                  {\n                    key: 'occupationalTherapy',\n                    label: 'Occupational Therapy',\n                    icon: '🖐️',\n                  },\n                  {\n                    key: 'physicalTherapy',\n                    label: 'Physical Therapy',\n                    icon: '🏃',\n                  },\n                  { key: 'counseling', label: 'Counseling', icon: '💭' },\n                  {\n                    key: 'assistiveTechnology',\n                    label: 'Assistive Technology',\n                    icon: '💻',\n                  },\n                ].map(service => (\n                  <div\n                    key={service.key}\n                    className={`p-4 rounded-lg border-2 ${\n                      student[service.key]\n                        ? 'border-green-200 bg-green-50'\n                        : 'border-gray-200 bg-gray-50'\n                    }`}\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      <span className=\"text-2xl\">{service.icon}</span>\n                      <div>\n                        <h5 className=\"font-medium\">{service.label}</h5>\n                        <p\n                          className={`text-sm ${\n                            student[service.key]\n                              ? 'text-green-600'\n                              : 'text-gray-500'\n                          }`}\n                        >\n                          {student[service.key] ? 'Active' : 'Not Required'}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'history' && (\n            <AuditLogViewer\n              entityType=\"disabled_student\"\n              entityId={student.id}\n            />\n          )}\n        </div>\n\n        <div className=\"flex justify-end gap-2 pt-4 border-t\">\n          <button\n            onClick={onClose}\n            className=\"border px-4 py-2 rounded-lg hover:bg-gray-50\"\n          >\n            Close\n          </button>\n          <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\">\n            <Edit className=\"w-4 h-4\" />\n            Edit Profile\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  )\n};\n\nconst AuditLogViewer = ({ entityType, entityId }) => {\n  const { data: auditLogs, isLoading } = useQuery({\n    queryKey: ['auditLog', entityType, entityId],\n    queryFn: () => auditLogApi.getEntityLogs(entityType, entityId),\n  })\n\n  if (isLoading) return <LoadingSkeleton />\n\n  return (\n    <div className=\"space-y-4\">\n      {auditLogs?.data?.length > 0 ? (\n        <div className=\"space-y-3\">\n          {Array.isArray(auditLogs.data) &&\n            auditLogs.data.map((log, index) => (\n              <div key={index} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <p className=\"font-medium\">{log.action}</p>\n                    <p className=\"text-sm text-gray-600\">\n                      By {log.performedBy} on{' '}\n                      {new Date(log.timestamp).toLocaleString()}\n                    </p>\n                  </div>\n                  <span\n                    className={`px-2 py-1 rounded-full text-xs ${\n                      log.severity === 'high'\n                        ? 'bg-red-100 text-red-800'\n                        : log.severity === 'medium'\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-green-100 text-green-800'\n                    }`}\n                  >\n                    {log.severity}\n                  </span>\n                </div>\n                {log.details && (\n                  <div className=\"text-sm text-gray-700 bg-gray-50 p-2 rounded\">\n                    {log.details}\n                  </div>\n                )}\n              </div>\n            ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-8 text-gray-500\">\n          <History className=\"w-12 h-12 mx-auto mb-2 text-gray-300\" />\n          <p>No audit logs available</p>\n        </div>\n      )}\n    </div>\n  )\n};\n\nconst DisabledStudents = () => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [disabilityTypeFilter, setDisabilityTypeFilter] = useState('')\n  const [severityFilter, setSeverityFilter] = useState('')\n  const [iepFilter, setIepFilter] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [pageSize] = useState(10)\n  const [showCreateDialog, setShowCreateDialog] = useState(false)\n  const [showEditDialog, setShowEditDialog] = useState(false)\n  const [selectedStudent, setSelectedStudent] = useState(null)\n  const [showDetailsDrawer, setShowDetailsDrawer] = useState(false)\n\n  const queryClient = useQueryClient()\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    watch,\n    formState: { errors },\n  } = useForm({\n    resolver: zodResolver(disabilityRecordSchema),\n    mode: 'onChange',\n    defaultValues: {\n      hasIEP: false,\n      medicationRequired: false,\n      parentConsent: false,\n      confidentialityLevel: 'restricted',\n      isActive: true,\n    }\n  })\n\n  const hasIEP = watch('hasIEP')\n  const medicationRequired = watch('medicationRequired')\n\n  const {\n    data: disabledStudentsData,\n    isLoading,\n    error,\n  } = useQuery({\n    queryKey: [\n      'disabledStudents',\n      {\n        page: currentPage,\n        pageSize,\n        search: searchTerm,\n        disabilityType: disabilityTypeFilter,\n        severity: severityFilter,\n        hasIEP: iepFilter,\n      },\n    ],\n    queryFn: () =>\n      disabledStudentsApi.getAll({\n        page: currentPage,\n        pageSize,\n        search: searchTerm,\n        disabilityType: disabilityTypeFilter,\n        severity: severityFilter,\n        hasIEP: iepFilter,\n      }),\n  })\n\n  const { data: studentsData } = useQuery({\n    queryKey: ['students', 'available'],\n    queryFn: () => studentsApi.getAvailableForDisability(),\n  })\n\n  const createMutation = useMutation({\n    mutationFn: disabledStudentsApi.create,\n    onSuccess: () => {\n      queryClient.invalidateQueries(['disabledStudents'])\n      setShowCreateDialog(false)\n      reset()\n      // Log audit entry\n      auditLogApi.log({\n        action: 'CREATE_DISABILITY_RECORD',\n        entityType: 'disabled_student',\n        severity: 'medium',\n        details: 'New disability record created',\n      })\n    },\n  })\n\n  const updateMutation = useMutation({\n    mutationFn: ({ id, data }) => disabledStudentsApi.update(id, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries(['disabledStudents'])\n      setShowEditDialog(false)\n      reset()\n      // Log audit entry\n      auditLogApi.log({\n        action: 'UPDATE_DISABILITY_RECORD',\n        entityType: 'disabled_student',\n        entityId: selectedStudent?.id,\n        severity: 'medium',\n        details: 'Disability record updated',\n      })\n    },\n  })\n\n  const handleEdit = student => {\n    setSelectedStudent(student)\n    reset({\n      studentId: student.studentId,\n      disabilityType: student.disabilityType,\n      disabilityCategory: student.disabilityCategory,\n      severityLevel: student.severityLevel,\n      diagnosisDate: student.diagnosisDate?.split('T')[0],\n      diagnostician: student.diagnostician,\n      medicalNotes: student.medicalNotes || '',\n      hasIEP: student.hasIEP,\n      iepStartDate: student.iepStartDate?.split('T')[0] || '',\n      iepEndDate: student.iepEndDate?.split('T')[0] || '',\n      iepGoals: student.iepGoals || '',\n      accommodations: student.accommodations || '',\n      modifications: student.modifications || '',\n      speechTherapy: student.speechTherapy,\n      occupationalTherapy: student.occupationalTherapy,\n      physicalTherapy: student.physicalTherapy,\n      counseling: student.counseling,\n      assistiveTechnology: student.assistiveTechnology,\n      emergencyProcedures: student.emergencyProcedures || '',\n      medicationRequired: student.medicationRequired,\n      medicationDetails: student.medicationDetails || '',\n      parentConsent: student.parentConsent,\n      confidentialityLevel: student.confidentialityLevel,\n      isActive: student.isActive,\n    })\n    setShowEditDialog(true)\n  };\n\n  const handleViewDetails = student => {\n    setSelectedStudent(student)\n    setShowDetailsDrawer(true)\n  };\n\n  const onSubmit = data => {\n    if (selectedStudent) {\n      updateMutation.mutate({ id: selectedStudent.id, data })\n    } else {\n      createMutation.mutate(data)\n    }\n  }\n\n  const columns = [\n    {\n      key: 'student',\n      header: 'Student',\n      render: item => (\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-10 h-10 rounded-full overflow-hidden bg-gray-200\">\n            {item.student?.photo ? (\n              <img\n                src={item.student.photo}\n                alt={item.student.name}\n                className=\"w-full h-full object-cover\"\n              />\n            ) : (\n              <div className=\"w-full h-full flex items-center justify-center\">\n                <User className=\"w-5 h-5 text-gray-400\" />\n              </div>\n            )}\n          </div>\n          <div>\n            <p className=\"font-medium\">{item.student?.name}</p>\n            <p className=\"text-sm text-gray-500\">\n              {item.student?.rollNumber} | {item.student?.class?.name}-\n              {item.student?.section?.name}\n            </p>\n          </div>\n        </div>\n      ),\n    },\n    {\n      key: 'disability',\n      header: 'Disability',\n      render: item => (\n        <DisabilityStatusBadge\n          type={item.disabilityType}\n          severity={item.severityLevel}\n        />\n      ),\n    },\n    { key: 'disabilityCategory', header: 'Category' },\n    {\n      key: 'iep',\n      header: 'IEP Status',\n      render: item => (\n        <IEPStatusIndicator\n          hasIEP={item.hasIEP}\n          startDate={item.iepStartDate}\n          endDate={item.iepEndDate}\n        />\n      ),\n    },\n    {\n      key: 'services',\n      header: 'Services',\n      render: item => {\n        const services = [\n          item.speechTherapy && 'Speech',\n          item.occupationalTherapy && 'OT',\n          item.physicalTherapy && 'PT',\n          item.counseling && 'Counseling',\n          item.assistiveTechnology && 'AT',\n        ].filter(Boolean)\n        \n        return (\n          <div className=\"text-sm\">\n            {services.length > 0 ? services.join(', ') : 'None'}\n          </div>\n        )\n      }\n    },\n    {\n      key: 'confidentiality',\n      header: 'Access Level',\n      render: item => (\n        <span\n          className={`px-2 py-1 rounded-full text-xs ${\n            item.confidentialityLevel === 'public'\n              ? 'bg-green-100 text-green-800'\n              : item.confidentialityLevel === 'restricted'\n                ? 'bg-yellow-100 text-yellow-800'\n                : 'bg-red-100 text-red-800'\n          }`}\n        >\n          {item.confidentialityLevel?.charAt(0).toUpperCase() +\n            item.confidentialityLevel?.slice(1)}\n        </span>\n      ),\n    },\n    {\n      key: 'actions',\n      header: 'Actions',\n      render: item => (\n        <Dropdown\n          trigger={<MoreHorizontal className=\"w-4 h-4\" />}\n          items={[\n            {\n              label: 'View Details',\n              icon: Eye,\n              onClick: () => handleViewDetails(item),\n            },\n            {\n              label: 'Edit Record',\n              icon: Edit,\n              onClick: () => handleEdit(item),\n            },\n            {\n              label: 'Medical Notes',\n              icon: Heart,\n              onClick: () => console.log('View medical notes for', item.id),\n            },\n            {\n              label: 'IEP Document',\n              icon: FileText,\n              onClick: () => console.log('View IEP for', item.id),\n              disabled: !item.hasIEP,\n            }\n          ]}\n        />\n      ),\n    }\n  ]\n\n  if (isLoading) return <LoadingSkeleton />\n  if (error)\n    return <ErrorState message=\"Failed to load disabled students data\" />\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">Students with Disabilities</h1>\n        <div className=\"flex gap-2\">\n          <button className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n            <Download className=\"w-4 h-4\" />\n            Export Report\n          </button>\n          <button\n            onClick={() => {\n              reset()\n              setSelectedStudent(null)\n              setShowCreateDialog(true)\n            }}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center gap-2 hover:bg-blue-700\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            Add Record\n          </button>\n        </div>\n      </div>\n\n      {/* Statistics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Wheelchair className=\"w-8 h-8 text-blue-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">\n                {disabledStudentsData?.total || 0}\n              </p>\n              <p className=\"text-sm text-gray-600\">Total Students</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Brain className=\"w-8 h-8 text-purple-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">\n                {disabledStudentsData?.data?.filter(s => s.hasIEP).length || 0}\n              </p>\n              <p className=\"text-sm text-gray-600\">Active IEPs</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Heart className=\"w-8 h-8 text-red-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">\n                {disabledStudentsData?.data?.filter(s => s.medicationRequired)\n                  .length || 0}\n              </p>\n              <p className=\"text-sm text-gray-600\">Require Medication</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <AlertTriangle className=\"w-8 h-8 text-yellow-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">\n                {disabledStudentsData?.data?.filter(s => s.emergencyProcedures)\n                  .length || 0}\n              </p>\n              <p className=\"text-sm text-gray-600\">Emergency Protocols</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n          <div className=\"md:col-span-2\">\n            <Input\n              placeholder=\"Search students...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n              icon={Search}\n            />\n          </div>\n          <div>\n            <select\n              value={disabilityTypeFilter}\n              onChange={e => setDisabilityTypeFilter(e.target.value)}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"\">All Types</option>\n              <option value=\"physical\">Physical</option>\n              <option value=\"intellectual\">Intellectual</option>\n              <option value=\"sensory\">Sensory</option>\n              <option value=\"multiple\">Multiple</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          <div>\n            <select\n              value={severityFilter}\n              onChange={e => setSeverityFilter(e.target.value)}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"\">All Severities</option>\n              <option value=\"mild\">Mild</option>\n              <option value=\"moderate\">Moderate</option>\n              <option value=\"severe\">Severe</option>\n              <option value=\"profound\">Profound</option>\n            </select>\n          </div>\n          <div>\n            <select\n              value={iepFilter}\n              onChange={e => setIepFilter(e.target.value)}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"\">All IEP Status</option>\n              <option value=\"true\">Has IEP</option>\n              <option value=\"false\">No IEP</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Students Table */}\n      <div className=\"bg-white rounded-lg shadow\">\n        {disabledStudentsData?.data?.length === 0 ? (\n          <EmptyState\n            title=\"No disability records found\"\n            description=\"No students match your current filters\"\n            action={{\n              label: 'Add Record',\n              onClick: () => setShowCreateDialog(true),\n            }}\n          />\n        ) : (\n          <>\n            <Table data={disabledStudentsData?.data || []} columns={columns} />\n            <div className=\"p-6 border-t\">\n              <Pagination\n                currentPage={currentPage}\n                totalPages={Math.ceil(\n                  (disabledStudentsData?.total || 0) / pageSize\n                )}\n                onPageChange={setCurrentPage}\n              />\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* Create/Edit Dialog */}\n      <Dialog\n        open={showCreateDialog || showEditDialog}\n        onClose={() => {\n          setShowCreateDialog(false)\n          setShowEditDialog(false)\n          reset()\n          setSelectedStudent(null)\n        }}\n        title={\n          selectedStudent ? 'Edit Disability Record' : 'Add Disability Record'\n        }\n        size=\"xl\"\n      >\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n          {/* Student Selection */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Controller\n              name=\"studentId\"\n              control={control}\n              render={({ field }) => (\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">\n                    Student *\n                  </label>\n                  <select\n                    {...field}\n                    disabled={!!selectedStudent}\n                    className={`w-full border rounded-lg px-3 py-2 ${\n                      errors.studentId ? 'border-red-500' : ''\n                    } ${selectedStudent ? 'bg-gray-100' : ''}`}\n                  >\n                    <option value=\"\">Select Student</option>\n                    {Array.isArray(studentsData?.data) &&\n                      studentsData.data.map(student => (\n                        <option key={student.id} value={student.id}>\n                          {student.name} - {student.rollNumber}\n                        </option>\n                      ))}\n                  </select>\n                  {errors.studentId && (\n                    <p className=\"text-red-500 text-sm mt-1\">\n                      {errors.studentId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            />\n            <Controller\n              name=\"confidentialityLevel\"\n              control={control}\n              render={({ field }) => (\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">\n                    Confidentiality Level *\n                  </label>\n                  <select\n                    {...field}\n                    className={`w-full border rounded-lg px-3 py-2 ${\n                      errors.confidentialityLevel ? 'border-red-500' : ''\n                    }`}\n                  >\n                    <option value=\"public\">Public</option>\n                    <option value=\"restricted\">Restricted</option>\n                    <option value=\"confidential\">Confidential</option>\n                  </select>\n                  {errors.confidentialityLevel && (\n                    <p className=\"text-red-500 text-sm mt-1\">\n                      {errors.confidentialityLevel.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            />\n          </div>\n\n          {/* Disability Information */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium border-b pb-2\">\n              Disability Information\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <Controller\n                name=\"disabilityType\"\n                control={control}\n                render={({ field }) => (\n                  <div>\n                    <label className=\"block text-sm font-medium mb-1\">\n                      Disability Type *\n                    </label>\n                    <select\n                      {...field}\n                      className={`w-full border rounded-lg px-3 py-2 ${\n                        errors.disabilityType ? 'border-red-500' : ''\n                      }`}\n                    >\n                      <option value=\"\">Select Type</option>\n                      <option value=\"physical\">Physical</option>\n                      <option value=\"intellectual\">Intellectual</option>\n                      <option value=\"sensory\">Sensory</option>\n                      <option value=\"multiple\">Multiple</option>\n                      <option value=\"other\">Other</option>\n                    </select>\n                    {errors.disabilityType && (\n                      <p className=\"text-red-500 text-sm mt-1\">\n                        {errors.disabilityType.message}\n                      </p>\n                    )}\n                  </div>\n                )}\n              />\n              <Controller\n                name=\"severityLevel\"\n                control={control}\n                render={({ field }) => (\n                  <div>\n                    <label className=\"block text-sm font-medium mb-1\">\n                      Severity Level *\n                    </label>\n                    <select\n                      {...field}\n                      className={`w-full border rounded-lg px-3 py-2 ${\n                        errors.severityLevel ? 'border-red-500' : ''\n                      }`}\n                    >\n                      <option value=\"\">Select Severity</option>\n                      <option value=\"mild\">Mild</option>\n                      <option value=\"moderate\">Moderate</option>\n                      <option value=\"severe\">Severe</option>\n                      <option value=\"profound\">Profound</option>\n                    </select>\n                    {errors.severityLevel && (\n                      <p className=\"text-red-500 text-sm mt-1\">\n                        {errors.severityLevel.message}\n                      </p>\n                    )}\n                  </div>\n                )}\n              />\n            </div>\n\n            <Controller\n              name=\"disabilityCategory\"\n              control={control}\n              render={({ field }) => (\n                <Input\n                  label=\"Disability Category *\"\n                  {...field}\n                  error={errors.disabilityCategory?.message}\n                  placeholder=\"e.g., Autism Spectrum Disorder, Cerebral Palsy, etc.\"\n                />\n              )}\n            />\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <Controller\n                name=\"diagnosisDate\"\n                control={control}\n                render={({ field }) => (\n                  <Input\n                    label=\"Diagnosis Date *\"\n                    type=\"date\"\n                    {...field}\n                    error={errors.diagnosisDate?.message}\n                  />\n                )}\n              />\n              <Controller\n                name=\"diagnostician\"\n                control={control}\n                render={({ field }) => (\n                  <Input\n                    label=\"Diagnostician *\"\n                    {...field}\n                    error={errors.diagnostician?.message}\n                    placeholder=\"Doctor/Professional who made the diagnosis\"\n                  />\n                )}\n              />\n            </div>\n\n            <Controller\n              name=\"medicalNotes\"\n              control={control}\n              render={({ field }) => (\n                <Input\n                  label=\"Medical Notes\"\n                  multiline\n                  rows={3}\n                  {...field}\n                  error={errors.medicalNotes?.message}\n                  placeholder=\"Additional medical information, conditions, etc.\"\n                />\n              )}\n            />\n          </div>\n\n          {/* IEP Information */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium border-b pb-2\">\n              IEP Information\n            </h3>\n            <Controller\n              name=\"hasIEP\"\n              control={control}\n              render={({ field }) => (\n                <label className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={field.value}\n                    onChange={field.onChange}\n                  />\n                  <span>Student has an Individual Education Plan (IEP)</span>\n                </label>\n              )}\n            />\n\n            {hasIEP && (\n              <>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <Controller\n                    name=\"iepStartDate\"\n                    control={control}\n                    render={({ field }) => (\n                      <Input\n                        label=\"IEP Start Date\"\n                        type=\"date\"\n                        {...field}\n                        error={errors.iepStartDate?.message}\n                      />\n                    )}\n                  />\n                  <Controller\n                    name=\"iepEndDate\"\n                    control={control}\n                    render={({ field }) => (\n                      <Input\n                        label=\"IEP End Date\"\n                        type=\"date\"\n                        {...field}\n                        error={errors.iepEndDate?.message}\n                      />\n                    )}\n                  />\n                </div>\n\n                <Controller\n                  name=\"iepGoals\"\n                  control={control}\n                  render={({ field }) => (\n                    <Input\n                      label=\"IEP Goals\"\n                      multiline\n                      rows={3}\n                      {...field}\n                      error={errors.iepGoals?.message}\n                      placeholder=\"List the main goals of the IEP\"\n                    />\n                  )}\n                />\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <Controller\n                    name=\"accommodations\"\n                    control={control}\n                    render={({ field }) => (\n                      <Input\n                        label=\"Accommodations\"\n                        multiline\n                        rows={3}\n                        {...field}\n                        error={errors.accommodations?.message}\n                        placeholder=\"List accommodations (e.g., extra time, quiet room)\"\n                      />\n                    )}\n                  />\n                  <Controller\n                    name=\"modifications\"\n                    control={control}\n                    render={({ field }) => (\n                      <Input\n                        label=\"Modifications\"\n                        multiline\n                        rows={3}\n                        {...field}\n                        error={errors.modifications?.message}\n                        placeholder=\"List curriculum modifications\"\n                      />\n                    )}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n\n          {/* Support Services */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium border-b pb-2\">\n              Support Services\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {[\n                { key: 'speechTherapy', label: 'Speech Therapy' },\n                { key: 'occupationalTherapy', label: 'Occupational Therapy' },\n                { key: 'physicalTherapy', label: 'Physical Therapy' },\n                { key: 'counseling', label: 'Counseling Services' },\n                { key: 'assistiveTechnology', label: 'Assistive Technology' },\n              ].map(service => (\n                <Controller\n                  key={service.key}\n                  name={service.key}\n                  control={control}\n                  render={({ field }) => (\n                    <label className=\"flex items-center gap-2\">\n                      <input\n                        type=\"checkbox\"\n                        checked={field.value}\n                        onChange={field.onChange}\n                      />\n                      <span>{service.label}</span>\n                    </label>\n                  )}\n                />\n              ))}\n            </div>\n          </div>\n\n          {/* Emergency and Medication */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium border-b pb-2\">\n              Emergency & Medication\n\n            <Controller\n              name=\"emergencyProcedures\"\n              control={control}\n              render={({ field }) => (\n                <Input\n                  label=\"Emergency Procedures\"\n                  multiline\n                  rows={3}\n                  {...field}\n                  error={errors.emergencyProcedures?.message}\n                  placeholder=\"Special procedures in case of emergency\"\n                />\n              )}\n            />\n\n            <Controller\n              name=\"medicationRequired\"\n              control={control}\n              render={({ field }) => (\n                <label className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={field.value}\n                    onChange={field.onChange}\n                  />\n                  <span>Student requires medication during school hours</span>\n                </label>\n              )}\n            />\n\n            {medicationRequired && (\n              <Controller\n                name=\"medicationDetails\"\n                control={control}\n                render={({ field }) => (\n                  <Input\n                    label=\"Medication Details\"\n                    multiline\n                    rows={3}\n                    {...field}\n                    error={errors.medicationDetails?.message}\n                    placeholder=\"Medication name, dosage, timing, administration instructions\"\n                  />\n                )}\n              />\n            )}\n          </div>\n\n          {/* Consent */}\n          <div className=\"space-y-4\">\n            <Controller\n              name=\"parentConsent\"\n              control={control}\n              render={({ field }) => (\n                <label className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={field.value}\n                    onChange={field.onChange}\n                  />\n                  <span>\n                    Parent/Guardian consent obtained for sharing disability\n                    information\n                  </span>\n                </label>\n              )}\n            />\n\n            <Controller\n              name=\"isActive\"\n              control={control}\n              render={({ field }) => (\n                <label className=\"flex items-center gap-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={field.value}\n                    onChange={field.onChange}\n                  />\n                  <span>Record is active</span>\n                </label>\n              )}\n            />\n          </div>\n\n          <div className=\"flex gap-2 pt-4\">\n            <button\n              type=\"submit\"\n              disabled={createMutation.isPending || updateMutation.isPending}\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2\"\n            >\n              <Save className=\"w-4 h-4\" />\n              {createMutation.isPending || updateMutation.isPending\n                ? 'Saving...'\n                : selectedStudent\n                  ? 'Update Record'\n                  : 'Create Record'}\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setShowCreateDialog(false)\n                setShowEditDialog(false)\n                reset()\n                setSelectedStudent(null)\n              }}\n              className=\"border px-6 py-2 rounded-lg hover:bg-gray-50\"\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </Dialog>\n\n      {/* Student Details Drawer */}\n      <StudentDetailsDrawer\n        student={selectedStudent}\n        isOpen={showDetailsDrawer}\n        onClose={() => {\n          setShowDetailsDrawer(false)\n          setSelectedStudent(null)\n        }}\n      />\n    </div>\n  )\n};\n\nexport default DisabledStudents"
        }
    ]
}