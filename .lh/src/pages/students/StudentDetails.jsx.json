{
    "sourceFile": "src/pages/students/StudentDetails.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1755994925599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755995169612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   MapPin,\n   FileText,\n   Camera,\n } from 'lucide-react'\n-import Table from '../../components/ui/Table'\n+import { Table } from '../../components/ui/Table'\n import Input from '../../components/ui/Input'\n import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '../../components/ui/Dialog'\n import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n import ErrorState from '../../components/ui/ErrorState'\n"
                },
                {
                    "date": 1756039695824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n import ErrorState from '../../components/ui/ErrorState'\n import EmptyState from '../../components/ui/EmptyState'\n import Pagination from '../../components/ui/Pagination'\n-import Dropdown from '../../components/ui/Dropdown'\n+import { Dropdown } from '../../components/ui/Dropdown'\n import { studentsApi } from '../../lib/api/students'\n import { classesApi } from '../../lib/api/classes'\n import { sectionsApi } from '../../lib/api/sections'\n import { studentCategoriesApi } from '../../lib/api/studentCategories'\n"
                }
            ],
            "date": 1755994925599,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport {\n  Search,\n  Filter,\n  Download,\n  Eye,\n  Edit,\n  MoreHorizontal,\n  Users,\n  GraduationCap,\n  Home,\n  Phone,\n  Mail,\n  Calendar,\n  MapPin,\n  FileText,\n  Camera,\n} from 'lucide-react'\nimport Table from '../../components/ui/Table'\nimport Input from '../../components/ui/Input'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '../../components/ui/Dialog'\nimport LoadingSkeleton from '../../components/ui/LoadingSkeleton'\nimport ErrorState from '../../components/ui/ErrorState'\nimport EmptyState from '../../components/ui/EmptyState'\nimport Pagination from '../../components/ui/Pagination'\nimport Dropdown from '../../components/ui/Dropdown'\nimport { studentsApi } from '../../lib/api/students'\nimport { classesApi } from '../../lib/api/classes'\nimport { sectionsApi } from '../../lib/api/sections'\nimport { studentCategoriesApi } from '../../lib/api/studentCategories'\nimport { studentHousesApi } from '../../lib/api/studentHouses'\nimport { exportToPDF, exportToCSV } from '../../lib/export'\n\nconst StudentProfileDrawer = ({ student, isOpen, onClose }) => {\n  if (!student) return null\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      title={`${student.name} - Profile`}\n      size=\"lg\"\n    >\n      <div className=\"space-y-6\">\n        {/* Header with Photo */}\n        <div className=\"flex items-center gap-4 p-4 bg-gray-50 rounded-lg\">\n          <div className=\"relative\">\n            {student.photo ? (\n              <img\n                src={student.photo}\n                alt={student.name}\n                className=\"w-20 h-20 rounded-full object-cover border-4 border-white shadow\"\n              />\n            ) : (\n              <div className=\"w-20 h-20 rounded-full bg-gray-300 flex items-center justify-center\">\n                <Users className=\"w-8 h-8 text-gray-500\" />\n              </div>\n            )}\n            <button className=\"absolute bottom-0 right-0 bg-blue-600 text-white p-1 rounded-full hover:bg-blue-700\">\n              <Camera className=\"w-3 h-3\" />\n            </button>\n          </div>\n          <div>\n            <h3 className=\"text-xl font-semibold\">{student.name}</h3>\n            <p className=\"text-gray-600\">Roll No: {student.rollNumber}</p>\n            <p className=\"text-gray-600\">\n              {student.class?.name} - {student.section?.name}\n            </p>\n            <div className=\"flex gap-2 mt-2\">\n              <span\n                className={`px-2 py-1 rounded-full text-xs ${\n                  student.isActive\n                    ? 'bg-green-100 text-green-800'\n                    : 'bg-red-100 text-red-800'\n                }`}\n              >\n                {student.isActive ? 'Active' : 'Inactive'}\n              </span>\n              {student.category && (\n                <span className=\"px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-800\">\n                  {student.category.name}\n                </span>\n              )}\n              {student.house && (\n                <span className=\"px-2 py-1 rounded-full text-xs bg-purple-100 text-purple-800\">\n                  {student.house.name}\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Personal Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-4\">\n            <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n              <Users className=\"w-4 h-4\" />\n              Personal Information\n            </h4>\n            <div className=\"space-y-3 text-sm\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Date of Birth:</span>\n                <span>\n                  {new Date(student.dateOfBirth).toLocaleDateString()}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Gender:</span>\n                <span className=\"capitalize\">{student.gender}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Blood Group:</span>\n                <span>{student.bloodGroup || 'N/A'}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Religion:</span>\n                <span>{student.religion || 'N/A'}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Nationality:</span>\n                <span>{student.nationality || 'N/A'}</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"space-y-4\">\n            <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n              <Phone className=\"w-4 h-4\" />\n              Contact Information\n            </h4>\n            <div className=\"space-y-3 text-sm\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Mobile:</span>\n                <span>{student.mobile || 'N/A'}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Email:</span>\n                <span>{student.email || 'N/A'}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Emergency Contact:</span>\n                <span>{student.emergencyContact || 'N/A'}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Address */}\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n            <MapPin className=\"w-4 h-4\" />\n            Address\n          </h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600 block\">Current Address:</span>\n              <p className=\"mt-1\">{student.currentAddress || 'N/A'}</p>\n            </div>\n            <div>\n              <span className=\"text-gray-600 block\">Permanent Address:</span>\n              <p className=\"mt-1\">{student.permanentAddress || 'N/A'}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Guardian Information */}\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n            <Users className=\"w-4 h-4\" />\n            Guardian Information\n          </h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-3 text-sm\">\n              <h5 className=\"font-medium\">Father Details</h5>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Name:</span>\n                  <span>{student.fatherName || 'N/A'}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Occupation:</span>\n                  <span>{student.fatherOccupation || 'N/A'}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Mobile:</span>\n                  <span>{student.fatherMobile || 'N/A'}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"space-y-3 text-sm\">\n              <h5 className=\"font-medium\">Mother Details</h5>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Name:</span>\n                  <span>{student.motherName || 'N/A'}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Occupation:</span>\n                  <span>{student.motherOccupation || 'N/A'}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Mobile:</span>\n                  <span>{student.motherMobile || 'N/A'}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Academic Information */}\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n            <GraduationCap className=\"w-4 h-4\" />\n            Academic Information\n          </h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">Admission Date:</span>\n              <span>\n                {new Date(student.admissionDate).toLocaleDateString()}\n              </span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">Academic Year:</span>\n              <span>{student.academicYear || 'N/A'}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">Previous School:</span>\n              <span>{student.previousSchool || 'N/A'}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Documents */}\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n            <FileText className=\"w-4 h-4\" />\n            Documents\n          </h4>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            {student.documents?.map((doc, index) => (\n              <div key={index} className=\"border rounded-lg p-3 text-center\">\n                <FileText className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n                <p className=\"text-xs text-gray-600\">{doc.name}</p>\n                <button className=\"text-blue-600 text-xs mt-1 hover:underline\">\n                  View\n                </button>\n              </div>\n            )) || (\n              <p className=\"text-gray-500 text-sm col-span-full\">\n                No documents uploaded\n              </p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-2 pt-4 border-t\">\n          <button\n            onClick={onClose}\n            className=\"border px-4 py-2 rounded-lg hover:bg-gray-50\"\n          >\n            Close\n          </button>\n          <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\">\n            <Edit className=\"w-4 h-4\" />\n            Edit Profile\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  )\n}\n\nconst StudentDetails = () => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedClass, setSelectedClass] = useState('')\n  const [selectedSection, setSelectedSection] = useState('')\n  const [selectedCategory, setSelectedCategory] = useState('')\n  const [selectedHouse, setSelectedHouse] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [pageSize] = useState(10)\n  const [selectedStudent, setSelectedStudent] = useState(null)\n  const [showProfileDrawer, setShowProfileDrawer] = useState(false)\n\n  const {\n    data: studentsData,\n    isLoading,\n    error,\n  } = useQuery({\n    queryKey: [\n      'students',\n      {\n        page: currentPage,\n        pageSize,\n        search: searchTerm,\n        classId: selectedClass,\n        sectionId: selectedSection,\n        categoryId: selectedCategory,\n        houseId: selectedHouse,\n      },\n    ],\n    queryFn: () =>\n      studentsApi.getAll({\n        page: currentPage,\n        pageSize,\n        search: searchTerm,\n        classId: selectedClass,\n        sectionId: selectedSection,\n        categoryId: selectedCategory,\n        houseId: selectedHouse,\n      }),\n  })\n\n  const { data: classesData } = useQuery({\n    queryKey: ['classes', 'all'],\n    queryFn: () => classesApi.getAll({ all: true }),\n  })\n\n  const { data: sectionsData } = useQuery({\n    queryKey: ['sections', 'by-class', selectedClass],\n    queryFn: () => sectionsApi.getByClass(selectedClass),\n    enabled: !!selectedClass,\n  })\n\n  const { data: categoriesData } = useQuery({\n    queryKey: ['studentCategories', 'all'],\n    queryFn: () => studentCategoriesApi.getAll({ all: true }),\n  })\n\n  const { data: housesData } = useQuery({\n    queryKey: ['studentHouses', 'all'],\n    queryFn: () => studentHousesApi.getAll({ all: true }),\n  })\n\n  const handleViewProfile = student => {\n    setSelectedStudent(student)\n    setShowProfileDrawer(true)\n  }\n\n  const handleExportCSV = () => {\n    const csvData =\n      studentsData?.data?.map(student => ({\n        'Roll Number': student.rollNumber,\n        Name: student.name,\n        Class: student.class?.name,\n        Section: student.section?.name,\n        Category: student.category?.name || '',\n        House: student.house?.name || '',\n        'Father Name': student.fatherName,\n        Mobile: student.mobile,\n        Email: student.email,\n        'Date of Birth': new Date(student.dateOfBirth).toLocaleDateString(),\n        'Admission Date': new Date(student.admissionDate).toLocaleDateString(),\n        Status: student.isActive ? 'Active' : 'Inactive',\n      })) || []\n\n    exportToCSV(csvData, 'students-list.csv')\n  }\n\n  const handleExportPDF = () => {\n    const pdfData = {\n      title: 'Students List',\n      headers: ['Roll No', 'Name', 'Class', 'Section', 'Father Name', 'Mobile'],\n      data:\n        studentsData?.data?.map(student => [\n          student.rollNumber,\n          student.name,\n          student.class?.name,\n          student.section?.name,\n          student.fatherName,\n          student.mobile,\n        ]) || [],\n    }\n\n    exportToPDF(pdfData, 'students-list.pdf')\n  }\n\n  const columns = [\n    {\n      key: 'photo',\n      header: 'Photo',\n      render: student => (\n        <div className=\"w-10 h-10 rounded-full overflow-hidden bg-gray-200\">\n          {student.photo ? (\n            <img\n              src={student.photo}\n              alt={student.name}\n              className=\"w-full h-full object-cover\"\n            />\n          ) : (\n            <div className=\"w-full h-full flex items-center justify-center\">\n              <Users className=\"w-5 h-5 text-gray-400\" />\n            </div>\n          )}\n        </div>\n      ),\n    },\n    { key: 'rollNumber', header: 'Roll No', sortable: true },\n    { key: 'name', header: 'Name', sortable: true },\n    {\n      key: 'class',\n      header: 'Class',\n      render: student => `${student.class?.name} - ${student.section?.name}`,\n    },\n    {\n      key: 'category',\n      header: 'Category',\n      render: student => student.category?.name || 'N/A',\n    },\n    {\n      key: 'house',\n      header: 'House',\n      render: student => student.house?.name || 'N/A',\n    },\n    { key: 'fatherName', header: 'Father Name' },\n    { key: 'mobile', header: 'Mobile' },\n    {\n      key: 'status',\n      header: 'Status',\n      render: student => (\n        <span\n          className={`px-2 py-1 rounded-full text-xs ${\n            student.isActive\n              ? 'bg-green-100 text-green-800'\n              : 'bg-red-100 text-red-800'\n          }`}\n        >\n          {student.isActive ? 'Active' : 'Inactive'}\n        </span>\n      ),\n    },\n    {\n      key: 'actions',\n      header: 'Actions',\n      render: student => (\n        <Dropdown\n          trigger={<MoreHorizontal className=\"w-4 h-4\" />}\n          items={[\n            {\n              label: 'View Profile',\n              icon: Eye,\n              onClick: () => handleViewProfile(student),\n            },\n            {\n              label: 'Edit',\n              icon: Edit,\n              onClick: () => console.log('Edit student', student.id),\n            },\n          ]}\n        />\n      ),\n    },\n  ]\n\n  if (isLoading) return <LoadingSkeleton />\n  if (error) return <ErrorState message=\"Failed to load students\" />\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">Student Details</h1>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={handleExportCSV}\n            className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\"\n          >\n            <Download className=\"w-4 h-4\" />\n            Export CSV\n          </button>\n          <button\n            onClick={handleExportPDF}\n            className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\"\n          >\n            <Download className=\"w-4 h-4\" />\n            Export PDF\n          </button>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4\">\n          <div className=\"md:col-span-2\">\n            <Input\n              placeholder=\"Search students...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n              icon={Search}\n            />\n          </div>\n          <div>\n            <select\n              value={selectedClass}\n              onChange={e => {\n                setSelectedClass(e.target.value)\n                setSelectedSection('')\n              }}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"\">All Classes</option>\n              {Array.isArray(classesData?.data) &&\n                classesData.data.map(cls => (\n                  <option key={cls.id} value={cls.id}>\n                    {cls.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div>\n            <select\n              value={selectedSection}\n              onChange={e => setSelectedSection(e.target.value)}\n              disabled={!selectedClass}\n              className=\"w-full border rounded-lg px-3 py-2 disabled:bg-gray-100\"\n            >\n              <option value=\"\">All Sections</option>\n              {Array.isArray(sectionsData?.data) &&\n                sectionsData.data.map(section => (\n                  <option key={section.id} value={section.id}>\n                    {section.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div>\n            <select\n              value={selectedCategory}\n              onChange={e => setSelectedCategory(e.target.value)}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"\">All Categories</option>\n              {Array.isArray(categoriesData?.data) &&\n                categoriesData.data.map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div>\n            <select\n              value={selectedHouse}\n              onChange={e => setSelectedHouse(e.target.value)}\n              className=\"w-full border rounded-lg px-3 py-2\"\n            >\n              <option value=\"\">All Houses</option>\n              {housesData?.data?.map(house => (\n                <option key={house.id} value={house.id}>\n                  {house.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Students Table */}\n      <div className=\"bg-white rounded-lg shadow\">\n        {studentsData?.data?.length === 0 ? (\n          <EmptyState\n            title=\"No students found\"\n            description=\"No students match your current filters\"\n          />\n        ) : (\n          <>\n            <Table data={studentsData?.data || []} columns={columns} />\n            <div className=\"p-6 border-t\">\n              <Pagination\n                currentPage={currentPage}\n                totalPages={Math.ceil((studentsData?.total || 0) / pageSize)}\n                onPageChange={setCurrentPage}\n              />\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* Profile Drawer */}\n      <StudentProfileDrawer\n        student={selectedStudent}\n        isOpen={showProfileDrawer}\n        onClose={() => {\n          setShowProfileDrawer(false)\n          setSelectedStudent(null)\n        }}\n      />\n    </div>\n  )\n}\n\nexport default StudentDetails\n"
        }
    ]
}