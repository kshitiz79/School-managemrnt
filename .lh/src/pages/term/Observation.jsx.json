{
    "sourceFile": "src/pages/term/Observation.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1755986163481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755988846034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useState } from 'react';\n-import { useState } from 'react'\n import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\n import { \n   Eye,\n   User,\n"
                },
                {
                    "date": 1755989259887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         case 'E': return 3;\n         default: return 0;\n       }\n     });\n-    const avg = Array.isArray(gradePoints) ? gradePoints.reduce((sum, p) => sum + p, 0) / gradePoints.length;\n+    const avg = Array.isArray(gradePoints) ? gradePoints.reduce((sum, p) => sum + p, 0) / gradePoints.length\n     \n     if (avg >= 9.5) return 'A+';\n     if (avg >= 8.5) return 'A';\n     if (avg >= 7.5) return 'B+';\n"
                },
                {
                    "date": 1755990676774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         case 'E': return 3;\n         default: return 0;\n       }\n     });\n-    const avg = Array.isArray(gradePoints) ? gradePoints.reduce((sum, p) => sum + p, 0) / gradePoints.length\n+    const avg = Array.isArray(gradePoints) ? gradePoints.reduce((sum, p) => sum + p, 0) / gradePoints.length : 0;\n     \n     if (avg >= 9.5) return 'A+';\n     if (avg >= 8.5) return 'A';\n     if (avg >= 7.5) return 'B+';\n"
                },
                {
                    "date": 1755990825031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,9 +316,9 @@\n     const total = filteredObservations.length;\n     const gradeDistribution = filteredObservations.reduce((acc, obs) => {\n       obs.parameters.forEach(param => {\n         acc[param.grade] = (acc[param.grade] || 0) + 1;\n-      }) : 0;\n+      });\n       return acc;\n     }, {});\n \n     return {\n"
                },
                {
                    "date": 1755994925615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-import React, { useState } from 'react';\n-import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\n-import { \n+import React, { useState } from 'react'\n+import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\n+import {\n   Eye,\n   User,\n   Calendar,\n   BookOpen,\n@@ -13,54 +13,74 @@\n   Plus,\n   Edit,\n   FileText,\n   Award,\n-  Target\n-} from 'lucide-react';\n-import Input from '../../components/ui/Input';\n-import Dialog from '../../components/ui/Dialog';\n-import LoadingSkeleton from '../../components/ui/LoadingSkeleton';\n-import { observationApi } from '../../lib/api/observation';\n+  Target,\n+} from 'lucide-react'\n+import Input from '../../components/ui/Input'\n+import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '../../components/ui/Dialog'\n+import LoadingSkeleton from '../../components/ui/LoadingSkeleton'\n+import { observationApi } from '../../lib/api/observation'\n \n const ObservationCard = ({ observation, onView, onEdit }) => {\n-  const getGradeColor = (grade) => {\n+  const getGradeColor = grade => {\n     switch (grade) {\n-      case 'A+': case 'A': return 'text-green-600 bg-green-100';\n-      case 'B+': case 'B': return 'text-blue-600 bg-blue-100';\n-      case 'C+': case 'C': return 'text-yellow-600 bg-yellow-100';\n-      case 'D': case 'E': return 'text-red-600 bg-red-100';\n-      default: return 'text-gray-600 bg-gray-100';\n+      case 'A+':\n+      case 'A':\n+        return 'text-green-600 bg-green-100'\n+      case 'B+':\n+      case 'B':\n+        return 'text-blue-600 bg-blue-100'\n+      case 'C+':\n+      case 'C':\n+        return 'text-yellow-600 bg-yellow-100'\n+      case 'D':\n+      case 'E':\n+        return 'text-red-600 bg-red-100'\n+      default:\n+        return 'text-gray-600 bg-gray-100'\n     }\n-  };\n+  }\n \n   const getOverallGrade = () => {\n-    const grades = observation.parameters.map(p => p.grade);\n+    const grades = observation.parameters.map(p => p.grade)\n     // Simple average calculation for demo\n     const gradePoints = grades.map(g => {\n-      switch(g) {\n-        case 'A+': return 10;\n-        case 'A': return 9;\n-        case 'B+': return 8;\n-        case 'B': return 7;\n-        case 'C+': return 6;\n-        case 'C': return 5;\n-        case 'D': return 4;\n-        case 'E': return 3;\n-        default: return 0;\n+      switch (g) {\n+        case 'A+':\n+          return 10\n+        case 'A':\n+          return 9\n+        case 'B+':\n+          return 8\n+        case 'B':\n+          return 7\n+        case 'C+':\n+          return 6\n+        case 'C':\n+          return 5\n+        case 'D':\n+          return 4\n+        case 'E':\n+          return 3\n+        default:\n+          return 0\n       }\n-    });\n-    const avg = Array.isArray(gradePoints) ? gradePoints.reduce((sum, p) => sum + p, 0) / gradePoints.length : 0;\n-    \n-    if (avg >= 9.5) return 'A+';\n-    if (avg >= 8.5) return 'A';\n-    if (avg >= 7.5) return 'B+';\n-    if (avg >= 6.5) return 'B';\n-    if (avg >= 5.5) return 'C+';\n-    if (avg >= 4.5) return 'C';\n-    if (avg >= 3.5) return 'D';\n-    return 'E';\n-  };\n+    })\n+    const avg = Array.isArray(gradePoints)\n+      ? gradePoints.reduce((sum, p) => sum + p, 0) / gradePoints.length\n+      : 0\n \n+    if (avg >= 9.5) return 'A+'\n+    if (avg >= 8.5) return 'A'\n+    if (avg >= 7.5) return 'B+'\n+    if (avg >= 6.5) return 'B'\n+    if (avg >= 5.5) return 'C+'\n+    if (avg >= 4.5) return 'C'\n+    if (avg >= 3.5) return 'D'\n+    return 'E'\n+  }\n+\n   return (\n     <div className=\"bg-white border rounded-lg p-4 hover:shadow-md transition-shadow\">\n       <div className=\"flex justify-between items-start mb-3\">\n         <div className=\"flex items-center gap-3\">\n@@ -69,14 +89,17 @@\n           </div>\n           <div>\n             <h3 className=\"font-medium\">{observation.studentName}</h3>\n             <p className=\"text-sm text-gray-500\">\n-              {observation.className} - {observation.section} | Roll: {observation.rollNumber}\n+              {observation.className} - {observation.section} | Roll:{' '}\n+              {observation.rollNumber}\n             </p>\n           </div>\n         </div>\n         <div className=\"flex items-center gap-2\">\n-          <span className={`px-3 py-1 rounded-full text-sm font-medium ${getGradeColor(getOverallGrade())}`}>\n+          <span\n+            className={`px-3 py-1 rounded-full text-sm font-medium ${getGradeColor(getOverallGrade())}`}\n+          >\n             {getOverallGrade()}\n           </span>\n         </div>\n       </div>\n@@ -92,9 +115,10 @@\n           <Eye className=\"w-4 h-4\" />\n           <span>Observed by: {observation.observerName}</span>\n         </div>\n         <div className=\"text-sm text-gray-600\">\n-          <span className=\"font-medium\">Parameters assessed:</span> {observation.parameters.length}\n+          <span className=\"font-medium\">Parameters assessed:</span>{' '}\n+          {observation.parameters.length}\n         </div>\n       </div>\n \n       <div className=\"flex items-center justify-between\">\n@@ -131,37 +155,55 @@\n           </button>\n         </div>\n       </div>\n     </div>\n-  );\n-};\n+  )\n+}\n \n const ObservationDetailsDialog = ({ observation, open, onClose }) => {\n-  if (!observation) return null;\n+  if (!observation) return null\n \n-  const getGradeColor = (grade) => {\n+  const getGradeColor = grade => {\n     switch (grade) {\n-      case 'A+': case 'A': return 'text-green-600 bg-green-100';\n-      case 'B+': case 'B': return 'text-blue-600 bg-blue-100';\n-      case 'C+': case 'C': return 'text-yellow-600 bg-yellow-100';\n-      case 'D': case 'E': return 'text-red-600 bg-red-100';\n-      default: return 'text-gray-600 bg-gray-100';\n+      case 'A+':\n+      case 'A':\n+        return 'text-green-600 bg-green-100'\n+      case 'B+':\n+      case 'B':\n+        return 'text-blue-600 bg-blue-100'\n+      case 'C+':\n+      case 'C':\n+        return 'text-yellow-600 bg-yellow-100'\n+      case 'D':\n+      case 'E':\n+        return 'text-red-600 bg-red-100'\n+      default:\n+        return 'text-gray-600 bg-gray-100'\n     }\n-  };\n+  }\n \n-  const getGradeDescription = (grade) => {\n+  const getGradeDescription = grade => {\n     switch (grade) {\n-      case 'A+': return 'Outstanding';\n-      case 'A': return 'Excellent';\n-      case 'B+': return 'Very Good';\n-      case 'B': return 'Good';\n-      case 'C+': return 'Satisfactory';\n-      case 'C': return 'Acceptable';\n-      case 'D': return 'Needs Improvement';\n-      case 'E': return 'Unsatisfactory';\n-      default: return 'Not Assessed';\n+      case 'A+':\n+        return 'Outstanding'\n+      case 'A':\n+        return 'Excellent'\n+      case 'B+':\n+        return 'Very Good'\n+      case 'B':\n+        return 'Good'\n+      case 'C+':\n+        return 'Satisfactory'\n+      case 'C':\n+        return 'Acceptable'\n+      case 'D':\n+        return 'Needs Improvement'\n+      case 'E':\n+        return 'Unsatisfactory'\n+      default:\n+        return 'Not Assessed'\n     }\n-  };\n+  }\n \n   return (\n     <Dialog open={open} onClose={onClose} title=\"Observation Details\" size=\"xl\">\n       <div className=\"space-y-6\">\n@@ -169,9 +211,10 @@\n         <div className=\"flex justify-between items-start\">\n           <div>\n             <h2 className=\"text-xl font-semibold\">{observation.studentName}</h2>\n             <p className=\"text-gray-600\">\n-              {observation.className} - {observation.section} | Roll: {observation.rollNumber}\n+              {observation.className} - {observation.section} | Roll:{' '}\n+              {observation.rollNumber}\n             </p>\n           </div>\n           <div className=\"text-right\">\n             <div className=\"text-sm text-gray-500\">Overall Performance</div>\n@@ -181,52 +224,67 @@\n \n         {/* Basic Info */}\n         <div className=\"grid grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg\">\n           <div>\n-            <label className=\"block text-sm font-medium text-gray-700\">Term</label>\n+            <label className=\"block text-sm font-medium text-gray-700\">\n+              Term\n+            </label>\n             <p className=\"text-sm\">{observation.term}</p>\n           </div>\n           <div>\n-            <label className=\"block text-sm font-medium text-gray-700\">Subject</label>\n+            <label className=\"block text-sm font-medium text-gray-700\">\n+              Subject\n+            </label>\n             <p className=\"text-sm\">{observation.subjectName}</p>\n           </div>\n           <div>\n-            <label className=\"block text-sm font-medium text-gray-700\">Observer</label>\n+            <label className=\"block text-sm font-medium text-gray-700\">\n+              Observer\n+            </label>\n             <p className=\"text-sm\">{observation.observerName}</p>\n           </div>\n           <div>\n-            <label className=\"block text-sm font-medium text-gray-700\">Date</label>\n-            <p className=\"text-sm\">{new Date(observation.observationDate).toLocaleDateString()}</p>\n+            <label className=\"block text-sm font-medium text-gray-700\">\n+              Date\n+            </label>\n+            <p className=\"text-sm\">\n+              {new Date(observation.observationDate).toLocaleDateString()}\n+            </p>\n           </div>\n         </div>\n \n         {/* Parameters Assessment */}\n         <div>\n           <h3 className=\"text-lg font-medium mb-4\">Parameter Assessment</h3>\n           <div className=\"space-y-4\">\n-            {Array.isArray(observation.parameters) && observation.parameters.map((param, index) => (\n-              <div key={index} className=\"border rounded-lg p-4\">\n-                <div className=\"flex justify-between items-start mb-2\">\n-                  <div>\n-                    <h4 className=\"font-medium\">{param.parameterName}</h4>\n-                    <p className=\"text-sm text-gray-600\">{param.description}</p>\n+            {Array.isArray(observation.parameters) &&\n+              observation.parameters.map((param, index) => (\n+                <div key={index} className=\"border rounded-lg p-4\">\n+                  <div className=\"flex justify-between items-start mb-2\">\n+                    <div>\n+                      <h4 className=\"font-medium\">{param.parameterName}</h4>\n+                      <p className=\"text-sm text-gray-600\">\n+                        {param.description}\n+                      </p>\n+                    </div>\n+                    <div className=\"text-right\">\n+                      <span\n+                        className={`px-3 py-1 rounded-full text-sm font-medium ${getGradeColor(param.grade)}`}\n+                      >\n+                        {param.grade}\n+                      </span>\n+                      <div className=\"text-xs text-gray-500 mt-1\">\n+                        {getGradeDescription(param.grade)}\n+                      </div>\n+                    </div>\n                   </div>\n-                  <div className=\"text-right\">\n-                    <span className={`px-3 py-1 rounded-full text-sm font-medium ${getGradeColor(param.grade)}`}>\n-                      {param.grade}\n-                    </span>\n-                    <div className=\"text-xs text-gray-500 mt-1\">\n-                      {getGradeDescription(param.grade)}\n+                  {param.remarks && (\n+                    <div className=\"mt-2 p-2 bg-gray-50 rounded text-sm\">\n+                      <strong>Remarks:</strong> {param.remarks}\n                     </div>\n-                  </div>\n+                  )}\n                 </div>\n-                {param.remarks && (\n-                  <div className=\"mt-2 p-2 bg-gray-50 rounded text-sm\">\n-                    <strong>Remarks:</strong> {param.remarks}\n-                  </div>\n-                )}\n-              </div>\n-            ))}\n+              ))}\n           </div>\n         </div>\n \n         {/* Overall Comments */}\n@@ -239,21 +297,23 @@\n           </div>\n         )}\n \n         {/* Recommendations */}\n-        {observation.recommendations && observation.recommendations.length > 0 && (\n-          <div>\n-            <h3 className=\"text-lg font-medium mb-2\">Recommendations</h3>\n-            <ul className=\"space-y-2\">\n-              {Array.isArray(observation.recommendations) && observation.recommendations.map((rec, index) => (\n-                <li key={index} className=\"flex items-start gap-2\">\n-                  <Target className=\"w-4 h-4 text-blue-600 mt-0.5 flex-shrink-0\" />\n-                  <span className=\"text-sm\">{rec}</span>\n-                </li>\n-              ))}\n-            </ul>\n-          </div>\n-        )}\n+        {observation.recommendations &&\n+          observation.recommendations.length > 0 && (\n+            <div>\n+              <h3 className=\"text-lg font-medium mb-2\">Recommendations</h3>\n+              <ul className=\"space-y-2\">\n+                {Array.isArray(observation.recommendations) &&\n+                  observation.recommendations.map((rec, index) => (\n+                    <li key={index} className=\"flex items-start gap-2\">\n+                      <Target className=\"w-4 h-4 text-blue-600 mt-0.5 flex-shrink-0\" />\n+                      <span className=\"text-sm\">{rec}</span>\n+                    </li>\n+                  ))}\n+              </ul>\n+            </div>\n+          )}\n \n         {/* Actions */}\n         <div className=\"flex justify-end gap-2\">\n           <button\n@@ -268,72 +328,81 @@\n           </button>\n         </div>\n       </div>\n     </Dialog>\n-  );\n-};\n+  )\n+}\n \n const Observation = () => {\n-  const [searchTerm, setSearchTerm] = useState('');\n-  const [termFilter, setTermFilter] = useState('all');\n-  const [classFilter, setClassFilter] = useState('all');\n-  const [subjectFilter, setSubjectFilter] = useState('all');\n-  const [selectedObservation, setSelectedObservation] = useState(null);\n-  const [showDetails, setShowDetails] = useState(false);\n+  const [searchTerm, setSearchTerm] = useState('')\n+  const [termFilter, setTermFilter] = useState('all')\n+  const [classFilter, setClassFilter] = useState('all')\n+  const [subjectFilter, setSubjectFilter] = useState('all')\n+  const [selectedObservation, setSelectedObservation] = useState(null)\n+  const [showDetails, setShowDetails] = useState(false)\n \n   const { data: observationsData, isLoading } = useQuery({\n-    queryKey: ['observations', searchTerm, termFilter, classFilter, subjectFilter],\n-    queryFn: () => observationApi.getObservations({\n-      search: searchTerm,\n-      term: termFilter,\n-      classId: classFilter,\n-      subjectId: subjectFilter\n-    })\n-  });\n+    queryKey: [\n+      'observations',\n+      searchTerm,\n+      termFilter,\n+      classFilter,\n+      subjectFilter,\n+    ],\n+    queryFn: () =>\n+      observationApi.getObservations({\n+        search: searchTerm,\n+        term: termFilter,\n+        classId: classFilter,\n+        subjectId: subjectFilter,\n+      }),\n+  })\n \n   const { data: classesData } = useQuery({\n     queryKey: ['classes', 'all'],\n-    queryFn: () => observationApi.getClasses()\n-  });\n+    queryFn: () => observationApi.getClasses(),\n+  })\n \n   const { data: subjectsData } = useQuery({\n     queryKey: ['subjects', 'all'],\n-    queryFn: () => observationApi.getSubjects()\n-  });\n+    queryFn: () => observationApi.getSubjects(),\n+  })\n \n-  const handleViewObservation = (observation) => {\n-    setSelectedObservation(observation);\n-    setShowDetails(true);\n-  };\n+  const handleViewObservation = observation => {\n+    setSelectedObservation(observation)\n+    setShowDetails(true)\n+  }\n \n-  const handleEditObservation = (observation) => {\n+  const handleEditObservation = observation => {\n     // Navigate to edit form\n-    console.log('Edit observation:', observation.id);\n-  };\n+    console.log('Edit observation:', observation.id)\n+  }\n \n-  const filteredObservations = observationsData?.data || [];\n+  const filteredObservations = observationsData?.data || []\n \n   const getStatistics = () => {\n-    const total = filteredObservations.length;\n+    const total = filteredObservations.length\n     const gradeDistribution = filteredObservations.reduce((acc, obs) => {\n       obs.parameters.forEach(param => {\n-        acc[param.grade] = (acc[param.grade] || 0) + 1;\n-      });\n-      return acc;\n-    }, {});\n+        acc[param.grade] = (acc[param.grade] || 0) + 1\n+      })\n+      return acc\n+    }, {})\n \n     return {\n       total,\n       excellent: (gradeDistribution['A+'] || 0) + (gradeDistribution['A'] || 0),\n       good: (gradeDistribution['B+'] || 0) + (gradeDistribution['B'] || 0),\n-      satisfactory: (gradeDistribution['C+'] || 0) + (gradeDistribution['C'] || 0),\n-      needsImprovement: (gradeDistribution['D'] || 0) + (gradeDistribution['E'] || 0)\n-    };\n-  };\n+      satisfactory:\n+        (gradeDistribution['C+'] || 0) + (gradeDistribution['C'] || 0),\n+      needsImprovement:\n+        (gradeDistribution['D'] || 0) + (gradeDistribution['E'] || 0),\n+    }\n+  }\n \n-  const stats = getStatistics();\n+  const stats = getStatistics()\n \n-  if (isLoading) return <LoadingSkeleton />;\n+  if (isLoading) return <LoadingSkeleton />\n \n   return (\n     <div className=\"space-y-6\">\n       <div className=\"flex justify-between items-center\">\n@@ -407,15 +476,15 @@\n             <input\n               type=\"text\"\n               placeholder=\"Search students...\"\n               value={searchTerm}\n-              onChange={(e) => setSearchTerm(e.target.value)}\n+              onChange={e => setSearchTerm(e.target.value)}\n               className=\"w-full pl-10 pr-4 py-2 border rounded-lg\"\n             />\n           </div>\n           <select\n             value={termFilter}\n-            onChange={(e) => setTermFilter(e.target.value)}\n+            onChange={e => setTermFilter(e.target.value)}\n             className=\"border rounded-lg px-3 py-2\"\n           >\n             <option value=\"all\">All Terms</option>\n             <option value=\"term1\">Term 1</option>\n@@ -423,29 +492,31 @@\n             <option value=\"annual\">Annual</option>\n           </select>\n           <select\n             value={classFilter}\n-            onChange={(e) => setClassFilter(e.target.value)}\n+            onChange={e => setClassFilter(e.target.value)}\n             className=\"border rounded-lg px-3 py-2\"\n           >\n             <option value=\"all\">All Classes</option>\n-            {Array.isArray(classesData?.data) && classesData.data.map(cls => (\n-              <option key={cls.id} value={cls.id}>\n-                {cls.name}\n-              </option>\n-            ))}\n+            {Array.isArray(classesData?.data) &&\n+              classesData.data.map(cls => (\n+                <option key={cls.id} value={cls.id}>\n+                  {cls.name}\n+                </option>\n+              ))}\n           </select>\n           <select\n             value={subjectFilter}\n-            onChange={(e) => setSubjectFilter(e.target.value)}\n+            onChange={e => setSubjectFilter(e.target.value)}\n             className=\"border rounded-lg px-3 py-2\"\n           >\n             <option value=\"all\">All Subjects</option>\n-            {Array.isArray(subjectsData?.data) && subjectsData.data.map(subject => (\n-              <option key={subject.id} value={subject.id}>\n-                {subject.name}\n-              </option>\n-            ))}\n+            {Array.isArray(subjectsData?.data) &&\n+              subjectsData.data.map(subject => (\n+                <option key={subject.id} value={subject.id}>\n+                  {subject.name}\n+                </option>\n+              ))}\n           </select>\n           <button className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n             <Filter className=\"w-4 h-4\" />\n             More Filters\n@@ -457,21 +528,26 @@\n       <div className=\"space-y-4\">\n         {filteredObservations.length === 0 ? (\n           <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n             <Eye className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n-            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Observations Found</h3>\n-            <p className=\"text-gray-500\">No observations match your current filters.</p>\n+            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n+              No Observations Found\n+            </h3>\n+            <p className=\"text-gray-500\">\n+              No observations match your current filters.\n+            </p>\n           </div>\n         ) : (\n           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n-            {Array.isArray(filteredObservations) && filteredObservations.map(observation => (\n-              <ObservationCard\n-                key={observation.id}\n-                observation={observation}\n-                onView={handleViewObservation}\n-                onEdit={handleEditObservation}\n-              />\n-            ))}\n+            {Array.isArray(filteredObservations) &&\n+              filteredObservations.map(observation => (\n+                <ObservationCard\n+                  key={observation.id}\n+                  observation={observation}\n+                  onView={handleViewObservation}\n+                  onEdit={handleEditObservation}\n+                />\n+              ))}\n           </div>\n         )}\n       </div>\n \n@@ -481,8 +557,8 @@\n         open={showDetails}\n         onClose={() => setShowDetails(false)}\n       />\n     </div>\n-  );\n-};\n+  )\n+}\n\\ No newline at end of file\n \n-export default Observation;\n+export default Observation\n"
                }
            ],
            "date": 1755986163481,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport { useState } from 'react'\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { \n  Eye,\n  User,\n  Calendar,\n  BookOpen,\n  Star,\n  TrendingUp,\n  Filter,\n  Search,\n  Download,\n  Plus,\n  Edit,\n  FileText,\n  Award,\n  Target\n} from 'lucide-react';\nimport Input from '../../components/ui/Input';\nimport Dialog from '../../components/ui/Dialog';\nimport LoadingSkeleton from '../../components/ui/LoadingSkeleton';\nimport { observationApi } from '../../lib/api/observation';\n\nconst ObservationCard = ({ observation, onView, onEdit }) => {\n  const getGradeColor = (grade) => {\n    switch (grade) {\n      case 'A+': case 'A': return 'text-green-600 bg-green-100';\n      case 'B+': case 'B': return 'text-blue-600 bg-blue-100';\n      case 'C+': case 'C': return 'text-yellow-600 bg-yellow-100';\n      case 'D': case 'E': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getOverallGrade = () => {\n    const grades = observation.parameters.map(p => p.grade);\n    // Simple average calculation for demo\n    const gradePoints = grades.map(g => {\n      switch(g) {\n        case 'A+': return 10;\n        case 'A': return 9;\n        case 'B+': return 8;\n        case 'B': return 7;\n        case 'C+': return 6;\n        case 'C': return 5;\n        case 'D': return 4;\n        case 'E': return 3;\n        default: return 0;\n      }\n    });\n    const avg = Array.isArray(gradePoints) ? gradePoints.reduce((sum, p) => sum + p, 0) / gradePoints.length;\n    \n    if (avg >= 9.5) return 'A+';\n    if (avg >= 8.5) return 'A';\n    if (avg >= 7.5) return 'B+';\n    if (avg >= 6.5) return 'B';\n    if (avg >= 5.5) return 'C+';\n    if (avg >= 4.5) return 'C';\n    if (avg >= 3.5) return 'D';\n    return 'E';\n  };\n\n  return (\n    <div className=\"bg-white border rounded-lg p-4 hover:shadow-md transition-shadow\">\n      <div className=\"flex justify-between items-start mb-3\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center\">\n            <User className=\"w-5 h-5 text-gray-600\" />\n          </div>\n          <div>\n            <h3 className=\"font-medium\">{observation.studentName}</h3>\n            <p className=\"text-sm text-gray-500\">\n              {observation.className} - {observation.section} | Roll: {observation.rollNumber}\n            </p>\n          </div>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <span className={`px-3 py-1 rounded-full text-sm font-medium ${getGradeColor(getOverallGrade())}`}>\n            {getOverallGrade()}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"space-y-2 mb-4\">\n        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n          <Calendar className=\"w-4 h-4\" />\n          <span>Term: {observation.term}</span>\n          <BookOpen className=\"w-4 h-4 ml-2\" />\n          <span>Subject: {observation.subjectName}</span>\n        </div>\n        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n          <Eye className=\"w-4 h-4\" />\n          <span>Observed by: {observation.observerName}</span>\n        </div>\n        <div className=\"text-sm text-gray-600\">\n          <span className=\"font-medium\">Parameters assessed:</span> {observation.parameters.length}\n        </div>\n      </div>\n\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex gap-1\">\n          {observation.parameters.slice(0, 4).map((param, index) => (\n            <div\n              key={index}\n              className={`w-6 h-6 rounded text-xs flex items-center justify-center font-medium ${getGradeColor(param.grade)}`}\n              title={`${param.parameterName}: ${param.grade}`}\n            >\n              {param.grade}\n            </div>\n          ))}\n          {observation.parameters.length > 4 && (\n            <div className=\"w-6 h-6 rounded bg-gray-100 text-xs flex items-center justify-center text-gray-600\">\n              +{observation.parameters.length - 4}\n            </div>\n          )}\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => onView(observation)}\n            className=\"p-1 text-gray-400 hover:text-blue-600\"\n            title=\"View Details\"\n          >\n            <Eye className=\"w-4 h-4\" />\n          </button>\n          <button\n            onClick={() => onEdit(observation)}\n            className=\"p-1 text-gray-400 hover:text-green-600\"\n            title=\"Edit\"\n          >\n            <Edit className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ObservationDetailsDialog = ({ observation, open, onClose }) => {\n  if (!observation) return null;\n\n  const getGradeColor = (grade) => {\n    switch (grade) {\n      case 'A+': case 'A': return 'text-green-600 bg-green-100';\n      case 'B+': case 'B': return 'text-blue-600 bg-blue-100';\n      case 'C+': case 'C': return 'text-yellow-600 bg-yellow-100';\n      case 'D': case 'E': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getGradeDescription = (grade) => {\n    switch (grade) {\n      case 'A+': return 'Outstanding';\n      case 'A': return 'Excellent';\n      case 'B+': return 'Very Good';\n      case 'B': return 'Good';\n      case 'C+': return 'Satisfactory';\n      case 'C': return 'Acceptable';\n      case 'D': return 'Needs Improvement';\n      case 'E': return 'Unsatisfactory';\n      default: return 'Not Assessed';\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} title=\"Observation Details\" size=\"xl\">\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <h2 className=\"text-xl font-semibold\">{observation.studentName}</h2>\n            <p className=\"text-gray-600\">\n              {observation.className} - {observation.section} | Roll: {observation.rollNumber}\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-sm text-gray-500\">Overall Performance</div>\n            <div className=\"text-2xl font-bold text-blue-600\">A</div>\n          </div>\n        </div>\n\n        {/* Basic Info */}\n        <div className=\"grid grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Term</label>\n            <p className=\"text-sm\">{observation.term}</p>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Subject</label>\n            <p className=\"text-sm\">{observation.subjectName}</p>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Observer</label>\n            <p className=\"text-sm\">{observation.observerName}</p>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Date</label>\n            <p className=\"text-sm\">{new Date(observation.observationDate).toLocaleDateString()}</p>\n          </div>\n        </div>\n\n        {/* Parameters Assessment */}\n        <div>\n          <h3 className=\"text-lg font-medium mb-4\">Parameter Assessment</h3>\n          <div className=\"space-y-4\">\n            {Array.isArray(observation.parameters) && observation.parameters.map((param, index) => (\n              <div key={index} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{param.parameterName}</h4>\n                    <p className=\"text-sm text-gray-600\">{param.description}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className={`px-3 py-1 rounded-full text-sm font-medium ${getGradeColor(param.grade)}`}>\n                      {param.grade}\n                    </span>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      {getGradeDescription(param.grade)}\n                    </div>\n                  </div>\n                </div>\n                {param.remarks && (\n                  <div className=\"mt-2 p-2 bg-gray-50 rounded text-sm\">\n                    <strong>Remarks:</strong> {param.remarks}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Overall Comments */}\n        {observation.overallComments && (\n          <div>\n            <h3 className=\"text-lg font-medium mb-2\">Overall Comments</h3>\n            <div className=\"p-4 bg-blue-50 rounded-lg\">\n              <p className=\"text-sm\">{observation.overallComments}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Recommendations */}\n        {observation.recommendations && observation.recommendations.length > 0 && (\n          <div>\n            <h3 className=\"text-lg font-medium mb-2\">Recommendations</h3>\n            <ul className=\"space-y-2\">\n              {Array.isArray(observation.recommendations) && observation.recommendations.map((rec, index) => (\n                <li key={index} className=\"flex items-start gap-2\">\n                  <Target className=\"w-4 h-4 text-blue-600 mt-0.5 flex-shrink-0\" />\n                  <span className=\"text-sm\">{rec}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {/* Actions */}\n        <div className=\"flex justify-end gap-2\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 border rounded-lg hover:bg-gray-50\"\n          >\n            Close\n          </button>\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\">\n            <Download className=\"w-4 h-4\" />\n            Download Report\n          </button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nconst Observation = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [termFilter, setTermFilter] = useState('all');\n  const [classFilter, setClassFilter] = useState('all');\n  const [subjectFilter, setSubjectFilter] = useState('all');\n  const [selectedObservation, setSelectedObservation] = useState(null);\n  const [showDetails, setShowDetails] = useState(false);\n\n  const { data: observationsData, isLoading } = useQuery({\n    queryKey: ['observations', searchTerm, termFilter, classFilter, subjectFilter],\n    queryFn: () => observationApi.getObservations({\n      search: searchTerm,\n      term: termFilter,\n      classId: classFilter,\n      subjectId: subjectFilter\n    })\n  });\n\n  const { data: classesData } = useQuery({\n    queryKey: ['classes', 'all'],\n    queryFn: () => observationApi.getClasses()\n  });\n\n  const { data: subjectsData } = useQuery({\n    queryKey: ['subjects', 'all'],\n    queryFn: () => observationApi.getSubjects()\n  });\n\n  const handleViewObservation = (observation) => {\n    setSelectedObservation(observation);\n    setShowDetails(true);\n  };\n\n  const handleEditObservation = (observation) => {\n    // Navigate to edit form\n    console.log('Edit observation:', observation.id);\n  };\n\n  const filteredObservations = observationsData?.data || [];\n\n  const getStatistics = () => {\n    const total = filteredObservations.length;\n    const gradeDistribution = filteredObservations.reduce((acc, obs) => {\n      obs.parameters.forEach(param => {\n        acc[param.grade] = (acc[param.grade] || 0) + 1;\n      }) : 0;\n      return acc;\n    }, {});\n\n    return {\n      total,\n      excellent: (gradeDistribution['A+'] || 0) + (gradeDistribution['A'] || 0),\n      good: (gradeDistribution['B+'] || 0) + (gradeDistribution['B'] || 0),\n      satisfactory: (gradeDistribution['C+'] || 0) + (gradeDistribution['C'] || 0),\n      needsImprovement: (gradeDistribution['D'] || 0) + (gradeDistribution['E'] || 0)\n    };\n  };\n\n  const stats = getStatistics();\n\n  if (isLoading) return <LoadingSkeleton />;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">Student Observations</h1>\n        <div className=\"flex gap-2\">\n          <button className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n            <Download className=\"w-4 h-4\" />\n            Export Report\n          </button>\n          <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\">\n            <Plus className=\"w-4 h-4\" />\n            New Observation\n          </button>\n        </div>\n      </div>\n\n      {/* Statistics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Eye className=\"w-8 h-8 text-blue-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">{stats.total}</p>\n              <p className=\"text-sm text-gray-600\">Total Observations</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Star className=\"w-8 h-8 text-green-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">{stats.excellent}</p>\n              <p className=\"text-sm text-gray-600\">Excellent (A+/A)</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Award className=\"w-8 h-8 text-blue-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">{stats.good}</p>\n              <p className=\"text-sm text-gray-600\">Good (B+/B)</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <Target className=\"w-8 h-8 text-yellow-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">{stats.satisfactory}</p>\n              <p className=\"text-sm text-gray-600\">Satisfactory (C+/C)</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center gap-3\">\n            <TrendingUp className=\"w-8 h-8 text-red-600\" />\n            <div>\n              <p className=\"text-2xl font-bold\">{stats.needsImprovement}</p>\n              <p className=\"text-sm text-gray-600\">Needs Improvement</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search students...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border rounded-lg\"\n            />\n          </div>\n          <select\n            value={termFilter}\n            onChange={(e) => setTermFilter(e.target.value)}\n            className=\"border rounded-lg px-3 py-2\"\n          >\n            <option value=\"all\">All Terms</option>\n            <option value=\"term1\">Term 1</option>\n            <option value=\"term2\">Term 2</option>\n            <option value=\"annual\">Annual</option>\n          </select>\n          <select\n            value={classFilter}\n            onChange={(e) => setClassFilter(e.target.value)}\n            className=\"border rounded-lg px-3 py-2\"\n          >\n            <option value=\"all\">All Classes</option>\n            {Array.isArray(classesData?.data) && classesData.data.map(cls => (\n              <option key={cls.id} value={cls.id}>\n                {cls.name}\n              </option>\n            ))}\n          </select>\n          <select\n            value={subjectFilter}\n            onChange={(e) => setSubjectFilter(e.target.value)}\n            className=\"border rounded-lg px-3 py-2\"\n          >\n            <option value=\"all\">All Subjects</option>\n            {Array.isArray(subjectsData?.data) && subjectsData.data.map(subject => (\n              <option key={subject.id} value={subject.id}>\n                {subject.name}\n              </option>\n            ))}\n          </select>\n          <button className=\"border px-4 py-2 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n            <Filter className=\"w-4 h-4\" />\n            More Filters\n          </button>\n        </div>\n      </div>\n\n      {/* Observations List */}\n      <div className=\"space-y-4\">\n        {filteredObservations.length === 0 ? (\n          <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n            <Eye className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Observations Found</h3>\n            <p className=\"text-gray-500\">No observations match your current filters.</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n            {Array.isArray(filteredObservations) && filteredObservations.map(observation => (\n              <ObservationCard\n                key={observation.id}\n                observation={observation}\n                onView={handleViewObservation}\n                onEdit={handleEditObservation}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Observation Details Dialog */}\n      <ObservationDetailsDialog\n        observation={selectedObservation}\n        open={showDetails}\n        onClose={() => setShowDetails(false)}\n      />\n    </div>\n  );\n};\n\nexport default Observation;"
        }
    ]
}